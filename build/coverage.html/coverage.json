{"/home/travis/build/npmtest/node-npmtest-prismjs/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_prismjs */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/lib.npmtest_prismjs.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/lib.npmtest_prismjs.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":52}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":58}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_prismjs */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_prismjs = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_prismjs = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":51}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":65},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-prismjs && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_prismjs */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_prismjs","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_prismjs.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_prismjs.rollup.js'] =","            local.assetsDict['/assets.npmtest_prismjs.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_prismjs.__dirname + '/lib.npmtest_prismjs.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/prism.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/prism.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":12265,"12":4790,"13":345,"14":4790,"15":364,"16":364,"17":111,"18":111,"19":341,"20":341,"21":111,"22":8,"23":16,"24":245,"25":6,"26":6,"27":15,"28":6,"29":13,"30":13,"31":13,"32":0,"33":0,"34":0,"35":0,"36":0,"37":13,"38":13,"39":120,"40":120,"41":13,"42":16,"43":16,"44":120,"45":13,"46":6958,"47":8,"48":13,"49":2155,"50":2155,"51":6958,"52":6958,"53":6958,"54":2015,"55":2015,"56":4943,"57":127,"58":127,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":2,"159":2,"160":2,"161":0,"162":0,"163":0,"164":0,"165":0,"166":1,"167":0,"168":0,"169":0,"170":0,"171":0,"172":1,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":1,"189":1,"190":1,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":1,"208":1,"209":1,"210":1,"211":1,"212":1,"213":0,"214":0,"215":1,"216":1,"217":1,"218":1,"219":1,"220":1,"221":1,"222":1,"223":1,"224":1,"225":1,"226":1,"227":1,"228":1,"229":1,"230":1,"231":1,"232":1,"233":1,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0},"b":{"1":[0,1],"2":[0,1],"3":[1,0],"4":[0,0],"5":[0,0],"6":[345,4445],"7":[111,8],"8":[341,0],"9":[8,8],"10":[13,11],"11":[0,13],"12":[0,0],"13":[120,0],"14":[13,107],"15":[16,0],"16":[8,6950],"17":[6958,21],"18":[2155,13],"19":[6958,0],"20":[6958,6681],"21":[2015,4943],"22":[6958,2494],"23":[127,4816],"24":[4943,154],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[2,1],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[1,0],"71":[1,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[1,0],"80":[1,1],"81":[1,0],"82":[0,0],"83":[1,0],"84":[1,0],"85":[1,0],"86":[1,0,0,0],"87":[0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0],"95":[0,0],"96":[0,0],"97":[0,0]},"f":{"1":1,"2":0,"3":12265,"4":4790,"5":364,"6":16,"7":6,"8":13,"9":6958,"10":2155,"11":0,"12":0,"13":0,"14":0,"15":0,"16":2,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0},"fnMap":{"1":{"name":"(anonymous_1)","line":20,"loc":{"start":{"line":20,"column":13},"end":{"line":20,"column":23}}},"2":{"name":"(anonymous_2)","line":28,"loc":{"start":{"line":28,"column":10},"end":{"line":28,"column":28}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":8},"end":{"line":38,"column":21}}},"4":{"name":"(anonymous_4)","line":42,"loc":{"start":{"line":42,"column":9},"end":{"line":42,"column":24}}},"5":{"name":"(anonymous_5)","line":50,"loc":{"start":{"line":50,"column":9},"end":{"line":50,"column":22}}},"6":{"name":"(anonymous_6)","line":67,"loc":{"start":{"line":67,"column":27},"end":{"line":67,"column":39}}},"7":{"name":"(anonymous_7)","line":75,"loc":{"start":{"line":75,"column":10},"end":{"line":75,"column":31}}},"8":{"name":"(anonymous_8)","line":94,"loc":{"start":{"line":94,"column":16},"end":{"line":94,"column":56}}},"9":{"name":"(anonymous_9)","line":131,"loc":{"start":{"line":131,"column":32},"end":{"line":131,"column":53}}},"10":{"name":"(anonymous_10)","line":141,"loc":{"start":{"line":141,"column":7},"end":{"line":141,"column":44}}},"11":{"name":"(anonymous_11)","line":161,"loc":{"start":{"line":161,"column":15},"end":{"line":161,"column":41}}},"12":{"name":"(anonymous_12)","line":176,"loc":{"start":{"line":176,"column":19},"end":{"line":176,"column":54}}},"13":{"name":"(anonymous_13)","line":223,"loc":{"start":{"line":223,"column":22},"end":{"line":223,"column":36}}},"14":{"name":"(anonymous_14)","line":255,"loc":{"start":{"line":255,"column":12},"end":{"line":255,"column":47}}},"15":{"name":"(anonymous_15)","line":260,"loc":{"start":{"line":260,"column":11},"end":{"line":260,"column":45}}},"16":{"name":"(anonymous_16)","line":393,"loc":{"start":{"line":393,"column":7},"end":{"line":393,"column":33}}},"17":{"name":"(anonymous_17)","line":401,"loc":{"start":{"line":401,"column":7},"end":{"line":401,"column":28}}},"18":{"name":"(anonymous_18)","line":415,"loc":{"start":{"line":415,"column":22},"end":{"line":415,"column":73}}},"19":{"name":"(anonymous_19)","line":424,"loc":{"start":{"line":424,"column":18},"end":{"line":424,"column":48}}},"20":{"name":"(anonymous_20)","line":430,"loc":{"start":{"line":430,"column":15},"end":{"line":430,"column":33}}},"21":{"name":"(anonymous_21)","line":456,"loc":{"start":{"line":456,"column":50},"end":{"line":456,"column":65}}},"22":{"name":"(anonymous_22)","line":470,"loc":{"start":{"line":470,"column":35},"end":{"line":470,"column":49}}},"23":{"name":"(anonymous_23)","line":558,"loc":{"start":{"line":558,"column":24},"end":{"line":558,"column":38}}},"24":{"name":"(anonymous_24)","line":719,"loc":{"start":{"line":719,"column":1},"end":{"line":719,"column":13}}},"25":{"name":"(anonymous_25)","line":724,"loc":{"start":{"line":724,"column":28},"end":{"line":724,"column":39}}},"26":{"name":"(anonymous_26)","line":739,"loc":{"start":{"line":739,"column":82},"end":{"line":739,"column":97}}},"27":{"name":"(anonymous_27)","line":770,"loc":{"start":{"line":770,"column":29},"end":{"line":770,"column":41}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":12,"column":3}},"2":{"start":{"line":20,"column":0},"end":{"line":507,"column":5}},"3":{"start":{"line":23,"column":0},"end":{"line":23,"column":38}},"4":{"start":{"line":24,"column":0},"end":{"line":24,"column":17}},"5":{"start":{"line":26,"column":0},"end":{"line":413,"column":2}},"6":{"start":{"line":29,"column":3},"end":{"line":35,"column":4}},"7":{"start":{"line":30,"column":4},"end":{"line":30,"column":79}},"8":{"start":{"line":31,"column":10},"end":{"line":35,"column":4}},"9":{"start":{"line":32,"column":4},"end":{"line":32,"column":37}},"10":{"start":{"line":34,"column":4},"end":{"line":34,"column":87}},"11":{"start":{"line":39,"column":3},"end":{"line":39,"column":73}},"12":{"start":{"line":43,"column":3},"end":{"line":45,"column":4}},"13":{"start":{"line":44,"column":4},"end":{"line":44,"column":62}},"14":{"start":{"line":46,"column":3},"end":{"line":46,"column":22}},"15":{"start":{"line":51,"column":3},"end":{"line":51,"column":29}},"16":{"start":{"line":53,"column":3},"end":{"line":68,"column":4}},"17":{"start":{"line":55,"column":5},"end":{"line":55,"column":20}},"18":{"start":{"line":57,"column":5},"end":{"line":61,"column":6}},"19":{"start":{"line":58,"column":6},"end":{"line":60,"column":7}},"20":{"start":{"line":59,"column":7},"end":{"line":59,"column":41}},"21":{"start":{"line":63,"column":5},"end":{"line":63,"column":18}},"22":{"start":{"line":67,"column":5},"end":{"line":67,"column":68}},"23":{"start":{"line":67,"column":41},"end":{"line":67,"column":64}},"24":{"start":{"line":70,"column":3},"end":{"line":70,"column":12}},"25":{"start":{"line":76,"column":3},"end":{"line":76,"column":44}},"26":{"start":{"line":78,"column":3},"end":{"line":80,"column":4}},"27":{"start":{"line":79,"column":4},"end":{"line":79,"column":27}},"28":{"start":{"line":82,"column":3},"end":{"line":82,"column":15}},"29":{"start":{"line":95,"column":3},"end":{"line":95,"column":30}},"30":{"start":{"line":96,"column":3},"end":{"line":96,"column":30}},"31":{"start":{"line":98,"column":3},"end":{"line":108,"column":4}},"32":{"start":{"line":99,"column":4},"end":{"line":99,"column":26}},"33":{"start":{"line":101,"column":4},"end":{"line":105,"column":5}},"34":{"start":{"line":102,"column":5},"end":{"line":104,"column":6}},"35":{"start":{"line":103,"column":6},"end":{"line":103,"column":43}},"36":{"start":{"line":107,"column":4},"end":{"line":107,"column":19}},"37":{"start":{"line":110,"column":3},"end":{"line":110,"column":16}},"38":{"start":{"line":112,"column":3},"end":{"line":128,"column":4}},"39":{"start":{"line":114,"column":4},"end":{"line":127,"column":5}},"40":{"start":{"line":116,"column":5},"end":{"line":124,"column":6}},"41":{"start":{"line":118,"column":6},"end":{"line":123,"column":7}},"42":{"start":{"line":120,"column":7},"end":{"line":122,"column":8}},"43":{"start":{"line":121,"column":8},"end":{"line":121,"column":41}},"44":{"start":{"line":126,"column":5},"end":{"line":126,"column":33}},"45":{"start":{"line":131,"column":3},"end":{"line":135,"column":6}},"46":{"start":{"line":132,"column":4},"end":{"line":134,"column":5}},"47":{"start":{"line":133,"column":5},"end":{"line":133,"column":21}},"48":{"start":{"line":137,"column":3},"end":{"line":137,"column":29}},"49":{"start":{"line":142,"column":3},"end":{"line":142,"column":27}},"50":{"start":{"line":143,"column":3},"end":{"line":156,"column":4}},"51":{"start":{"line":144,"column":4},"end":{"line":155,"column":5}},"52":{"start":{"line":145,"column":5},"end":{"line":145,"column":42}},"53":{"start":{"line":147,"column":5},"end":{"line":154,"column":6}},"54":{"start":{"line":148,"column":6},"end":{"line":148,"column":41}},"55":{"start":{"line":149,"column":6},"end":{"line":149,"column":53}},"56":{"start":{"line":151,"column":10},"end":{"line":154,"column":6}},"57":{"start":{"line":152,"column":6},"end":{"line":152,"column":41}},"58":{"start":{"line":153,"column":6},"end":{"line":153,"column":50}},"59":{"start":{"line":162,"column":2},"end":{"line":165,"column":4}},"60":{"start":{"line":167,"column":2},"end":{"line":167,"column":42}},"61":{"start":{"line":169,"column":2},"end":{"line":169,"column":73}},"62":{"start":{"line":171,"column":2},"end":{"line":173,"column":3}},"63":{"start":{"line":172,"column":3},"end":{"line":172,"column":61}},"64":{"start":{"line":178,"column":2},"end":{"line":178,"column":42}},"65":{"start":{"line":180,"column":2},"end":{"line":182,"column":3}},"66":{"start":{"line":181,"column":3},"end":{"line":181,"column":30}},"67":{"start":{"line":184,"column":2},"end":{"line":187,"column":3}},"68":{"start":{"line":185,"column":3},"end":{"line":185,"column":71}},"69":{"start":{"line":186,"column":3},"end":{"line":186,"column":35}},"70":{"start":{"line":190,"column":2},"end":{"line":190,"column":105}},"71":{"start":{"line":193,"column":2},"end":{"line":193,"column":30}},"72":{"start":{"line":195,"column":2},"end":{"line":197,"column":3}},"73":{"start":{"line":196,"column":3},"end":{"line":196,"column":104}},"74":{"start":{"line":199,"column":2},"end":{"line":199,"column":33}},"75":{"start":{"line":201,"column":2},"end":{"line":206,"column":4}},"76":{"start":{"line":208,"column":2},"end":{"line":208,"column":42}},"77":{"start":{"line":210,"column":2},"end":{"line":216,"column":3}},"78":{"start":{"line":211,"column":3},"end":{"line":213,"column":4}},"79":{"start":{"line":212,"column":4},"end":{"line":212,"column":39}},"80":{"start":{"line":214,"column":3},"end":{"line":214,"column":32}},"81":{"start":{"line":215,"column":3},"end":{"line":215,"column":10}},"82":{"start":{"line":218,"column":2},"end":{"line":218,"column":39}},"83":{"start":{"line":220,"column":2},"end":{"line":252,"column":3}},"84":{"start":{"line":221,"column":3},"end":{"line":221,"column":39}},"85":{"start":{"line":223,"column":3},"end":{"line":233,"column":5}},"86":{"start":{"line":224,"column":4},"end":{"line":224,"column":35}},"87":{"start":{"line":226,"column":4},"end":{"line":226,"column":38}},"88":{"start":{"line":228,"column":4},"end":{"line":228,"column":48}},"89":{"start":{"line":230,"column":4},"end":{"line":230,"column":43}},"90":{"start":{"line":231,"column":4},"end":{"line":231,"column":40}},"91":{"start":{"line":232,"column":4},"end":{"line":232,"column":33}},"92":{"start":{"line":235,"column":3},"end":{"line":239,"column":7}},"93":{"start":{"line":242,"column":3},"end":{"line":242,"column":74}},"94":{"start":{"line":244,"column":3},"end":{"line":244,"column":37}},"95":{"start":{"line":246,"column":3},"end":{"line":246,"column":47}},"96":{"start":{"line":248,"column":3},"end":{"line":248,"column":38}},"97":{"start":{"line":250,"column":3},"end":{"line":250,"column":39}},"98":{"start":{"line":251,"column":3},"end":{"line":251,"column":32}},"99":{"start":{"line":256,"column":2},"end":{"line":256,"column":41}},"100":{"start":{"line":257,"column":2},"end":{"line":257,"column":58}},"101":{"start":{"line":261,"column":2},"end":{"line":261,"column":22}},"102":{"start":{"line":263,"column":2},"end":{"line":263,"column":22}},"103":{"start":{"line":265,"column":2},"end":{"line":265,"column":26}},"104":{"start":{"line":267,"column":2},"end":{"line":273,"column":3}},"105":{"start":{"line":268,"column":3},"end":{"line":270,"column":4}},"106":{"start":{"line":269,"column":4},"end":{"line":269,"column":33}},"107":{"start":{"line":272,"column":3},"end":{"line":272,"column":23}},"108":{"start":{"line":275,"column":2},"end":{"line":385,"column":3}},"109":{"start":{"line":275,"column":13},"end":{"line":385,"column":3}},"110":{"start":{"line":276,"column":3},"end":{"line":278,"column":4}},"111":{"start":{"line":277,"column":4},"end":{"line":277,"column":13}},"112":{"start":{"line":280,"column":3},"end":{"line":280,"column":33}},"113":{"start":{"line":281,"column":3},"end":{"line":281,"column":74}},"114":{"start":{"line":283,"column":3},"end":{"line":384,"column":4}},"115":{"start":{"line":284,"column":4},"end":{"line":289,"column":27}},"116":{"start":{"line":291,"column":4},"end":{"line":295,"column":5}},"117":{"start":{"line":293,"column":5},"end":{"line":293,"column":65}},"118":{"start":{"line":294,"column":5},"end":{"line":294,"column":67}},"119":{"start":{"line":297,"column":4},"end":{"line":297,"column":41}},"120":{"start":{"line":300,"column":4},"end":{"line":383,"column":5}},"121":{"start":{"line":302,"column":5},"end":{"line":302,"column":25}},"122":{"start":{"line":304,"column":5},"end":{"line":307,"column":6}},"123":{"start":{"line":306,"column":6},"end":{"line":306,"column":22}},"124":{"start":{"line":309,"column":5},"end":{"line":311,"column":6}},"125":{"start":{"line":310,"column":6},"end":{"line":310,"column":15}},"126":{"start":{"line":313,"column":5},"end":{"line":313,"column":27}},"127":{"start":{"line":315,"column":5},"end":{"line":316,"column":20}},"128":{"start":{"line":319,"column":5},"end":{"line":352,"column":6}},"129":{"start":{"line":320,"column":6},"end":{"line":320,"column":30}},"130":{"start":{"line":321,"column":6},"end":{"line":321,"column":33}},"131":{"start":{"line":322,"column":6},"end":{"line":324,"column":7}},"132":{"start":{"line":323,"column":7},"end":{"line":323,"column":13}},"133":{"start":{"line":326,"column":6},"end":{"line":329,"column":18}},"134":{"start":{"line":331,"column":6},"end":{"line":338,"column":7}},"135":{"start":{"line":332,"column":7},"end":{"line":332,"column":29}},"136":{"start":{"line":334,"column":7},"end":{"line":337,"column":8}},"137":{"start":{"line":335,"column":8},"end":{"line":335,"column":12}},"138":{"start":{"line":336,"column":8},"end":{"line":336,"column":16}},"139":{"start":{"line":344,"column":6},"end":{"line":346,"column":7}},"140":{"start":{"line":345,"column":7},"end":{"line":345,"column":16}},"141":{"start":{"line":349,"column":6},"end":{"line":349,"column":21}},"142":{"start":{"line":350,"column":6},"end":{"line":350,"column":31}},"143":{"start":{"line":351,"column":6},"end":{"line":351,"column":25}},"144":{"start":{"line":354,"column":5},"end":{"line":356,"column":6}},"145":{"start":{"line":355,"column":6},"end":{"line":355,"column":15}},"146":{"start":{"line":358,"column":5},"end":{"line":360,"column":6}},"147":{"start":{"line":359,"column":6},"end":{"line":359,"column":41}},"148":{"start":{"line":362,"column":5},"end":{"line":366,"column":31}},"149":{"start":{"line":368,"column":5},"end":{"line":368,"column":28}},"150":{"start":{"line":370,"column":5},"end":{"line":372,"column":6}},"151":{"start":{"line":371,"column":6},"end":{"line":371,"column":24}},"152":{"start":{"line":374,"column":5},"end":{"line":374,"column":101}},"153":{"start":{"line":376,"column":5},"end":{"line":376,"column":24}},"154":{"start":{"line":378,"column":5},"end":{"line":380,"column":6}},"155":{"start":{"line":379,"column":6},"end":{"line":379,"column":23}},"156":{"start":{"line":382,"column":5},"end":{"line":382,"column":48}},"157":{"start":{"line":387,"column":2},"end":{"line":387,"column":16}},"158":{"start":{"line":394,"column":3},"end":{"line":394,"column":27}},"159":{"start":{"line":396,"column":3},"end":{"line":396,"column":35}},"160":{"start":{"line":398,"column":3},"end":{"line":398,"column":30}},"161":{"start":{"line":402,"column":3},"end":{"line":402,"column":37}},"162":{"start":{"line":404,"column":3},"end":{"line":406,"column":4}},"163":{"start":{"line":405,"column":4},"end":{"line":405,"column":11}},"164":{"start":{"line":408,"column":3},"end":{"line":410,"column":4}},"165":{"start":{"line":409,"column":4},"end":{"line":409,"column":18}},"166":{"start":{"line":415,"column":0},"end":{"line":422,"column":2}},"167":{"start":{"line":416,"column":1},"end":{"line":416,"column":18}},"168":{"start":{"line":417,"column":1},"end":{"line":417,"column":24}},"169":{"start":{"line":418,"column":1},"end":{"line":418,"column":20}},"170":{"start":{"line":420,"column":1},"end":{"line":420,"column":43}},"171":{"start":{"line":421,"column":1},"end":{"line":421,"column":24}},"172":{"start":{"line":424,"column":0},"end":{"line":462,"column":2}},"173":{"start":{"line":425,"column":1},"end":{"line":427,"column":2}},"174":{"start":{"line":426,"column":2},"end":{"line":426,"column":11}},"175":{"start":{"line":429,"column":1},"end":{"line":433,"column":2}},"176":{"start":{"line":430,"column":2},"end":{"line":432,"column":14}},"177":{"start":{"line":431,"column":3},"end":{"line":431,"column":48}},"178":{"start":{"line":435,"column":1},"end":{"line":443,"column":3}},"179":{"start":{"line":445,"column":1},"end":{"line":447,"column":2}},"180":{"start":{"line":446,"column":2},"end":{"line":446,"column":40}},"181":{"start":{"line":449,"column":1},"end":{"line":452,"column":2}},"182":{"start":{"line":450,"column":2},"end":{"line":450,"column":71}},"183":{"start":{"line":451,"column":2},"end":{"line":451,"column":51}},"184":{"start":{"line":454,"column":1},"end":{"line":454,"column":26}},"185":{"start":{"line":456,"column":1},"end":{"line":458,"column":14}},"186":{"start":{"line":457,"column":2},"end":{"line":457,"column":82}},"187":{"start":{"line":460,"column":1},"end":{"line":460,"column":147}},"188":{"start":{"line":464,"column":0},"end":{"line":483,"column":1}},"189":{"start":{"line":465,"column":1},"end":{"line":468,"column":2}},"190":{"start":{"line":467,"column":2},"end":{"line":467,"column":21}},"191":{"start":{"line":470,"column":1},"end":{"line":480,"column":11}},"192":{"start":{"line":471,"column":2},"end":{"line":474,"column":46}},"193":{"start":{"line":476,"column":2},"end":{"line":476,"column":64}},"194":{"start":{"line":477,"column":2},"end":{"line":479,"column":3}},"195":{"start":{"line":478,"column":3},"end":{"line":478,"column":17}},"196":{"start":{"line":482,"column":1},"end":{"line":482,"column":20}},"197":{"start":{"line":486,"column":0},"end":{"line":486,"column":100}},"198":{"start":{"line":488,"column":0},"end":{"line":503,"column":1}},"199":{"start":{"line":489,"column":1},"end":{"line":489,"column":25}},"200":{"start":{"line":491,"column":1},"end":{"line":502,"column":2}},"201":{"start":{"line":492,"column":2},"end":{"line":501,"column":3}},"202":{"start":{"line":493,"column":3},"end":{"line":497,"column":4}},"203":{"start":{"line":494,"column":4},"end":{"line":494,"column":49}},"204":{"start":{"line":496,"column":4},"end":{"line":496,"column":42}},"205":{"start":{"line":500,"column":3},"end":{"line":500,"column":65}},"206":{"start":{"line":505,"column":0},"end":{"line":505,"column":19}},"207":{"start":{"line":509,"column":0},"end":{"line":511,"column":1}},"208":{"start":{"line":510,"column":1},"end":{"line":510,"column":24}},"209":{"start":{"line":514,"column":0},"end":{"line":516,"column":1}},"210":{"start":{"line":515,"column":1},"end":{"line":515,"column":22}},"211":{"start":{"line":523,"column":0},"end":{"line":555,"column":2}},"212":{"start":{"line":558,"column":0},"end":{"line":563,"column":3}},"213":{"start":{"line":560,"column":1},"end":{"line":562,"column":2}},"214":{"start":{"line":561,"column":2},"end":{"line":561,"column":62}},"215":{"start":{"line":565,"column":0},"end":{"line":565,"column":45}},"216":{"start":{"line":566,"column":0},"end":{"line":566,"column":46}},"217":{"start":{"line":567,"column":0},"end":{"line":567,"column":48}},"218":{"start":{"line":568,"column":0},"end":{"line":568,"column":45}},"219":{"start":{"line":575,"column":0},"end":{"line":594,"column":2}},"220":{"start":{"line":596,"column":0},"end":{"line":596,"column":82}},"221":{"start":{"line":598,"column":0},"end":{"line":625,"column":1}},"222":{"start":{"line":599,"column":1},"end":{"line":606,"column":4}},"223":{"start":{"line":608,"column":1},"end":{"line":624,"column":32}},"224":{"start":{"line":631,"column":0},"end":{"line":659,"column":2}},"225":{"start":{"line":666,"column":0},"end":{"line":672,"column":3}},"226":{"start":{"line":674,"column":0},"end":{"line":680,"column":3}},"227":{"start":{"line":682,"column":0},"end":{"line":700,"column":3}},"228":{"start":{"line":702,"column":0},"end":{"line":711,"column":1}},"229":{"start":{"line":703,"column":1},"end":{"line":710,"column":4}},"230":{"start":{"line":713,"column":0},"end":{"line":713,"column":48}},"231":{"start":{"line":719,"column":0},"end":{"line":795,"column":5}},"232":{"start":{"line":720,"column":1},"end":{"line":722,"column":2}},"233":{"start":{"line":721,"column":2},"end":{"line":721,"column":9}},"234":{"start":{"line":724,"column":1},"end":{"line":791,"column":3}},"235":{"start":{"line":726,"column":2},"end":{"line":736,"column":4}},"236":{"start":{"line":738,"column":2},"end":{"line":789,"column":3}},"237":{"start":{"line":739,"column":3},"end":{"line":788,"column":6}},"238":{"start":{"line":740,"column":4},"end":{"line":740,"column":43}},"239":{"start":{"line":742,"column":4},"end":{"line":742,"column":31}},"240":{"start":{"line":743,"column":4},"end":{"line":743,"column":48}},"241":{"start":{"line":744,"column":4},"end":{"line":746,"column":5}},"242":{"start":{"line":745,"column":5},"end":{"line":745,"column":32}},"243":{"start":{"line":748,"column":4},"end":{"line":750,"column":5}},"244":{"start":{"line":749,"column":5},"end":{"line":749,"column":57}},"245":{"start":{"line":752,"column":4},"end":{"line":755,"column":5}},"246":{"start":{"line":753,"column":5},"end":{"line":753,"column":58}},"247":{"start":{"line":754,"column":5},"end":{"line":754,"column":51}},"248":{"start":{"line":757,"column":4},"end":{"line":757,"column":46}},"249":{"start":{"line":758,"column":4},"end":{"line":758,"column":44}},"250":{"start":{"line":760,"column":4},"end":{"line":760,"column":25}},"251":{"start":{"line":762,"column":4},"end":{"line":762,"column":34}},"252":{"start":{"line":764,"column":4},"end":{"line":764,"column":26}},"253":{"start":{"line":766,"column":4},"end":{"line":766,"column":35}},"254":{"start":{"line":768,"column":4},"end":{"line":768,"column":31}},"255":{"start":{"line":770,"column":4},"end":{"line":785,"column":6}},"256":{"start":{"line":771,"column":5},"end":{"line":784,"column":6}},"257":{"start":{"line":773,"column":6},"end":{"line":783,"column":7}},"258":{"start":{"line":774,"column":7},"end":{"line":774,"column":43}},"259":{"start":{"line":776,"column":7},"end":{"line":776,"column":36}},"260":{"start":{"line":778,"column":11},"end":{"line":783,"column":7}},"261":{"start":{"line":779,"column":7},"end":{"line":779,"column":94}},"262":{"start":{"line":782,"column":7},"end":{"line":782,"column":69}},"263":{"start":{"line":787,"column":4},"end":{"line":787,"column":19}},"264":{"start":{"line":793,"column":1},"end":{"line":793,"column":73}}},"branchMap":{"1":{"line":6,"type":"cond-expr","locations":[{"start":{"line":7,"column":3},"end":{"line":7,"column":9}},{"start":{"line":9,"column":2},"end":{"line":11,"column":6}}]},"2":{"line":9,"type":"cond-expr","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":8}},{"start":{"line":11,"column":4},"end":{"line":11,"column":6}}]},"3":{"line":9,"type":"binary-expr","locations":[{"start":{"line":9,"column":3},"end":{"line":9,"column":43}},{"start":{"line":9,"column":47},"end":{"line":9,"column":80}}]},"4":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":3},"end":{"line":29,"column":3}},{"start":{"line":29,"column":3},"end":{"line":29,"column":3}}]},"5":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":10},"end":{"line":31,"column":10}},{"start":{"line":31,"column":10},"end":{"line":31,"column":10}}]},"6":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":3},"end":{"line":43,"column":3}},{"start":{"line":43,"column":3},"end":{"line":43,"column":3}}]},"7":{"line":53,"type":"switch","locations":[{"start":{"line":54,"column":4},"end":{"line":63,"column":18}},{"start":{"line":65,"column":4},"end":{"line":67,"column":68}}]},"8":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":6},"end":{"line":58,"column":6}},{"start":{"line":58,"column":6},"end":{"line":58,"column":6}}]},"9":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":12},"end":{"line":67,"column":17}},{"start":{"line":67,"column":21},"end":{"line":67,"column":67}}]},"10":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":10},"end":{"line":95,"column":14}},{"start":{"line":95,"column":18},"end":{"line":95,"column":29}}]},"11":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":3},"end":{"line":98,"column":3}},{"start":{"line":98,"column":3},"end":{"line":98,"column":3}}]},"12":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":5},"end":{"line":102,"column":5}},{"start":{"line":102,"column":5},"end":{"line":102,"column":5}}]},"13":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":4},"end":{"line":114,"column":4}},{"start":{"line":114,"column":4},"end":{"line":114,"column":4}}]},"14":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":5},"end":{"line":116,"column":5}},{"start":{"line":116,"column":5},"end":{"line":116,"column":5}}]},"15":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":7},"end":{"line":120,"column":7}},{"start":{"line":120,"column":7},"end":{"line":120,"column":7}}]},"16":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":4},"end":{"line":132,"column":4}},{"start":{"line":132,"column":4},"end":{"line":132,"column":4}}]},"17":{"line":132,"type":"binary-expr","locations":[{"start":{"line":132,"column":8},"end":{"line":132,"column":30}},{"start":{"line":132,"column":34},"end":{"line":132,"column":47}}]},"18":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":13},"end":{"line":142,"column":20}},{"start":{"line":142,"column":24},"end":{"line":142,"column":26}}]},"19":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":144,"column":4}},{"start":{"line":144,"column":4},"end":{"line":144,"column":4}}]},"20":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":31},"end":{"line":145,"column":35}},{"start":{"line":145,"column":39},"end":{"line":145,"column":40}}]},"21":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":5},"end":{"line":147,"column":5}},{"start":{"line":147,"column":5},"end":{"line":147,"column":5}}]},"22":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":9},"end":{"line":147,"column":39}},{"start":{"line":147,"column":43},"end":{"line":147,"column":71}}]},"23":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":10},"end":{"line":151,"column":10}},{"start":{"line":151,"column":10},"end":{"line":151,"column":10}}]},"24":{"line":151,"type":"binary-expr","locations":[{"start":{"line":151,"column":14},"end":{"line":151,"column":43}},{"start":{"line":151,"column":47},"end":{"line":151,"column":75}}]},"25":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":17},"end":{"line":169,"column":29}},{"start":{"line":169,"column":33},"end":{"line":169,"column":72}}]},"26":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":9},"end":{"line":180,"column":15}},{"start":{"line":180,"column":19},"end":{"line":180,"column":47}}]},"27":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":2},"end":{"line":184,"column":2}},{"start":{"line":184,"column":2},"end":{"line":184,"column":2}}]},"28":{"line":185,"type":"binary-expr","locations":[{"start":{"line":185,"column":15},"end":{"line":185,"column":43}},{"start":{"line":185,"column":47},"end":{"line":185,"column":52}}]},"29":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":2},"end":{"line":195,"column":2}},{"start":{"line":195,"column":2},"end":{"line":195,"column":2}}]},"30":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":2},"end":{"line":210,"column":2}},{"start":{"line":210,"column":2},"end":{"line":210,"column":2}}]},"31":{"line":210,"type":"binary-expr","locations":[{"start":{"line":210,"column":6},"end":{"line":210,"column":15}},{"start":{"line":210,"column":19},"end":{"line":210,"column":31}}]},"32":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":3},"end":{"line":211,"column":3}},{"start":{"line":211,"column":3},"end":{"line":211,"column":3}}]},"33":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":2},"end":{"line":220,"column":2}},{"start":{"line":220,"column":2},"end":{"line":220,"column":2}}]},"34":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":6},"end":{"line":220,"column":11}},{"start":{"line":220,"column":15},"end":{"line":220,"column":27}}]},"35":{"line":230,"type":"binary-expr","locations":[{"start":{"line":230,"column":4},"end":{"line":230,"column":12}},{"start":{"line":230,"column":16},"end":{"line":230,"column":42}}]},"36":{"line":248,"type":"binary-expr","locations":[{"start":{"line":248,"column":3},"end":{"line":248,"column":11}},{"start":{"line":248,"column":15},"end":{"line":248,"column":37}}]},"37":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":2},"end":{"line":267,"column":2}},{"start":{"line":267,"column":2},"end":{"line":267,"column":2}}]},"38":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":3},"end":{"line":276,"column":3}},{"start":{"line":276,"column":3},"end":{"line":276,"column":3}}]},"39":{"line":276,"type":"binary-expr","locations":[{"start":{"line":276,"column":6},"end":{"line":276,"column":36}},{"start":{"line":276,"column":40},"end":{"line":276,"column":55}}]},"40":{"line":281,"type":"cond-expr","locations":[{"start":{"line":281,"column":52},"end":{"line":281,"column":60}},{"start":{"line":281,"column":63},"end":{"line":281,"column":73}}]},"41":{"line":291,"type":"if","locations":[{"start":{"line":291,"column":4},"end":{"line":291,"column":4}},{"start":{"line":291,"column":4},"end":{"line":291,"column":4}}]},"42":{"line":291,"type":"binary-expr","locations":[{"start":{"line":291,"column":8},"end":{"line":291,"column":14}},{"start":{"line":291,"column":18},"end":{"line":291,"column":41}}]},"43":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":14},"end":{"line":297,"column":29}},{"start":{"line":297,"column":33},"end":{"line":297,"column":40}}]},"44":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":5},"end":{"line":304,"column":5}},{"start":{"line":304,"column":5},"end":{"line":304,"column":5}}]},"45":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":5},"end":{"line":309,"column":5}},{"start":{"line":309,"column":5},"end":{"line":309,"column":5}}]},"46":{"line":319,"type":"if","locations":[{"start":{"line":319,"column":5},"end":{"line":319,"column":5}},{"start":{"line":319,"column":5},"end":{"line":319,"column":5}}]},"47":{"line":319,"type":"binary-expr","locations":[{"start":{"line":319,"column":9},"end":{"line":319,"column":15}},{"start":{"line":319,"column":19},"end":{"line":319,"column":25}},{"start":{"line":319,"column":29},"end":{"line":319,"column":51}}]},"48":{"line":322,"type":"if","locations":[{"start":{"line":322,"column":6},"end":{"line":322,"column":6}},{"start":{"line":322,"column":6},"end":{"line":322,"column":6}}]},"49":{"line":326,"type":"cond-expr","locations":[{"start":{"line":326,"column":45},"end":{"line":326,"column":60}},{"start":{"line":326,"column":63},"end":{"line":326,"column":64}}]},"50":{"line":331,"type":"binary-expr","locations":[{"start":{"line":331,"column":36},"end":{"line":331,"column":43}},{"start":{"line":331,"column":47},"end":{"line":331,"column":53}}]},"51":{"line":334,"type":"if","locations":[{"start":{"line":334,"column":7},"end":{"line":334,"column":7}},{"start":{"line":334,"column":7},"end":{"line":334,"column":7}}]},"52":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":6},"end":{"line":344,"column":6}},{"start":{"line":344,"column":6},"end":{"line":344,"column":6}}]},"53":{"line":344,"type":"binary-expr","locations":[{"start":{"line":344,"column":10},"end":{"line":344,"column":36}},{"start":{"line":344,"column":40},"end":{"line":344,"column":60}}]},"54":{"line":354,"type":"if","locations":[{"start":{"line":354,"column":5},"end":{"line":354,"column":5}},{"start":{"line":354,"column":5},"end":{"line":354,"column":5}}]},"55":{"line":358,"type":"if","locations":[{"start":{"line":358,"column":5},"end":{"line":358,"column":5}},{"start":{"line":358,"column":5},"end":{"line":358,"column":5}}]},"56":{"line":370,"type":"if","locations":[{"start":{"line":370,"column":5},"end":{"line":370,"column":5}},{"start":{"line":370,"column":5},"end":{"line":370,"column":5}}]},"57":{"line":374,"type":"cond-expr","locations":[{"start":{"line":374,"column":44},"end":{"line":374,"column":69}},{"start":{"line":374,"column":72},"end":{"line":374,"column":77}}]},"58":{"line":378,"type":"if","locations":[{"start":{"line":378,"column":5},"end":{"line":378,"column":5}},{"start":{"line":378,"column":5},"end":{"line":378,"column":5}}]},"59":{"line":396,"type":"binary-expr","locations":[{"start":{"line":396,"column":17},"end":{"line":396,"column":28}},{"start":{"line":396,"column":32},"end":{"line":396,"column":34}}]},"60":{"line":404,"type":"if","locations":[{"start":{"line":404,"column":3},"end":{"line":404,"column":3}},{"start":{"line":404,"column":3},"end":{"line":404,"column":3}}]},"61":{"line":404,"type":"binary-expr","locations":[{"start":{"line":404,"column":7},"end":{"line":404,"column":17}},{"start":{"line":404,"column":21},"end":{"line":404,"column":38}}]},"62":{"line":420,"type":"binary-expr","locations":[{"start":{"line":420,"column":16},"end":{"line":420,"column":26}},{"start":{"line":420,"column":30},"end":{"line":420,"column":32}}]},"63":{"line":425,"type":"if","locations":[{"start":{"line":425,"column":1},"end":{"line":425,"column":1}},{"start":{"line":425,"column":1},"end":{"line":425,"column":1}}]},"64":{"line":429,"type":"if","locations":[{"start":{"line":429,"column":1},"end":{"line":429,"column":1}},{"start":{"line":429,"column":1},"end":{"line":429,"column":1}}]},"65":{"line":445,"type":"if","locations":[{"start":{"line":445,"column":1},"end":{"line":445,"column":1}},{"start":{"line":445,"column":1},"end":{"line":445,"column":1}}]},"66":{"line":449,"type":"if","locations":[{"start":{"line":449,"column":1},"end":{"line":449,"column":1}},{"start":{"line":449,"column":1},"end":{"line":449,"column":1}}]},"67":{"line":450,"type":"cond-expr","locations":[{"start":{"line":450,"column":51},"end":{"line":450,"column":58}},{"start":{"line":450,"column":61},"end":{"line":450,"column":70}}]},"68":{"line":457,"type":"binary-expr","locations":[{"start":{"line":457,"column":24},"end":{"line":457,"column":44}},{"start":{"line":457,"column":48},"end":{"line":457,"column":50}}]},"69":{"line":460,"type":"cond-expr","locations":[{"start":{"line":460,"column":81},"end":{"line":460,"column":97}},{"start":{"line":460,"column":100},"end":{"line":460,"column":102}}]},"70":{"line":464,"type":"if","locations":[{"start":{"line":464,"column":0},"end":{"line":464,"column":0}},{"start":{"line":464,"column":0},"end":{"line":464,"column":0}}]},"71":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":1},"end":{"line":465,"column":1}},{"start":{"line":465,"column":1},"end":{"line":465,"column":1}}]},"72":{"line":477,"type":"if","locations":[{"start":{"line":477,"column":2},"end":{"line":477,"column":2}},{"start":{"line":477,"column":2},"end":{"line":477,"column":2}}]},"73":{"line":486,"type":"binary-expr","locations":[{"start":{"line":486,"column":13},"end":{"line":486,"column":35}},{"start":{"line":486,"column":39},"end":{"line":486,"column":99}}]},"74":{"line":488,"type":"if","locations":[{"start":{"line":488,"column":0},"end":{"line":488,"column":0}},{"start":{"line":488,"column":0},"end":{"line":488,"column":0}}]},"75":{"line":491,"type":"if","locations":[{"start":{"line":491,"column":1},"end":{"line":491,"column":1}},{"start":{"line":491,"column":1},"end":{"line":491,"column":1}}]},"76":{"line":491,"type":"binary-expr","locations":[{"start":{"line":491,"column":5},"end":{"line":491,"column":30}},{"start":{"line":491,"column":34},"end":{"line":491,"column":69}}]},"77":{"line":492,"type":"if","locations":[{"start":{"line":492,"column":2},"end":{"line":492,"column":2}},{"start":{"line":492,"column":2},"end":{"line":492,"column":2}}]},"78":{"line":493,"type":"if","locations":[{"start":{"line":493,"column":3},"end":{"line":493,"column":3}},{"start":{"line":493,"column":3},"end":{"line":493,"column":3}}]},"79":{"line":509,"type":"if","locations":[{"start":{"line":509,"column":0},"end":{"line":509,"column":0}},{"start":{"line":509,"column":0},"end":{"line":509,"column":0}}]},"80":{"line":509,"type":"binary-expr","locations":[{"start":{"line":509,"column":4},"end":{"line":509,"column":33}},{"start":{"line":509,"column":37},"end":{"line":509,"column":51}}]},"81":{"line":514,"type":"if","locations":[{"start":{"line":514,"column":0},"end":{"line":514,"column":0}},{"start":{"line":514,"column":0},"end":{"line":514,"column":0}}]},"82":{"line":560,"type":"if","locations":[{"start":{"line":560,"column":1},"end":{"line":560,"column":1}},{"start":{"line":560,"column":1},"end":{"line":560,"column":1}}]},"83":{"line":598,"type":"if","locations":[{"start":{"line":598,"column":0},"end":{"line":598,"column":0}},{"start":{"line":598,"column":0},"end":{"line":598,"column":0}}]},"84":{"line":702,"type":"if","locations":[{"start":{"line":702,"column":0},"end":{"line":702,"column":0}},{"start":{"line":702,"column":0},"end":{"line":702,"column":0}}]},"85":{"line":720,"type":"if","locations":[{"start":{"line":720,"column":1},"end":{"line":720,"column":1}},{"start":{"line":720,"column":1},"end":{"line":720,"column":1}}]},"86":{"line":720,"type":"binary-expr","locations":[{"start":{"line":720,"column":5},"end":{"line":720,"column":32}},{"start":{"line":720,"column":36},"end":{"line":720,"column":47}},{"start":{"line":720,"column":51},"end":{"line":720,"column":65}},{"start":{"line":720,"column":69},"end":{"line":720,"column":92}}]},"87":{"line":738,"type":"if","locations":[{"start":{"line":738,"column":2},"end":{"line":738,"column":2}},{"start":{"line":738,"column":2},"end":{"line":738,"column":2}}]},"88":{"line":744,"type":"binary-expr","locations":[{"start":{"line":744,"column":11},"end":{"line":744,"column":17}},{"start":{"line":744,"column":21},"end":{"line":744,"column":49}}]},"89":{"line":748,"type":"if","locations":[{"start":{"line":748,"column":4},"end":{"line":748,"column":4}},{"start":{"line":748,"column":4},"end":{"line":748,"column":4}}]},"90":{"line":749,"type":"binary-expr","locations":[{"start":{"line":749,"column":17},"end":{"line":749,"column":42}},{"start":{"line":749,"column":46},"end":{"line":749,"column":52}}]},"91":{"line":752,"type":"if","locations":[{"start":{"line":752,"column":4},"end":{"line":752,"column":4}},{"start":{"line":752,"column":4},"end":{"line":752,"column":4}}]},"92":{"line":753,"type":"binary-expr","locations":[{"start":{"line":753,"column":22},"end":{"line":753,"column":43}},{"start":{"line":753,"column":47},"end":{"line":753,"column":53}}]},"93":{"line":754,"type":"binary-expr","locations":[{"start":{"line":754,"column":16},"end":{"line":754,"column":37}},{"start":{"line":754,"column":41},"end":{"line":754,"column":50}}]},"94":{"line":771,"type":"if","locations":[{"start":{"line":771,"column":5},"end":{"line":771,"column":5}},{"start":{"line":771,"column":5},"end":{"line":771,"column":5}}]},"95":{"line":773,"type":"if","locations":[{"start":{"line":773,"column":6},"end":{"line":773,"column":6}},{"start":{"line":773,"column":6},"end":{"line":773,"column":6}}]},"96":{"line":773,"type":"binary-expr","locations":[{"start":{"line":773,"column":10},"end":{"line":773,"column":26}},{"start":{"line":773,"column":30},"end":{"line":773,"column":46}}]},"97":{"line":778,"type":"if","locations":[{"start":{"line":778,"column":11},"end":{"line":778,"column":11}},{"start":{"line":778,"column":11},"end":{"line":778,"column":11}}]}},"code":["","/* **********************************************","     Begin prism-core.js","********************************************** */","","var _self = (typeof window !== 'undefined')","\t? window   // if in browser","\t: (","\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)","\t\t? self // if in worker","\t\t: {}   // if in node js","\t);","","/**"," * Prism: Lightweight, robust, elegant syntax highlighting"," * MIT license http://www.opensource.org/licenses/mit-license.php/"," * @author Lea Verou http://lea.verou.me"," */","","var Prism = (function(){","","// Private helper vars","var lang = /\\blang(?:uage)?-(\\w+)\\b/i;","var uniqueId = 0;","","var _ = _self.Prism = {","\tutil: {","\t\tencode: function (tokens) {","\t\t\tif (tokens instanceof Token) {","\t\t\t\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);","\t\t\t} else if (_.util.type(tokens) === 'Array') {","\t\t\t\treturn tokens.map(_.util.encode);","\t\t\t} else {","\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');","\t\t\t}","\t\t},","","\t\ttype: function (o) {","\t\t\treturn Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];","\t\t},","","\t\tobjId: function (obj) {","\t\t\tif (!obj['__id']) {","\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });","\t\t\t}","\t\t\treturn obj['__id'];","\t\t},","","\t\t// Deep clone a language definition (e.g. to extend it)","\t\tclone: function (o) {","\t\t\tvar type = _.util.type(o);","","\t\t\tswitch (type) {","\t\t\t\tcase 'Object':","\t\t\t\t\tvar clone = {};","","\t\t\t\t\tfor (var key in o) {","\t\t\t\t\t\tif (o.hasOwnProperty(key)) {","\t\t\t\t\t\t\tclone[key] = _.util.clone(o[key]);","\t\t\t\t\t\t}","\t\t\t\t\t}","","\t\t\t\t\treturn clone;","","\t\t\t\tcase 'Array':","\t\t\t\t\t// Check for existence for IE8","\t\t\t\t\treturn o.map && o.map(function(v) { return _.util.clone(v); });","\t\t\t}","","\t\t\treturn o;","\t\t}","\t},","","\tlanguages: {","\t\textend: function (id, redef) {","\t\t\tvar lang = _.util.clone(_.languages[id]);","","\t\t\tfor (var key in redef) {","\t\t\t\tlang[key] = redef[key];","\t\t\t}","","\t\t\treturn lang;","\t\t},","","\t\t/**","\t\t * Insert a token before another token in a language literal","\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),","\t\t * we cannot just provide an object, we need anobject and a key.","\t\t * @param inside The key (or language id) of the parent","\t\t * @param before The key to insert before. If not provided, the function appends instead.","\t\t * @param insert Object with the key/value pairs to insert","\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.","\t\t */","\t\tinsertBefore: function (inside, before, insert, root) {","\t\t\troot = root || _.languages;","\t\t\tvar grammar = root[inside];","","\t\t\tif (arguments.length == 2) {","\t\t\t\tinsert = arguments[1];","","\t\t\t\tfor (var newToken in insert) {","\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {","\t\t\t\t\t\tgrammar[newToken] = insert[newToken];","\t\t\t\t\t}","\t\t\t\t}","","\t\t\t\treturn grammar;","\t\t\t}","","\t\t\tvar ret = {};","","\t\t\tfor (var token in grammar) {","","\t\t\t\tif (grammar.hasOwnProperty(token)) {","","\t\t\t\t\tif (token == before) {","","\t\t\t\t\t\tfor (var newToken in insert) {","","\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {","\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t}","","\t\t\t\t\tret[token] = grammar[token];","\t\t\t\t}","\t\t\t}","","\t\t\t// Update references in other language definitions","\t\t\t_.languages.DFS(_.languages, function(key, value) {","\t\t\t\tif (value === root[inside] && key != inside) {","\t\t\t\t\tthis[key] = ret;","\t\t\t\t}","\t\t\t});","","\t\t\treturn root[inside] = ret;","\t\t},","","\t\t// Traverse a language definition with Depth First Search","\t\tDFS: function(o, callback, type, visited) {","\t\t\tvisited = visited || {};","\t\t\tfor (var i in o) {","\t\t\t\tif (o.hasOwnProperty(i)) {","\t\t\t\t\tcallback.call(o, i, o[i], type || i);","","\t\t\t\t\tif (_.util.type(o[i]) === 'Object' && !visited[_.util.objId(o[i])]) {","\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;","\t\t\t\t\t\t_.languages.DFS(o[i], callback, null, visited);","\t\t\t\t\t}","\t\t\t\t\telse if (_.util.type(o[i]) === 'Array' && !visited[_.util.objId(o[i])]) {","\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;","\t\t\t\t\t\t_.languages.DFS(o[i], callback, i, visited);","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t}","\t},","\tplugins: {},","","\thighlightAll: function(async, callback) {","\t\tvar env = {","\t\t\tcallback: callback,","\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'","\t\t};","","\t\t_.hooks.run(\"before-highlightall\", env);","","\t\tvar elements = env.elements || document.querySelectorAll(env.selector);","","\t\tfor (var i=0, element; element = elements[i++];) {","\t\t\t_.highlightElement(element, async === true, env.callback);","\t\t}","\t},","","\thighlightElement: function(element, async, callback) {","\t\t// Find language","\t\tvar language, grammar, parent = element;","","\t\twhile (parent && !lang.test(parent.className)) {","\t\t\tparent = parent.parentNode;","\t\t}","","\t\tif (parent) {","\t\t\tlanguage = (parent.className.match(lang) || [,''])[1].toLowerCase();","\t\t\tgrammar = _.languages[language];","\t\t}","","\t\t// Set language on the element, if not present","\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;","","\t\t// Set language on the parent, for styling","\t\tparent = element.parentNode;","","\t\tif (/pre/i.test(parent.nodeName)) {","\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;","\t\t}","","\t\tvar code = element.textContent;","","\t\tvar env = {","\t\t\telement: element,","\t\t\tlanguage: language,","\t\t\tgrammar: grammar,","\t\t\tcode: code","\t\t};","","\t\t_.hooks.run('before-sanity-check', env);","","\t\tif (!env.code || !env.grammar) {","\t\t\tif (env.code) {","\t\t\t\tenv.element.textContent = env.code;","\t\t\t}","\t\t\t_.hooks.run('complete', env);","\t\t\treturn;","\t\t}","","\t\t_.hooks.run('before-highlight', env);","","\t\tif (async && _self.Worker) {","\t\t\tvar worker = new Worker(_.filename);","","\t\t\tworker.onmessage = function(evt) {","\t\t\t\tenv.highlightedCode = evt.data;","","\t\t\t\t_.hooks.run('before-insert', env);","","\t\t\t\tenv.element.innerHTML = env.highlightedCode;","","\t\t\t\tcallback && callback.call(env.element);","\t\t\t\t_.hooks.run('after-highlight', env);","\t\t\t\t_.hooks.run('complete', env);","\t\t\t};","","\t\t\tworker.postMessage(JSON.stringify({","\t\t\t\tlanguage: env.language,","\t\t\t\tcode: env.code,","\t\t\t\timmediateClose: true","\t\t\t}));","\t\t}","\t\telse {","\t\t\tenv.highlightedCode = _.highlight(env.code, env.grammar, env.language);","","\t\t\t_.hooks.run('before-insert', env);","","\t\t\tenv.element.innerHTML = env.highlightedCode;","","\t\t\tcallback && callback.call(element);","","\t\t\t_.hooks.run('after-highlight', env);","\t\t\t_.hooks.run('complete', env);","\t\t}","\t},","","\thighlight: function (text, grammar, language) {","\t\tvar tokens = _.tokenize(text, grammar);","\t\treturn Token.stringify(_.util.encode(tokens), language);","\t},","","\ttokenize: function(text, grammar, language) {","\t\tvar Token = _.Token;","","\t\tvar strarr = [text];","","\t\tvar rest = grammar.rest;","","\t\tif (rest) {","\t\t\tfor (var token in rest) {","\t\t\t\tgrammar[token] = rest[token];","\t\t\t}","","\t\t\tdelete grammar.rest;","\t\t}","","\t\ttokenloop: for (var token in grammar) {","\t\t\tif(!grammar.hasOwnProperty(token) || !grammar[token]) {","\t\t\t\tcontinue;","\t\t\t}","","\t\t\tvar patterns = grammar[token];","\t\t\tpatterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];","","\t\t\tfor (var j = 0; j < patterns.length; ++j) {","\t\t\t\tvar pattern = patterns[j],","\t\t\t\t\tinside = pattern.inside,","\t\t\t\t\tlookbehind = !!pattern.lookbehind,","\t\t\t\t\tgreedy = !!pattern.greedy,","\t\t\t\t\tlookbehindLength = 0,","\t\t\t\t\talias = pattern.alias;","","\t\t\t\tif (greedy && !pattern.pattern.global) {","\t\t\t\t\t// Without the global flag, lastIndex won't work","\t\t\t\t\tvar flags = pattern.pattern.toString().match(/[imuy]*$/)[0];","\t\t\t\t\tpattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");","\t\t\t\t}","","\t\t\t\tpattern = pattern.pattern || pattern;","","\t\t\t\t// Don’t cache length as it changes during the loop","\t\t\t\tfor (var i=0, pos = 0; i<strarr.length; pos += strarr[i].length, ++i) {","","\t\t\t\t\tvar str = strarr[i];","","\t\t\t\t\tif (strarr.length > text.length) {","\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!","\t\t\t\t\t\tbreak tokenloop;","\t\t\t\t\t}","","\t\t\t\t\tif (str instanceof Token) {","\t\t\t\t\t\tcontinue;","\t\t\t\t\t}","","\t\t\t\t\tpattern.lastIndex = 0;","","\t\t\t\t\tvar match = pattern.exec(str),","\t\t\t\t\t    delNum = 1;","","\t\t\t\t\t// Greedy patterns can override/remove up to two previously matched tokens","\t\t\t\t\tif (!match && greedy && i != strarr.length - 1) {","\t\t\t\t\t\tpattern.lastIndex = pos;","\t\t\t\t\t\tmatch = pattern.exec(text);","\t\t\t\t\t\tif (!match) {","\t\t\t\t\t\t\tbreak;","\t\t\t\t\t\t}","","\t\t\t\t\t\tvar from = match.index + (lookbehind ? match[1].length : 0),","\t\t\t\t\t\t    to = match.index + match[0].length,","\t\t\t\t\t\t    k = i,","\t\t\t\t\t\t    p = pos;","","\t\t\t\t\t\tfor (var len = strarr.length; k < len && p < to; ++k) {","\t\t\t\t\t\t\tp += strarr[k].length;","\t\t\t\t\t\t\t// Move the index i to the element in strarr that is closest to from","\t\t\t\t\t\t\tif (from >= p) {","\t\t\t\t\t\t\t\t++i;","\t\t\t\t\t\t\t\tpos = p;","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","","\t\t\t\t\t\t/*","\t\t\t\t\t\t * If strarr[i] is a Token, then the match starts inside another Token, which is invalid","\t\t\t\t\t\t * If strarr[k - 1] is greedy we are in conflict with another greedy pattern","\t\t\t\t\t\t */","\t\t\t\t\t\tif (strarr[i] instanceof Token || strarr[k - 1].greedy) {","\t\t\t\t\t\t\tcontinue;","\t\t\t\t\t\t}","","\t\t\t\t\t\t// Number of tokens to delete and replace with the new match","\t\t\t\t\t\tdelNum = k - i;","\t\t\t\t\t\tstr = text.slice(pos, p);","\t\t\t\t\t\tmatch.index -= pos;","\t\t\t\t\t}","","\t\t\t\t\tif (!match) {","\t\t\t\t\t\tcontinue;","\t\t\t\t\t}","","\t\t\t\t\tif(lookbehind) {","\t\t\t\t\t\tlookbehindLength = match[1].length;","\t\t\t\t\t}","","\t\t\t\t\tvar from = match.index + lookbehindLength,","\t\t\t\t\t    match = match[0].slice(lookbehindLength),","\t\t\t\t\t    to = from + match.length,","\t\t\t\t\t    before = str.slice(0, from),","\t\t\t\t\t    after = str.slice(to);","","\t\t\t\t\tvar args = [i, delNum];","","\t\t\t\t\tif (before) {","\t\t\t\t\t\targs.push(before);","\t\t\t\t\t}","","\t\t\t\t\tvar wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);","","\t\t\t\t\targs.push(wrapped);","","\t\t\t\t\tif (after) {","\t\t\t\t\t\targs.push(after);","\t\t\t\t\t}","","\t\t\t\t\tArray.prototype.splice.apply(strarr, args);","\t\t\t\t}","\t\t\t}","\t\t}","","\t\treturn strarr;","\t},","","\thooks: {","\t\tall: {},","","\t\tadd: function (name, callback) {","\t\t\tvar hooks = _.hooks.all;","","\t\t\thooks[name] = hooks[name] || [];","","\t\t\thooks[name].push(callback);","\t\t},","","\t\trun: function (name, env) {","\t\t\tvar callbacks = _.hooks.all[name];","","\t\t\tif (!callbacks || !callbacks.length) {","\t\t\t\treturn;","\t\t\t}","","\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {","\t\t\t\tcallback(env);","\t\t\t}","\t\t}","\t}","};","","var Token = _.Token = function(type, content, alias, matchedStr, greedy) {","\tthis.type = type;","\tthis.content = content;","\tthis.alias = alias;","\t// Copy of the full string this token was created from","\tthis.length = (matchedStr || \"\").length|0;","\tthis.greedy = !!greedy;","};","","Token.stringify = function(o, language, parent) {","\tif (typeof o == 'string') {","\t\treturn o;","\t}","","\tif (_.util.type(o) === 'Array') {","\t\treturn o.map(function(element) {","\t\t\treturn Token.stringify(element, language, o);","\t\t}).join('');","\t}","","\tvar env = {","\t\ttype: o.type,","\t\tcontent: Token.stringify(o.content, language, parent),","\t\ttag: 'span',","\t\tclasses: ['token', o.type],","\t\tattributes: {},","\t\tlanguage: language,","\t\tparent: parent","\t};","","\tif (env.type == 'comment') {","\t\tenv.attributes['spellcheck'] = 'true';","\t}","","\tif (o.alias) {","\t\tvar aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];","\t\tArray.prototype.push.apply(env.classes, aliases);","\t}","","\t_.hooks.run('wrap', env);","","\tvar attributes = Object.keys(env.attributes).map(function(name) {","\t\treturn name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';","\t}).join(' ');","","\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';","","};","","if (!_self.document) {","\tif (!_self.addEventListener) {","\t\t// in Node.js","\t\treturn _self.Prism;","\t}"," \t// In worker","\t_self.addEventListener('message', function(evt) {","\t\tvar message = JSON.parse(evt.data),","\t\t    lang = message.language,","\t\t    code = message.code,","\t\t    immediateClose = message.immediateClose;","","\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));","\t\tif (immediateClose) {","\t\t\t_self.close();","\t\t}","\t}, false);","","\treturn _self.Prism;","}","","//Get current script and highlight","var script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();","","if (script) {","\t_.filename = script.src;","","\tif (document.addEventListener && !script.hasAttribute('data-manual')) {","\t\tif(document.readyState !== \"loading\") {","\t\t\tif (window.requestAnimationFrame) {","\t\t\t\twindow.requestAnimationFrame(_.highlightAll);","\t\t\t} else {","\t\t\t\twindow.setTimeout(_.highlightAll, 16);","\t\t\t}","\t\t}","\t\telse {","\t\t\tdocument.addEventListener('DOMContentLoaded', _.highlightAll);","\t\t}","\t}","}","","return _self.Prism;","","})();","","if (typeof module !== 'undefined' && module.exports) {","\tmodule.exports = Prism;","}","","// hack for components to work correctly in node.js","if (typeof global !== 'undefined') {","\tglobal.Prism = Prism;","}","","","/* **********************************************","     Begin prism-markup.js","********************************************** */","","Prism.languages.markup = {","\t'comment': /<!--[\\w\\W]*?-->/,","\t'prolog': /<\\?[\\w\\W]+?\\?>/,","\t'doctype': /<!DOCTYPE[\\w\\W]+?>/i,","\t'cdata': /<!\\[CDATA\\[[\\w\\W]*?]]>/i,","\t'tag': {","\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\\\1|\\\\?(?!\\1)[\\w\\W])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,","\t\tinside: {","\t\t\t'tag': {","\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,","\t\t\t\tinside: {","\t\t\t\t\t'punctuation': /^<\\/?/,","\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/","\t\t\t\t}","\t\t\t},","\t\t\t'attr-value': {","\t\t\t\tpattern: /=(?:('|\")[\\w\\W]*?(\\1)|[^\\s>]+)/i,","\t\t\t\tinside: {","\t\t\t\t\t'punctuation': /[=>\"']/","\t\t\t\t}","\t\t\t},","\t\t\t'punctuation': /\\/?>/,","\t\t\t'attr-name': {","\t\t\t\tpattern: /[^\\s>\\/]+/,","\t\t\t\tinside: {","\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/","\t\t\t\t}","\t\t\t}","","\t\t}","\t},","\t'entity': /&#?[\\da-z]{1,8};/i","};","","// Plugin to make entity title show the real entity, idea by Roman Komarov","Prism.hooks.add('wrap', function(env) {","","\tif (env.type === 'entity') {","\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');","\t}","});","","Prism.languages.xml = Prism.languages.markup;","Prism.languages.html = Prism.languages.markup;","Prism.languages.mathml = Prism.languages.markup;","Prism.languages.svg = Prism.languages.markup;","","","/* **********************************************","     Begin prism-css.js","********************************************** */","","Prism.languages.css = {","\t'comment': /\\/\\*[\\w\\W]*?\\*\\//,","\t'atrule': {","\t\tpattern: /@[\\w-]+?.*?(;|(?=\\s*\\{))/i,","\t\tinside: {","\t\t\t'rule': /@[\\w-]+/","\t\t\t// See rest below","\t\t}","\t},","\t'url': /url\\((?:([\"'])(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,","\t'selector': /[^\\{\\}\\s][^\\{\\};]*?(?=\\s*\\{)/,","\t'string': {","\t\tpattern: /(\"|')(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1/,","\t\tgreedy: true","\t},","\t'property': /(\\b|\\B)[\\w-]+(?=\\s*:)/i,","\t'important': /\\B!important\\b/i,","\t'function': /[-a-z0-9]+(?=\\()/i,","\t'punctuation': /[(){};:]/","};","","Prism.languages.css['atrule'].inside.rest = Prism.util.clone(Prism.languages.css);","","if (Prism.languages.markup) {","\tPrism.languages.insertBefore('markup', 'tag', {","\t\t'style': {","\t\t\tpattern: /(<style[\\w\\W]*?>)[\\w\\W]*?(?=<\\/style>)/i,","\t\t\tlookbehind: true,","\t\t\tinside: Prism.languages.css,","\t\t\talias: 'language-css'","\t\t}","\t});","\t","\tPrism.languages.insertBefore('inside', 'attr-value', {","\t\t'style-attr': {","\t\t\tpattern: /\\s*style=(\"|').*?\\1/i,","\t\t\tinside: {","\t\t\t\t'attr-name': {","\t\t\t\t\tpattern: /^\\s*style/i,","\t\t\t\t\tinside: Prism.languages.markup.tag.inside","\t\t\t\t},","\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,","\t\t\t\t'attr-value': {","\t\t\t\t\tpattern: /.+/i,","\t\t\t\t\tinside: Prism.languages.css","\t\t\t\t}","\t\t\t},","\t\t\talias: 'language-css'","\t\t}","\t}, Prism.languages.markup.tag);","}","","/* **********************************************","     Begin prism-clike.js","********************************************** */","","Prism.languages.clike = {","\t'comment': [","\t\t{","\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\//,","\t\t\tlookbehind: true","\t\t},","\t\t{","\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,","\t\t\tlookbehind: true","\t\t}","\t],","\t'string': {","\t\tpattern: /([\"'])(\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,","\t\tgreedy: true","\t},","\t'class-name': {","\t\tpattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[a-z0-9_\\.\\\\]+/i,","\t\tlookbehind: true,","\t\tinside: {","\t\t\tpunctuation: /(\\.|\\\\)/","\t\t}","\t},","\t'keyword': /\\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,","\t'boolean': /\\b(true|false)\\b/,","\t'function': /[a-z0-9_]+(?=\\()/i,","\t'number': /\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)\\b/i,","\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,","\t'punctuation': /[{}[\\];(),.:]/","};","","","/* **********************************************","     Begin prism-javascript.js","********************************************** */","","Prism.languages.javascript = Prism.languages.extend('clike', {","\t'keyword': /\\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,","\t'number': /\\b-?(0x[\\dA-Fa-f]+|0b[01]+|0o[0-7]+|\\d*\\.?\\d+([Ee][+-]?\\d+)?|NaN|Infinity)\\b/,","\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)","\t'function': /[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*(?=\\()/i,","\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*\\*?|\\/|~|\\^|%|\\.{3}/","});","","Prism.languages.insertBefore('javascript', 'keyword', {","\t'regex': {","\t\tpattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,","\t\tlookbehind: true,","\t\tgreedy: true","\t}","});","","Prism.languages.insertBefore('javascript', 'string', {","\t'template-string': {","\t\tpattern: /`(?:\\\\\\\\|\\\\?[^\\\\])*?`/,","\t\tgreedy: true,","\t\tinside: {","\t\t\t'interpolation': {","\t\t\t\tpattern: /\\$\\{[^}]+\\}/,","\t\t\t\tinside: {","\t\t\t\t\t'interpolation-punctuation': {","\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,","\t\t\t\t\t\talias: 'punctuation'","\t\t\t\t\t},","\t\t\t\t\trest: Prism.languages.javascript","\t\t\t\t}","\t\t\t},","\t\t\t'string': /[\\s\\S]+/","\t\t}","\t}","});","","if (Prism.languages.markup) {","\tPrism.languages.insertBefore('markup', 'tag', {","\t\t'script': {","\t\t\tpattern: /(<script[\\w\\W]*?>)[\\w\\W]*?(?=<\\/script>)/i,","\t\t\tlookbehind: true,","\t\t\tinside: Prism.languages.javascript,","\t\t\talias: 'language-javascript'","\t\t}","\t});","}","","Prism.languages.js = Prism.languages.javascript;","","/* **********************************************","     Begin prism-file-highlight.js","********************************************** */","","(function () {","\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {","\t\treturn;","\t}","","\tself.Prism.fileHighlight = function() {","","\t\tvar Extensions = {","\t\t\t'js': 'javascript',","\t\t\t'py': 'python',","\t\t\t'rb': 'ruby',","\t\t\t'ps1': 'powershell',","\t\t\t'psm1': 'powershell',","\t\t\t'sh': 'bash',","\t\t\t'bat': 'batch',","\t\t\t'h': 'c',","\t\t\t'tex': 'latex'","\t\t};","","\t\tif(Array.prototype.forEach) { // Check to prevent error in IE8","\t\t\tArray.prototype.slice.call(document.querySelectorAll('pre[data-src]')).forEach(function (pre) {","\t\t\t\tvar src = pre.getAttribute('data-src');","","\t\t\t\tvar language, parent = pre;","\t\t\t\tvar lang = /\\blang(?:uage)?-(?!\\*)(\\w+)\\b/i;","\t\t\t\twhile (parent && !lang.test(parent.className)) {","\t\t\t\t\tparent = parent.parentNode;","\t\t\t\t}","","\t\t\t\tif (parent) {","\t\t\t\t\tlanguage = (pre.className.match(lang) || [, ''])[1];","\t\t\t\t}","","\t\t\t\tif (!language) {","\t\t\t\t\tvar extension = (src.match(/\\.(\\w+)$/) || [, ''])[1];","\t\t\t\t\tlanguage = Extensions[extension] || extension;","\t\t\t\t}","","\t\t\t\tvar code = document.createElement('code');","\t\t\t\tcode.className = 'language-' + language;","","\t\t\t\tpre.textContent = '';","","\t\t\t\tcode.textContent = 'Loading…';","","\t\t\t\tpre.appendChild(code);","","\t\t\t\tvar xhr = new XMLHttpRequest();","","\t\t\t\txhr.open('GET', src, true);","","\t\t\t\txhr.onreadystatechange = function () {","\t\t\t\t\tif (xhr.readyState == 4) {","","\t\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {","\t\t\t\t\t\t\tcode.textContent = xhr.responseText;","","\t\t\t\t\t\t\tPrism.highlightElement(code);","\t\t\t\t\t\t}","\t\t\t\t\t\telse if (xhr.status >= 400) {","\t\t\t\t\t\t\tcode.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;","\t\t\t\t\t\t}","\t\t\t\t\t\telse {","\t\t\t\t\t\t\tcode.textContent = '✖ Error: File does not exist or is empty';","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t};","","\t\t\t\txhr.send(null);","\t\t\t});","\t\t}","","\t};","","\tdocument.addEventListener('DOMContentLoaded', self.Prism.fileHighlight);","","})();",""],"l":{"6":1,"20":1,"23":1,"24":1,"26":1,"29":0,"30":0,"31":0,"32":0,"34":0,"39":12265,"43":4790,"44":345,"46":4790,"51":364,"53":364,"55":111,"57":111,"58":341,"59":341,"63":111,"67":16,"70":245,"76":6,"78":6,"79":15,"82":6,"95":13,"96":13,"98":13,"99":0,"101":0,"102":0,"103":0,"107":0,"110":13,"112":13,"114":120,"116":120,"118":13,"120":16,"121":16,"126":120,"131":13,"132":6958,"133":8,"137":13,"142":2155,"143":2155,"144":6958,"145":6958,"147":6958,"148":2015,"149":2015,"151":4943,"152":127,"153":127,"162":0,"167":0,"169":0,"171":0,"172":0,"178":0,"180":0,"181":0,"184":0,"185":0,"186":0,"190":0,"193":0,"195":0,"196":0,"199":0,"201":0,"208":0,"210":0,"211":0,"212":0,"214":0,"215":0,"218":0,"220":0,"221":0,"223":0,"224":0,"226":0,"228":0,"230":0,"231":0,"232":0,"235":0,"242":0,"244":0,"246":0,"248":0,"250":0,"251":0,"256":0,"257":0,"261":0,"263":0,"265":0,"267":0,"268":0,"269":0,"272":0,"275":0,"276":0,"277":0,"280":0,"281":0,"283":0,"284":0,"291":0,"293":0,"294":0,"297":0,"300":0,"302":0,"304":0,"306":0,"309":0,"310":0,"313":0,"315":0,"319":0,"320":0,"321":0,"322":0,"323":0,"326":0,"331":0,"332":0,"334":0,"335":0,"336":0,"344":0,"345":0,"349":0,"350":0,"351":0,"354":0,"355":0,"358":0,"359":0,"362":0,"368":0,"370":0,"371":0,"374":0,"376":0,"378":0,"379":0,"382":0,"387":0,"394":2,"396":2,"398":2,"402":0,"404":0,"405":0,"408":0,"409":0,"415":1,"416":0,"417":0,"418":0,"420":0,"421":0,"424":1,"425":0,"426":0,"429":0,"430":0,"431":0,"435":0,"445":0,"446":0,"449":0,"450":0,"451":0,"454":0,"456":0,"457":0,"460":0,"464":1,"465":1,"467":1,"470":0,"471":0,"476":0,"477":0,"478":0,"482":0,"486":0,"488":0,"489":0,"491":0,"492":0,"493":0,"494":0,"496":0,"500":0,"505":0,"509":1,"510":1,"514":1,"515":1,"523":1,"558":1,"560":0,"561":0,"565":1,"566":1,"567":1,"568":1,"575":1,"596":1,"598":1,"599":1,"608":1,"631":1,"666":1,"674":1,"682":1,"702":1,"703":1,"713":1,"719":1,"720":1,"721":1,"724":0,"726":0,"738":0,"739":0,"740":0,"742":0,"743":0,"744":0,"745":0,"748":0,"749":0,"752":0,"753":0,"754":0,"757":0,"758":0,"760":0,"762":0,"764":0,"766":0,"768":0,"770":0,"771":0,"773":0,"774":0,"776":0,"778":0,"779":0,"782":0,"787":0,"793":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/gulpfile.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/gulpfile.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":24},"end":{"line":26,"column":35}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":19},"end":{"line":33,"column":30}}},"3":{"name":"(anonymous_3)","line":42,"loc":{"start":{"line":42,"column":44},"end":{"line":42,"column":55}}},"4":{"name":"(anonymous_4)","line":49,"loc":{"start":{"line":49,"column":19},"end":{"line":49,"column":30}}},"5":{"name":"(anonymous_5)","line":54,"loc":{"start":{"line":54,"column":31},"end":{"line":54,"column":45}}},"6":{"name":"(anonymous_6)","line":57,"loc":{"start":{"line":57,"column":4},"end":{"line":57,"column":25}}},"7":{"name":"(anonymous_7)","line":93,"loc":{"start":{"line":93,"column":15},"end":{"line":93,"column":26}}},"8":{"name":"(anonymous_8)","line":100,"loc":{"start":{"line":100,"column":18},"end":{"line":100,"column":33}}},"9":{"name":"(anonymous_9)","line":121,"loc":{"start":{"line":121,"column":23},"end":{"line":121,"column":37}}},"10":{"name":"(anonymous_10)","line":129,"loc":{"start":{"line":129,"column":3},"end":{"line":129,"column":20}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":24,"column":3}},"2":{"start":{"line":26,"column":0},"end":{"line":31,"column":3}},"3":{"start":{"line":27,"column":1},"end":{"line":30,"column":33}},"4":{"start":{"line":33,"column":0},"end":{"line":40,"column":3}},"5":{"start":{"line":34,"column":1},"end":{"line":39,"column":25}},"6":{"start":{"line":42,"column":0},"end":{"line":47,"column":3}},"7":{"start":{"line":43,"column":1},"end":{"line":46,"column":30}},"8":{"start":{"line":49,"column":0},"end":{"line":52,"column":3}},"9":{"start":{"line":50,"column":1},"end":{"line":50,"column":55}},"10":{"start":{"line":51,"column":1},"end":{"line":51,"column":49}},"11":{"start":{"line":54,"column":0},"end":{"line":119,"column":3}},"12":{"start":{"line":55,"column":1},"end":{"line":118,"column":4}},"13":{"start":{"line":58,"column":2},"end":{"line":117,"column":3}},"14":{"start":{"line":59,"column":3},"end":{"line":59,"column":62}},"15":{"start":{"line":60,"column":3},"end":{"line":114,"column":4}},"16":{"start":{"line":61,"column":4},"end":{"line":61,"column":28}},"17":{"start":{"line":63,"column":4},"end":{"line":63,"column":26}},"18":{"start":{"line":64,"column":4},"end":{"line":64,"column":29}},"19":{"start":{"line":65,"column":4},"end":{"line":81,"column":5}},"20":{"start":{"line":66,"column":5},"end":{"line":80,"column":6}},"21":{"start":{"line":67,"column":6},"end":{"line":67,"column":76}},"22":{"start":{"line":68,"column":6},"end":{"line":68,"column":69}},"23":{"start":{"line":69,"column":6},"end":{"line":71,"column":7}},"24":{"start":{"line":70,"column":7},"end":{"line":70,"column":31}},"25":{"start":{"line":73,"column":6},"end":{"line":75,"column":7}},"26":{"start":{"line":74,"column":7},"end":{"line":74,"column":64}},"27":{"start":{"line":77,"column":6},"end":{"line":79,"column":7}},"28":{"start":{"line":78,"column":7},"end":{"line":78,"column":54}},"29":{"start":{"line":83,"column":4},"end":{"line":83,"column":56}},"30":{"start":{"line":84,"column":4},"end":{"line":84,"column":62}},"31":{"start":{"line":86,"column":4},"end":{"line":89,"column":6}},"32":{"start":{"line":91,"column":4},"end":{"line":91,"column":16}},"33":{"start":{"line":92,"column":4},"end":{"line":92,"column":25}},"34":{"start":{"line":93,"column":4},"end":{"line":98,"column":6}},"35":{"start":{"line":94,"column":5},"end":{"line":94,"column":11}},"36":{"start":{"line":95,"column":5},"end":{"line":97,"column":6}},"37":{"start":{"line":96,"column":6},"end":{"line":96,"column":17}},"38":{"start":{"line":100,"column":4},"end":{"line":110,"column":7}},"39":{"start":{"line":101,"column":5},"end":{"line":106,"column":79}},"40":{"start":{"line":108,"column":5},"end":{"line":108,"column":30}},"41":{"start":{"line":109,"column":5},"end":{"line":109,"column":28}},"42":{"start":{"line":113,"column":4},"end":{"line":113,"column":10}},"43":{"start":{"line":116,"column":3},"end":{"line":116,"column":11}},"44":{"start":{"line":121,"column":0},"end":{"line":134,"column":3}},"45":{"start":{"line":122,"column":1},"end":{"line":133,"column":24}},"46":{"start":{"line":130,"column":4},"end":{"line":130,"column":104}},"47":{"start":{"line":136,"column":0},"end":{"line":136,"column":57}}},"branchMap":{"1":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"2":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":5},"end":{"line":66,"column":5}},{"start":{"line":66,"column":5},"end":{"line":66,"column":5}}]},"3":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":18},"end":{"line":67,"column":48}},{"start":{"line":67,"column":52},"end":{"line":67,"column":75}}]},"4":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":6},"end":{"line":69,"column":6}},{"start":{"line":69,"column":6},"end":{"line":69,"column":6}}]},"5":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":6},"end":{"line":77,"column":6}},{"start":{"line":77,"column":6},"end":{"line":77,"column":6}}]},"6":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":5},"end":{"line":95,"column":5}},{"start":{"line":95,"column":5},"end":{"line":95,"column":5}}]},"7":{"line":96,"type":"binary-expr","locations":[{"start":{"line":96,"column":6},"end":{"line":96,"column":8}},{"start":{"line":96,"column":12},"end":{"line":96,"column":16}}]}},"code":["var gulp   = require('gulp'),","\trename = require('gulp-rename'),","\tuglify = require('gulp-uglify'),","\theader = require('gulp-header'),","\tconcat = require('gulp-concat'),","\treplace = require('gulp-replace'),","\tfs = require('fs'),","","\tpaths  = {","\t\tcomponentsFile: 'components.js',","\t\tcomponents: ['components/**/*.js', '!components/**/*.min.js'],","\t\tmain: [","\t\t\t'components/prism-core.js',","\t\t\t'components/prism-markup.js',","\t\t\t'components/prism-css.js',","\t\t\t'components/prism-clike.js',","\t\t\t'components/prism-javascript.js',","\t\t\t'plugins/file-highlight/prism-file-highlight.js'","\t\t],","\t\tplugins: ['plugins/**/*.js', '!plugins/**/*.min.js'],","\t\tshowLanguagePlugin: 'plugins/show-language/prism-show-language.js',","\t\tautoloaderPlugin: 'plugins/autoloader/prism-autoloader.js',","\t\tchangelog: 'CHANGELOG.md'","\t};","","gulp.task('components', function() {","\treturn gulp.src(paths.components)","\t\t.pipe(uglify())","\t\t.pipe(rename({ suffix: '.min' }))","\t\t.pipe(gulp.dest('components'));","});","","gulp.task('build', function() {","\treturn gulp.src(paths.main)","\t\t.pipe(header('\\n/* **********************************************\\n' +","\t\t\t'     Begin <%= file.relative %>\\n' +","\t\t\t'********************************************** */\\n\\n'))","\t\t.pipe(concat('prism.js'))","\t\t.pipe(gulp.dest('./'));","});","","gulp.task('plugins', ['languages-plugins'], function() {","\treturn gulp.src(paths.plugins)","\t\t.pipe(uglify())","\t\t.pipe(rename({ suffix: '.min' }))","\t\t.pipe(gulp.dest('plugins'));","});","","gulp.task('watch', function() {","\tgulp.watch(paths.components, ['components', 'build']);","\tgulp.watch(paths.plugins, ['plugins', 'build']);","});","","gulp.task('languages-plugins', function (cb) {","\tfs.readFile(paths.componentsFile, {","\t\tencoding: 'utf-8'","\t}, function (err, data) {","\t\tif (!err) {","\t\t\tdata = data.replace(/^var\\s+components\\s*=\\s*|;\\s*$/g, '');","\t\t\ttry {","\t\t\t\tdata = JSON.parse(data);","","\t\t\t\tvar languagesMap = {};","\t\t\t\tvar dependenciesMap = {};","\t\t\t\tfor (var p in data.languages) {","\t\t\t\t\tif (p !== 'meta') {","\t\t\t\t\t\tvar title = data.languages[p].displayTitle || data.languages[p].title;","\t\t\t\t\t\tvar ucfirst = p.substring(0, 1).toUpperCase() + p.substring(1);","\t\t\t\t\t\tif (title !== ucfirst) {","\t\t\t\t\t\t\tlanguagesMap[p] = title;","\t\t\t\t\t\t}","","\t\t\t\t\t\tfor (var name in data.languages[p].aliasTitles) {","\t\t\t\t\t\t\tlanguagesMap[name] = data.languages[p].aliasTitles[name];","\t\t\t\t\t\t}","","\t\t\t\t\t\tif(data.languages[p].require) {","\t\t\t\t\t\t\tdependenciesMap[p] = data.languages[p].require;","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t}","","\t\t\t\tvar jsonLanguagesMap = JSON.stringify(languagesMap);","\t\t\t\tvar jsonDependenciesMap = JSON.stringify(dependenciesMap);","","\t\t\t\tvar tasks = [","\t\t\t\t\t{plugin: paths.showLanguagePlugin, map: jsonLanguagesMap},","\t\t\t\t\t{plugin: paths.autoloaderPlugin, map: jsonDependenciesMap}","\t\t\t\t];","","\t\t\t\tvar cpt = 0;","\t\t\t\tvar l = tasks.length;","\t\t\t\tvar done = function() {","\t\t\t\t\tcpt++;","\t\t\t\t\tif(cpt === l) {","\t\t\t\t\t\tcb && cb();","\t\t\t\t\t}","\t\t\t\t};","","\t\t\t\ttasks.forEach(function(task) {","\t\t\t\t\tvar stream = gulp.src(task.plugin)","\t\t\t\t\t\t.pipe(replace(","\t\t\t\t\t\t\t/\\/\\*languages_placeholder\\[\\*\\/[\\s\\S]*?\\/\\*\\]\\*\\//,","\t\t\t\t\t\t\t'/*languages_placeholder[*/' + task.map + '/*]*/'","\t\t\t\t\t\t))","\t\t\t\t\t\t.pipe(gulp.dest(task.plugin.substring(0, task.plugin.lastIndexOf('/'))));","","\t\t\t\t\tstream.on('error', done);","\t\t\t\t\tstream.on('end', done);","\t\t\t\t});","","\t\t\t} catch (e) {","\t\t\t\tcb(e);","\t\t\t}","\t\t} else {","\t\t\tcb(err);","\t\t}","\t});","});","","gulp.task('changelog', function (cb) {","\treturn gulp.src(paths.changelog)","\t\t.pipe(replace(","\t\t\t/#(\\d+)(?![\\d\\]])/g,","\t\t\t'[#$1](https://github.com/PrismJS/prism/issues/$1)'","\t\t))","\t\t.pipe(replace(","\t\t\t/\\[[\\da-f]+(?:, *[\\da-f]+)*\\]/g,","\t\t\tfunction (match) {","\t\t\t\treturn match.replace(/([\\da-f]{7})[\\da-f]*/g, '[`$1`](https://github.com/PrismJS/prism/commit/$1)');","\t\t\t}","\t\t))","\t\t.pipe(gulp.dest('.'));","});","","gulp.task('default', ['components', 'plugins', 'build']);",""],"l":{"1":2,"26":0,"27":0,"33":0,"34":0,"42":0,"43":0,"49":0,"50":0,"51":0,"54":0,"55":0,"58":0,"59":0,"60":0,"61":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"73":0,"74":0,"77":0,"78":0,"83":0,"84":0,"86":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"100":0,"101":0,"108":0,"109":0,"113":0,"116":0,"121":0,"122":0,"130":0,"136":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-abap.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-abap.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":48,"column":2}}},"branchMap":{},"code":["Prism.languages.abap = {","\t'comment': /^\\*.*/m,","\t'string' : /(`|')(\\\\?.)*?\\1/m,","\t'string-template': {","\t\tpattern: /(\\||\\})(\\\\?.)*?(?=\\||\\{)/,","\t\tlookbehind: true,","\t\talias: 'string'","\t},","\t/* End Of Line comments should not interfere with strings when the  ","\tquote character occurs within them. We assume a string being highlighted","\tinside an EOL comment is more acceptable than the opposite.","\t*/","\t'eol-comment': {","\t\tpattern: /(^|\\s)\".*/m,","\t\tlookbehind: true,","\t\talias: 'comment'","\t},","\t'keyword' : {","\t\tpattern: /(\\s|\\.|^)(?:SCIENTIFIC_WITH_LEADING_ZERO|SCALE_PRESERVING_SCIENTIFIC|RMC_COMMUNICATION_FAILURE|END-ENHANCEMENT-SECTION|MULTIPLY-CORRESPONDING|SUBTRACT-CORRESPONDING|VERIFICATION-MESSAGE|DIVIDE-CORRESPONDING|ENHANCEMENT-SECTION|CURRENCY_CONVERSION|RMC_SYSTEM_FAILURE|START-OF-SELECTION|MOVE-CORRESPONDING|RMC_INVALID_STATUS|CUSTOMER-FUNCTION|END-OF-DEFINITION|ENHANCEMENT-POINT|SYSTEM-EXCEPTIONS|ADD-CORRESPONDING|SCALE_PRESERVING|SELECTION-SCREEN|CURSOR-SELECTION|END-OF-SELECTION|LOAD-OF-PROGRAM|SCROLL-BOUNDARY|SELECTION-TABLE|EXCEPTION-TABLE|IMPLEMENTATIONS|PARAMETER-TABLE|RIGHT-JUSTIFIED|UNIT_CONVERSION|AUTHORITY-CHECK|LIST-PROCESSING|SIGN_AS_POSTFIX|COL_BACKGROUND|IMPLEMENTATION|INTERFACE-POOL|TRANSFORMATION|IDENTIFICATION|ENDENHANCEMENT|LINE-SELECTION|INITIALIZATION|LEFT-JUSTIFIED|SELECT-OPTIONS|SELECTION-SETS|COMMUNICATION|CORRESPONDING|DECIMAL_SHIFT|PRINT-CONTROL|VALUE-REQUEST|CHAIN-REQUEST|FUNCTION-POOL|FIELD-SYMBOLS|FUNCTIONALITY|INVERTED-DATE|SELECTION-SET|CLASS-METHODS|OUTPUT-LENGTH|CLASS-CODING|COL_NEGATIVE|ERRORMESSAGE|FIELD-GROUPS|HELP-REQUEST|NO-EXTENSION|NO-TOPOFPAGE|REDEFINITION|DISPLAY-MODE|ENDINTERFACE|EXIT-COMMAND|FIELD-SYMBOL|NO-SCROLLING|SHORTDUMP-ID|ACCESSPOLICY|CLASS-EVENTS|COL_POSITIVE|DECLARATIONS|ENHANCEMENTS|FILTER-TABLE|SWITCHSTATES|SYNTAX-CHECK|TRANSPORTING|ASYNCHRONOUS|SYNTAX-TRACE|TOKENIZATION|USER-COMMAND|WITH-HEADING|ABAP-SOURCE|BREAK-POINT|CHAIN-INPUT|COMPRESSION|FIXED-POINT|NEW-SECTION|NON-UNICODE|OCCURRENCES|RESPONSIBLE|SYSTEM-CALL|TRACE-TABLE|ABBREVIATED|CHAR-TO-HEX|END-OF-FILE|ENDFUNCTION|ENVIRONMENT|ASSOCIATION|COL_HEADING|EDITOR-CALL|END-OF-PAGE|ENGINEERING|IMPLEMENTED|INTENSIFIED|RADIOBUTTON|SYSTEM-EXIT|TOP-OF-PAGE|TRANSACTION|APPLICATION|CONCATENATE|DESTINATION|ENHANCEMENT|IMMEDIATELY|NO-GROUPING|PRECOMPILED|REPLACEMENT|TITLE-LINES|ACTIVATION|BYTE-ORDER|CLASS-POOL|CONNECTION|CONVERSION|DEFINITION|DEPARTMENT|EXPIRATION|INHERITING|MESSAGE-ID|NO-HEADING|PERFORMING|QUEUE-ONLY|RIGHTSPACE|SCIENTIFIC|STATUSINFO|STRUCTURES|SYNCPOINTS|WITH-TITLE|ATTRIBUTES|BOUNDARIES|CLASS-DATA|COL_NORMAL|DD\\/MM\\/YYYY|DESCENDING|INTERFACES|LINE-COUNT|MM\\/DD\\/YYYY|NON-UNIQUE|PRESERVING|SELECTIONS|STATEMENTS|SUBROUTINE|TRUNCATION|TYPE-POOLS|ARITHMETIC|BACKGROUND|ENDPROVIDE|EXCEPTIONS|IDENTIFIER|INDEX-LINE|OBLIGATORY|PARAMETERS|PERCENTAGE|PUSHBUTTON|RESOLUTION|COMPONENTS|DEALLOCATE|DISCONNECT|DUPLICATES|FIRST-LINE|HEAD-LINES|NO-DISPLAY|OCCURRENCE|RESPECTING|RETURNCODE|SUBMATCHES|TRACE-FILE|ASCENDING|BYPASSING|ENDMODULE|EXCEPTION|EXCLUDING|EXPORTING|INCREMENT|MATCHCODE|PARAMETER|PARTIALLY|PREFERRED|REFERENCE|REPLACING|RETURNING|SELECTION|SEPARATED|SPECIFIED|STATEMENT|TIMESTAMP|TYPE-POOL|ACCEPTING|APPENDAGE|ASSIGNING|COL_GROUP|COMPARING|CONSTANTS|DANGEROUS|IMPORTING|INSTANCES|LEFTSPACE|LOG-POINT|QUICKINFO|READ-ONLY|SCROLLING|SQLSCRIPT|STEP-LOOP|TOP-LINES|TRANSLATE|APPENDING|AUTHORITY|CHARACTER|COMPONENT|CONDITION|DIRECTORY|DUPLICATE|MESSAGING|RECEIVING|SUBSCREEN|ACCORDING|COL_TOTAL|END-LINES|ENDMETHOD|ENDSELECT|EXPANDING|EXTENSION|INCLUDING|INFOTYPES|INTERFACE|INTERVALS|LINE-SIZE|PF-STATUS|PROCEDURE|PROTECTED|REQUESTED|RESUMABLE|RIGHTPLUS|SAP-SPOOL|SECONDARY|STRUCTURE|SUBSTRING|TABLEVIEW|NUMOFCHAR|ADJACENT|ANALYSIS|ASSIGNED|BACKWARD|CHANNELS|CHECKBOX|CONTINUE|CRITICAL|DATAINFO|DD\\/MM\\/YY|DURATION|ENCODING|ENDCLASS|FUNCTION|LEFTPLUS|LINEFEED|MM\\/DD\\/YY|OVERFLOW|RECEIVED|SKIPPING|SORTABLE|STANDARD|SUBTRACT|SUPPRESS|TABSTRIP|TITLEBAR|TRUNCATE|UNASSIGN|WHENEVER|ANALYZER|COALESCE|COMMENTS|CONDENSE|DECIMALS|DEFERRED|ENDWHILE|EXPLICIT|KEYWORDS|MESSAGES|POSITION|PRIORITY|RECEIVER|RENAMING|TIMEZONE|TRAILING|ALLOCATE|CENTERED|CIRCULAR|CONTROLS|CURRENCY|DELETING|DESCRIBE|DISTANCE|ENDCATCH|EXPONENT|EXTENDED|GENERATE|IGNORING|INCLUDES|INTERNAL|MAJOR-ID|MODIFIER|NEW-LINE|OPTIONAL|PROPERTY|ROLLBACK|STARTING|SUPPLIED|ABSTRACT|CHANGING|CONTEXTS|CREATING|CUSTOMER|DATABASE|DAYLIGHT|DEFINING|DISTINCT|DIVISION|ENABLING|ENDCHAIN|ESCAPING|HARMLESS|IMPLICIT|INACTIVE|LANGUAGE|MINOR-ID|MULTIPLY|NEW-PAGE|NO-TITLE|POS_HIGH|SEPARATE|TEXTPOOL|TRANSFER|SELECTOR|DBMAXLEN|ITERATOR|SELECTOR|ARCHIVE|BIT-XOR|BYTE-CO|COLLECT|COMMENT|CURRENT|DEFAULT|DISPLAY|ENDFORM|EXTRACT|LEADING|LISTBOX|LOCATOR|MEMBERS|METHODS|NESTING|POS_LOW|PROCESS|PROVIDE|RAISING|RESERVE|SECONDS|SUMMARY|VISIBLE|BETWEEN|BIT-AND|BYTE-CS|CLEANUP|COMPUTE|CONTROL|CONVERT|DATASET|ENDCASE|FORWARD|HEADERS|HOTSPOT|INCLUDE|INVERSE|KEEPING|NO-ZERO|OBJECTS|OVERLAY|PADDING|PATTERN|PROGRAM|REFRESH|SECTION|SUMMING|TESTING|VERSION|WINDOWS|WITHOUT|BIT-NOT|BYTE-CA|BYTE-NA|CASTING|CONTEXT|COUNTRY|DYNAMIC|ENABLED|ENDLOOP|EXECUTE|FRIENDS|HANDLER|HEADING|INITIAL|\\*-INPUT|LOGFILE|MAXIMUM|MINIMUM|NO-GAPS|NO-SIGN|PRAGMAS|PRIMARY|PRIVATE|REDUCED|REPLACE|REQUEST|RESULTS|UNICODE|WARNING|ALIASES|BYTE-CN|BYTE-NS|CALLING|COL_KEY|COLUMNS|CONNECT|ENDEXEC|ENTRIES|EXCLUDE|FILTERS|FURTHER|HELP-ID|LOGICAL|MAPPING|MESSAGE|NAMETAB|OPTIONS|PACKAGE|PERFORM|RECEIVE|STATICS|VARYING|BINDING|CHARLEN|GREATER|XSTRLEN|ACCEPT|APPEND|DETAIL|ELSEIF|ENDING|ENDTRY|FORMAT|FRAMES|GIVING|HASHED|HEADER|IMPORT|INSERT|MARGIN|MODULE|NATIVE|OBJECT|OFFSET|REMOTE|RESUME|SAVING|SIMPLE|SUBMIT|TABBED|TOKENS|UNIQUE|UNPACK|UPDATE|WINDOW|YELLOW|ACTUAL|ASPECT|CENTER|CURSOR|DELETE|DIALOG|DIVIDE|DURING|ERRORS|EVENTS|EXTEND|FILTER|HANDLE|HAVING|IGNORE|LITTLE|MEMORY|NO-GAP|OCCURS|OPTION|PERSON|PLACES|PUBLIC|REDUCE|REPORT|RESULT|SINGLE|SORTED|SWITCH|SYNTAX|TARGET|VALUES|WRITER|ASSERT|BLOCKS|BOUNDS|BUFFER|CHANGE|COLUMN|COMMIT|CONCAT|COPIES|CREATE|DDMMYY|DEFINE|ENDIAN|ESCAPE|EXPAND|KERNEL|LAYOUT|LEGACY|LEVELS|MMDDYY|NUMBER|OUTPUT|RANGES|READER|RETURN|SCREEN|SEARCH|SELECT|SHARED|SOURCE|STABLE|STATIC|SUBKEY|SUFFIX|TABLES|UNWIND|YYMMDD|ASSIGN|BACKUP|BEFORE|BINARY|BIT-OR|BLANKS|CLIENT|CODING|COMMON|DEMAND|DYNPRO|EXCEPT|EXISTS|EXPORT|FIELDS|GLOBAL|GROUPS|LENGTH|LOCALE|MEDIUM|METHOD|MODIFY|NESTED|OTHERS|REJECT|SCROLL|SUPPLY|SYMBOL|ENDFOR|STRLEN|ALIGN|BEGIN|BOUND|ENDAT|ENTRY|EVENT|FINAL|FLUSH|GRANT|INNER|SHORT|USING|WRITE|AFTER|BLACK|BLOCK|CLOCK|COLOR|COUNT|DUMMY|EMPTY|ENDDO|ENDON|GREEN|INDEX|INOUT|LEAVE|LEVEL|LINES|MODIF|ORDER|OUTER|RANGE|RESET|RETRY|RIGHT|SMART|SPLIT|STYLE|TABLE|THROW|UNDER|UNTIL|UPPER|UTF-8|WHERE|ALIAS|BLANK|CLEAR|CLOSE|EXACT|FETCH|FIRST|FOUND|GROUP|LLANG|LOCAL|OTHER|REGEX|SPOOL|TITLE|TYPES|VALID|WHILE|ALPHA|BOXED|CATCH|CHAIN|CHECK|CLASS|COVER|ENDIF|EQUIV|FIELD|FLOOR|FRAME|INPUT|LOWER|MATCH|NODES|PAGES|PRINT|RAISE|ROUND|SHIFT|SPACE|SPOTS|STAMP|STATE|TASKS|TIMES|TRMAC|ULINE|UNION|VALUE|WIDTH|EQUAL|LOG10|TRUNC|BLOB|CASE|CEIL|CLOB|COND|EXIT|FILE|GAPS|HOLD|INCL|INTO|KEEP|KEYS|LAST|LINE|LONG|LPAD|MAIL|MODE|OPEN|PINK|READ|ROWS|TEST|THEN|ZERO|AREA|BACK|BADI|BYTE|CAST|EDIT|EXEC|FAIL|FIND|FKEQ|FONT|FREE|GKEQ|HIDE|INIT|ITNO|LATE|LOOP|MAIN|MARK|MOVE|NEXT|NULL|RISK|ROLE|UNIT|WAIT|ZONE|BASE|CALL|CODE|DATA|DATE|FKGE|GKGE|HIGH|KIND|LEFT|LIST|MASK|MESH|NAME|NODE|PACK|PAGE|POOL|SEND|SIGN|SIZE|SOME|STOP|TASK|TEXT|TIME|USER|VARY|WITH|WORD|BLUE|CONV|COPY|DEEP|ELSE|FORM|FROM|HINT|ICON|JOIN|LIKE|LOAD|ONLY|PART|SCAN|SKIP|SORT|TYPE|UNIX|VIEW|WHEN|WORK|ACOS|ASIN|ATAN|COSH|EACH|FRAC|LESS|RTTI|SINH|SQRT|TANH|AVG|BIT|DIV|ISO|LET|OUT|PAD|SQL|ALL|CI_|CPI|END|LOB|LPI|MAX|MIN|NEW|OLE|RUN|SET|\\?TO|YES|ABS|ADD|AND|BIG|FOR|HDB|JOB|LOW|NOT|SAP|TRY|VIA|XML|ANY|GET|IDS|KEY|MOD|OFF|PUT|RAW|RED|REF|SUM|TAB|XSD|CNT|COS|EXP|LOG|SIN|TAN|XOR|AT|CO|CP|DO|GT|ID|IF|NS|OR|BT|CA|CS|GE|NA|NB|EQ|IN|LT|NE|NO|OF|ON|PF|TO|AS|BY|CN|IS|LE|NP|UP|E|I|M|O|Z|C|X)\\b/i,","\t\tlookbehind: true","\t},","\t/* Numbers can be only integers. Decimal or Hex appear only as strings */","\t'number' : /\\b\\d+\\b/,","\t/* Operators must always be surrounded by whitespace, they cannot be put ","\tadjacent to operands. ","\t*/","\t'operator' : {","\t\tpattern: /(\\s)(?:\\*\\*?|<[=>]?|>=?|\\?=|[-+\\/=])(?=\\s)/,","\t\tlookbehind: true","\t},","\t'string-operator' : {","\t\tpattern: /(\\s)&&?(?=\\s)/,","\t\tlookbehind: true,","\t\t/* The official editor highlights */","\t\talias: \"keyword\"","\t},","\t'token-operator' : [{","\t\t/* Special operators used to access structure components, class methods/attributes, etc. */","\t\tpattern: /(\\w)(?:->?|=>|[~|{}])(?=\\w)/,","\t\tlookbehind: true,","\t\talias: \"punctuation\"","\t}, {","\t    /* Special tokens used do delimit string templates */","\t    pattern: /[|{}]/,","\t\talias: \"punctuation\"","\t}],","\t'punctuation' : /[,.:()]/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-actionscript.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-actionscript.js","s":{"1":1,"2":1,"3":1,"4":1},"b":{"1":[1,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":4,"column":3}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":7,"column":0},"end":{"line":17,"column":1}},"4":{"start":{"line":8,"column":1},"end":{"line":16,"column":4}}},"branchMap":{"1":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":0},"end":{"line":7,"column":0}},{"start":{"line":7,"column":0},"end":{"line":7,"column":0}}]}},"code":["Prism.languages.actionscript = Prism.languages.extend('javascript',  {","\t'keyword': /\\b(?:as|break|case|catch|class|const|default|delete|do|else|extends|finally|for|function|if|implements|import|in|instanceof|interface|internal|is|native|new|null|package|private|protected|public|return|super|switch|this|throw|try|typeof|use|var|void|while|with|dynamic|each|final|get|include|namespace|native|override|set|static)\\b/,","\t'operator': /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/","});","Prism.languages.actionscript['class-name'].alias = 'function';","","if (Prism.languages.markup) {","\tPrism.languages.insertBefore('actionscript', 'string', {","\t\t'xml': {","\t\t\tpattern: /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\\\1|\\\\?(?!\\1)[\\w\\W])*\\2)*\\s*\\/?>/,","\t\t\tlookbehind: true,","\t\t\tinside: {","\t\t\t\trest: Prism.languages.markup","\t\t\t}","\t\t}","\t});","}"],"l":{"1":1,"5":1,"7":1,"8":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-ada.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-ada.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":19,"column":2}}},"branchMap":{},"code":["Prism.languages.ada = {","\t'comment': /--.*/,","\t'string': /\"(?:\"\"|[^\"\\r\\f\\n])*\"/i,","\t'number': [","\t\t{","\t\t\tpattern: /\\b[0-9](?:_?[0-9])*#[0-9A-F](?:_?[0-9A-F])*(?:\\.[0-9A-F](?:_?[0-9A-F])*)?#(?:E[+-]?[0-9](?:_?[0-9])*)?/i","\t\t},","\t\t{","\t\t\tpattern: /\\b[0-9](?:_?[0-9])*(?:\\.[0-9](?:_?[0-9])*)?(?:E[+-]?[0-9](?:_?[0-9])*)?\\b/i","\t\t}","\t],","\t'attr-name': /\\b'\\w+/i,","\t'keyword': /\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|new|return|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,","\t'boolean': /\\b(?:true|false)\\b/i,","\t'operator': /<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,","\t'punctuation': /\\.\\.?|[,;():]/,","\t'char': /'.'/,","\t'variable': /\\b[a-z](?:[_a-z\\d])*\\b/i","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-apacheconf.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-apacheconf.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":47,"column":2}}},"branchMap":{},"code":["Prism.languages.apacheconf = {","\t'comment': /#.*/,","\t'directive-inline': {","\t\tpattern: /^(\\s*)\\b(AcceptFilter|AcceptPathInfo|AccessFileName|Action|AddAlt|AddAltByEncoding|AddAltByType|AddCharset|AddDefaultCharset|AddDescription|AddEncoding|AddHandler|AddIcon|AddIconByEncoding|AddIconByType|AddInputFilter|AddLanguage|AddModuleInfo|AddOutputFilter|AddOutputFilterByType|AddType|Alias|AliasMatch|Allow|AllowCONNECT|AllowEncodedSlashes|AllowMethods|AllowOverride|AllowOverrideList|Anonymous|Anonymous_LogEmail|Anonymous_MustGiveEmail|Anonymous_NoUserID|Anonymous_VerifyEmail|AsyncRequestWorkerFactor|AuthBasicAuthoritative|AuthBasicFake|AuthBasicProvider|AuthBasicUseDigestAlgorithm|AuthDBDUserPWQuery|AuthDBDUserRealmQuery|AuthDBMGroupFile|AuthDBMType|AuthDBMUserFile|AuthDigestAlgorithm|AuthDigestDomain|AuthDigestNonceLifetime|AuthDigestProvider|AuthDigestQop|AuthDigestShmemSize|AuthFormAuthoritative|AuthFormBody|AuthFormDisableNoStore|AuthFormFakeBasicAuth|AuthFormLocation|AuthFormLoginRequiredLocation|AuthFormLoginSuccessLocation|AuthFormLogoutLocation|AuthFormMethod|AuthFormMimetype|AuthFormPassword|AuthFormProvider|AuthFormSitePassphrase|AuthFormSize|AuthFormUsername|AuthGroupFile|AuthLDAPAuthorizePrefix|AuthLDAPBindAuthoritative|AuthLDAPBindDN|AuthLDAPBindPassword|AuthLDAPCharsetConfig|AuthLDAPCompareAsUser|AuthLDAPCompareDNOnServer|AuthLDAPDereferenceAliases|AuthLDAPGroupAttribute|AuthLDAPGroupAttributeIsDN|AuthLDAPInitialBindAsUser|AuthLDAPInitialBindPattern|AuthLDAPMaxSubGroupDepth|AuthLDAPRemoteUserAttribute|AuthLDAPRemoteUserIsDN|AuthLDAPSearchAsUser|AuthLDAPSubGroupAttribute|AuthLDAPSubGroupClass|AuthLDAPUrl|AuthMerging|AuthName|AuthnCacheContext|AuthnCacheEnable|AuthnCacheProvideFor|AuthnCacheSOCache|AuthnCacheTimeout|AuthnzFcgiCheckAuthnProvider|AuthnzFcgiDefineProvider|AuthType|AuthUserFile|AuthzDBDLoginToReferer|AuthzDBDQuery|AuthzDBDRedirectQuery|AuthzDBMType|AuthzSendForbiddenOnFailure|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferedLogs|BufferSize|CacheDefaultExpire|CacheDetailHeader|CacheDirLength|CacheDirLevels|CacheDisable|CacheEnable|CacheFile|CacheHeader|CacheIgnoreCacheControl|CacheIgnoreHeaders|CacheIgnoreNoLastMod|CacheIgnoreQueryString|CacheIgnoreURLSessionIdentifiers|CacheKeyBaseURL|CacheLastModifiedFactor|CacheLock|CacheLockMaxAge|CacheLockPath|CacheMaxExpire|CacheMaxFileSize|CacheMinExpire|CacheMinFileSize|CacheNegotiatedDocs|CacheQuickHandler|CacheReadSize|CacheReadTime|CacheRoot|CacheSocache|CacheSocacheMaxSize|CacheSocacheMaxTime|CacheSocacheMinTime|CacheSocacheReadSize|CacheSocacheReadTime|CacheStaleOnError|CacheStoreExpired|CacheStoreNoStore|CacheStorePrivate|CGIDScriptTimeout|CGIMapExtension|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|DeflateBufferSize|DeflateCompressionLevel|DeflateFilterNote|DeflateInflateLimitRequestBody|DeflateInflateRatioBurst|DeflateInflateRatioLimit|DeflateMemLevel|DeflateWindowSize|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DTracePrivileges|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtendedStatus|ExtFilterDefine|ExtFilterOptions|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|HeartbeatAddress|HeartbeatListen|HeartbeatMaxServers|HeartbeatStorage|HeartbeatStorage|HostnameLookups|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|IndexHeadInsert|IndexIgnore|IndexIgnoreReset|IndexOptions|IndexOrderDefault|IndexStyleSheet|InputSed|ISAPIAppendLogToErrors|ISAPIAppendLogToQuery|ISAPICacheFile|ISAPIFakeAsync|ISAPILogNotSupported|ISAPIReadAheadBuffer|KeepAlive|KeepAliveTimeout|KeptBodySize|LanguagePriority|LDAPCacheEntries|LDAPCacheTTL|LDAPConnectionPoolTTL|LDAPConnectionTimeout|LDAPLibraryDebug|LDAPOpCacheEntries|LDAPOpCacheTTL|LDAPReferralHopLimit|LDAPReferrals|LDAPRetries|LDAPRetryDelay|LDAPSharedCacheFile|LDAPSharedCacheSize|LDAPTimeout|LDAPTrustedClientCert|LDAPTrustedGlobalCert|LDAPTrustedMode|LDAPVerifyServerCert|LimitInternalRecursion|LimitRequestBody|LimitRequestFields|LimitRequestFieldSize|LimitRequestLine|LimitXMLRequestBody|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|LuaHookAccessChecker|LuaHookAuthChecker|LuaHookCheckUserID|LuaHookFixups|LuaHookInsertFilter|LuaHookLog|LuaHookMapToStorage|LuaHookTranslateName|LuaHookTypeChecker|LuaInherit|LuaInputFilter|LuaMapHandler|LuaOutputFilter|LuaPackageCPath|LuaPackagePath|LuaQuickHandler|LuaRoot|LuaScope|MaxConnectionsPerChild|MaxKeepAliveRequests|MaxMemFree|MaxRangeOverlaps|MaxRangeReversals|MaxRanges|MaxRequestWorkers|MaxSpareServers|MaxSpareThreads|MaxThreads|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|MMapFile|ModemStandard|ModMimeUsePathInfo|MultiviewsMatch|Mutex|NameVirtualHost|NoProxy|NWSSLTrustedCerts|NWSSLUpgradeable|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|ProxyAddHeaders|ProxyBadHeader|ProxyBlock|ProxyDomain|ProxyErrorOverride|ProxyExpressDBMFile|ProxyExpressDBMType|ProxyExpressEnable|ProxyFtpDirCharset|ProxyFtpEscapeWildcards|ProxyFtpListOnWildcard|ProxyHTMLBufSize|ProxyHTMLCharsetOut|ProxyHTMLDocType|ProxyHTMLEnable|ProxyHTMLEvents|ProxyHTMLExtended|ProxyHTMLFixups|ProxyHTMLInterp|ProxyHTMLLinks|ProxyHTMLMeta|ProxyHTMLStripComments|ProxyHTMLURLMap|ProxyIOBufferSize|ProxyMaxForwards|ProxyPass|ProxyPassInherit|ProxyPassInterpolateEnv|ProxyPassMatch|ProxyPassReverse|ProxyPassReverseCookieDomain|ProxyPassReverseCookiePath|ProxyPreserveHost|ProxyReceiveBufferSize|ProxyRemote|ProxyRemoteMatch|ProxyRequests|ProxySCGIInternalRedirect|ProxySCGISendfile|ProxySet|ProxySourceAddress|ProxyStatus|ProxyTimeout|ProxyVia|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIPHeader|RemoteIPInternalProxy|RemoteIPInternalProxyList|RemoteIPProxiesHeader|RemoteIPTrustedProxy|RemoteIPTrustedProxyList|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|RewriteBase|RewriteCond|RewriteEngine|RewriteMap|RewriteOptions|RewriteRule|RLimitCPU|RLimitMEM|RLimitNPROC|Satisfy|ScoreBoardFile|Script|ScriptAlias|ScriptAliasMatch|ScriptInterpreterSource|ScriptLog|ScriptLogBuffer|ScriptLogLength|ScriptSock|SecureListen|SeeRequestTail|SendBufferSize|ServerAdmin|ServerAlias|ServerLimit|ServerName|ServerPath|ServerRoot|ServerSignature|ServerTokens|Session|SessionCookieName|SessionCookieName2|SessionCookieRemove|SessionCryptoCipher|SessionCryptoDriver|SessionCryptoPassphrase|SessionCryptoPassphraseFile|SessionDBDCookieName|SessionDBDCookieName2|SessionDBDCookieRemove|SessionDBDDeleteLabel|SessionDBDInsertLabel|SessionDBDPerUser|SessionDBDSelectLabel|SessionDBDUpdateLabel|SessionEnv|SessionExclude|SessionHeader|SessionInclude|SessionMaxAge|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|SSIEndTag|SSIErrorMsg|SSIETag|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSLCACertificateFile|SSLCACertificatePath|SSLCADNRequestFile|SSLCADNRequestPath|SSLCARevocationCheck|SSLCARevocationFile|SSLCARevocationPath|SSLCertificateChainFile|SSLCertificateFile|SSLCertificateKeyFile|SSLCipherSuite|SSLCompression|SSLCryptoDevice|SSLEngine|SSLFIPS|SSLHonorCipherOrder|SSLInsecureRenegotiation|SSLOCSPDefaultResponder|SSLOCSPEnable|SSLOCSPOverrideResponder|SSLOCSPResponderTimeout|SSLOCSPResponseMaxAge|SSLOCSPResponseTimeSkew|SSLOCSPUseRequestNonce|SSLOpenSSLConfCmd|SSLOptions|SSLPassPhraseDialog|SSLProtocol|SSLProxyCACertificateFile|SSLProxyCACertificatePath|SSLProxyCARevocationCheck|SSLProxyCARevocationFile|SSLProxyCARevocationPath|SSLProxyCheckPeerCN|SSLProxyCheckPeerExpire|SSLProxyCheckPeerName|SSLProxyCipherSuite|SSLProxyEngine|SSLProxyMachineCertificateChainFile|SSLProxyMachineCertificateFile|SSLProxyMachineCertificatePath|SSLProxyProtocol|SSLProxyVerify|SSLProxyVerifyDepth|SSLRandomSeed|SSLRenegBufferSize|SSLRequire|SSLRequireSSL|SSLSessionCache|SSLSessionCacheTimeout|SSLSessionTicketKeyFile|SSLSRPUnknownUserSeed|SSLSRPVerifierFile|SSLStaplingCache|SSLStaplingErrorCacheTimeout|SSLStaplingFakeTryLater|SSLStaplingForceURL|SSLStaplingResponderTimeout|SSLStaplingResponseMaxAge|SSLStaplingResponseTimeSkew|SSLStaplingReturnResponderErrors|SSLStaplingStandardCacheTimeout|SSLStrictSNIVHostCheck|SSLUserName|SSLUseStapling|SSLVerifyClient|SSLVerifyDepth|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadsPerChild|ThreadStackSize|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|VirtualDocumentRoot|VirtualDocumentRootIP|VirtualScriptAlias|VirtualScriptAliasIP|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\\b/mi,","\t\tlookbehind: true,","\t\talias: 'property'","\t},","\t'directive-block': {","\t\tpattern: /<\\/?\\b(AuthnProviderAlias|AuthzProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|RequireAll|RequireAny|RequireNone|VirtualHost)\\b *.*>/i,","\t\tinside: {","\t\t\t'directive-block': {","\t\t\t\tpattern: /^<\\/?\\w+/,","\t\t\t\tinside: {","\t\t\t\t\t'punctuation': /^<\\/?/","\t\t\t\t},","\t\t\t\talias: 'tag'","\t\t\t},","\t\t\t'directive-block-parameter': {","\t\t\t\tpattern: /.*[^>]/,","\t\t\t\tinside: {","\t\t\t\t\t'punctuation': /:/,","\t\t\t\t\t'string': {","\t\t\t\t\t\tpattern: /(\"|').*\\1/,","\t\t\t\t\t\tinside: {","\t\t\t\t\t\t\t'variable': /(\\$|%)\\{?(\\w\\.?(\\+|\\-|:)?)+\\}?/","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t},","\t\t\t\talias: 'attr-value'","\t\t\t},","\t\t\t'punctuation': />/","\t\t},","\t\talias: 'tag'","\t},","\t'directive-flags': {","\t\tpattern: /\\[(\\w,?)+\\]/,","\t\talias: 'keyword'","\t},","\t'string': {","\t\tpattern: /(\"|').*\\1/,","\t\tinside: {","\t\t\t'variable': /(\\$|%)\\{?(\\w\\.?(\\+|\\-|:)?)+\\}?/","\t\t}","\t},","\t'variable': /(\\$|%)\\{?(\\w\\.?(\\+|\\-|:)?)+\\}?/,","\t'regex': /\\^?.*\\$|\\^.*\\$?/","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-apl.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-apl.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":29,"column":2}}},"branchMap":{},"code":["Prism.languages.apl = {","\t'comment': /(?:⍝|#[! ]).*$/m,","\t'string': /'(?:[^'\\r\\n]|'')*'/,","\t'number': /¯?(?:\\d*\\.?\\d+(?:e[+¯]?\\d+)?|¯|∞)(?:j¯?(?:\\d*\\.?\\d+(?:e[\\+¯]?\\d+)?|¯|∞))?/i,","\t'statement': /:[A-Z][a-z][A-Za-z]*\\b/,","\t'system-function': {","\t\tpattern: /⎕[A-Z]+/i,","\t\talias: 'function'","\t},","\t'constant': /[⍬⌾#⎕⍞]/,","\t'function': /[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,","\t'monadic-operator': {","\t\tpattern: /[\\\\\\/⌿⍀¨⍨⌶&∥]/,","\t\talias: 'operator'","\t},","\t'dyadic-operator': {","\t\tpattern: /[.⍣⍠⍤∘⌸]/,","\t\talias: 'operator'","\t},","\t'assignment': {","\t\tpattern: /←/,","\t\talias: 'keyword'","\t},","\t'punctuation': /[\\[;\\]()◇⋄]/,","\t'dfn': {","\t\tpattern: /[{}⍺⍵⍶⍹∇⍫:]/,","\t\talias: 'builtin'","\t}","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-applescript.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-applescript.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":20,"column":2}}},"branchMap":{},"code":["Prism.languages.applescript = {","\t'comment': [","\t\t// Allow one level of nesting","\t\t/\\(\\*(?:\\(\\*[\\w\\W]*?\\*\\)|[\\w\\W])*?\\*\\)/,","\t\t/--.+/,","\t\t/#.+/","\t],","\t'string': /\"(?:\\\\?.)*?\"/,","\t'number': /\\b-?\\d*\\.?\\d+([Ee]-?\\d+)?\\b/,","\t'operator': [","\t\t/[&=≠≤≥*+\\-\\/÷^]|[<>]=?/,","\t\t/\\b(?:(?:start|begin|end)s? with|(?:(?:does not|doesn't) contain|contains?)|(?:is|isn't|is not) (?:in|contained by)|(?:(?:is|isn't|is not) )?(?:greater|less) than(?: or equal)?(?: to)?|(?:(?:does not|doesn't) come|comes) (?:before|after)|(?:is|isn't|is not) equal(?: to)?|(?:(?:does not|doesn't) equal|equals|equal to|isn't|is not)|(?:a )?(?:ref(?: to)?|reference to)|(?:and|or|div|mod|as|not))\\b/","\t],","\t'keyword': /\\b(?:about|above|after|against|apart from|around|aside from|at|back|before|beginning|behind|below|beneath|beside|between|but|by|considering|continue|copy|does|eighth|else|end|equal|error|every|exit|false|fifth|first|for|fourth|from|front|get|given|global|if|ignoring|in|instead of|into|is|it|its|last|local|me|middle|my|ninth|of|on|onto|out of|over|prop|property|put|repeat|return|returning|second|set|seventh|since|sixth|some|tell|tenth|that|the|then|third|through|thru|timeout|times|to|transaction|true|try|until|where|while|whose|with|without)\\b/,","\t'class': {","\t\tpattern: /\\b(?:alias|application|boolean|class|constant|date|file|integer|list|number|POSIX file|real|record|reference|RGB color|script|text|centimetres|centimeters|feet|inches|kilometres|kilometers|metres|meters|miles|yards|square feet|square kilometres|square kilometers|square metres|square meters|square miles|square yards|cubic centimetres|cubic centimeters|cubic feet|cubic inches|cubic metres|cubic meters|cubic yards|gallons|litres|liters|quarts|grams|kilograms|ounces|pounds|degrees Celsius|degrees Fahrenheit|degrees Kelvin)\\b/,","\t\talias: 'builtin'","\t},","\t'punctuation': /[{}():,¬«»《》]/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-asciidoc.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-asciidoc.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":0,"12":0},"b":{"1":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":18}}},"2":{"name":"(anonymous_2)","line":266,"loc":{"start":{"line":266,"column":25},"end":{"line":266,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":271,"column":10}},"2":{"start":{"line":3,"column":1},"end":{"line":27,"column":3}},"3":{"start":{"line":28,"column":1},"end":{"line":197,"column":3}},"4":{"start":{"line":202,"column":1},"end":{"line":207,"column":3}},"5":{"start":{"line":209,"column":1},"end":{"line":211,"column":3}},"6":{"start":{"line":213,"column":1},"end":{"line":215,"column":3}},"7":{"start":{"line":217,"column":1},"end":{"line":238,"column":3}},"8":{"start":{"line":240,"column":1},"end":{"line":256,"column":3}},"9":{"start":{"line":258,"column":1},"end":{"line":263,"column":3}},"10":{"start":{"line":266,"column":1},"end":{"line":270,"column":4}},"11":{"start":{"line":267,"column":2},"end":{"line":269,"column":3}},"12":{"start":{"line":268,"column":3},"end":{"line":268,"column":63}}},"branchMap":{"1":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":2},"end":{"line":267,"column":2}},{"start":{"line":267,"column":2},"end":{"line":267,"column":2}}]}},"code":["(function (Prism) {","","\tvar attributes = {","\t\tpattern: /(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\]\\\\]|\\\\.)*\\]|[^\\]\\\\]|\\\\.)*\\]/m,","\t\tlookbehind: true,","\t\tinside: {","\t\t\t'quoted': {","\t\t\t\tpattern: /([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,","\t\t\t\tinside: {","\t\t\t\t\t'punctuation': /^[$`]|[$`]$/","\t\t\t\t}","\t\t\t},","\t\t\t'interpreted': {","\t\t\t\tpattern: /'(?:[^'\\\\]|\\\\.)*'/,","\t\t\t\tinside: {","\t\t\t\t\t'punctuation': /^'|'$/","\t\t\t\t\t// See rest below","\t\t\t\t}","\t\t\t},","\t\t\t'string': /\"(?:[^\"\\\\]|\\\\.)*\"/,","\t\t\t'variable': /\\w+(?==)/,","\t\t\t'punctuation': /^\\[|\\]$|,/,","\t\t\t'operator': /=/,","\t\t\t// The negative look-ahead prevents blank matches","\t\t\t'attr-value': /(?!^\\s+$).+/","\t\t}","\t};","\tPrism.languages.asciidoc = {","\t\t'comment-block': {","\t\t\tpattern: /^(\\/{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1/m,","\t\t\talias: 'comment'","\t\t},","\t\t'table': {","\t\t\tpattern: /^\\|={3,}(?:(?:\\r?\\n|\\r).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,","\t\t\tinside: {","\t\t\t\t'specifiers': {","\t\t\t\t\tpattern: /(?!\\|)(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*])?(?:[<^>](?:\\.[<^>])?|\\.[<^>])?[a-z]*)(?=\\|)/,","\t\t\t\t\talias: 'attr-value'","\t\t\t\t},","\t\t\t\t'punctuation': {","\t\t\t\t\tpattern: /(^|[^\\\\])[|!]=*/,","\t\t\t\t\tlookbehind: true","\t\t\t\t}","\t\t\t\t// See rest below","\t\t\t}","\t\t},","","\t\t'passthrough-block': {","\t\t\tpattern: /^(\\+{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,","\t\t\tinside: {","\t\t\t\t'punctuation': /^\\++|\\++$/","\t\t\t\t// See rest below","\t\t\t}","\t\t},","\t\t// Literal blocks and listing blocks","\t\t'literal-block': {","\t\t\tpattern: /^(-{4,}|\\.{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,","\t\t\tinside: {","\t\t\t\t'punctuation': /^(?:-+|\\.+)|(?:-+|\\.+)$/","\t\t\t\t// See rest below","\t\t\t}","\t\t},","\t\t// Sidebar blocks, quote blocks, example blocks and open blocks","\t\t'other-block': {","\t\t\tpattern: /^(--|\\*{4,}|_{4,}|={4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,","\t\t\tinside: {","\t\t\t\t'punctuation': /^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/","\t\t\t\t// See rest below","\t\t\t}","\t\t},","","\t\t// list-punctuation and list-label must appear before indented-block","\t\t'list-punctuation': {","\t\t\tpattern: /(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,","\t\t\tlookbehind: true,","\t\t\talias: 'punctuation'","\t\t},","\t\t'list-label': {","\t\t\tpattern: /(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,","\t\t\tlookbehind: true,","\t\t\talias: 'symbol'","\t\t},","\t\t'indented-block': {","\t\t\tpattern: /((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,","\t\t\tlookbehind: true","\t\t},","","\t\t'comment': /^\\/\\/.*/m,","\t\t'title': {","\t\t\tpattern: /^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} +.+|^\\.(?![\\s.]).*/m,","\t\t\talias: 'important',","\t\t\tinside: {","\t\t\t\t'punctuation': /^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/","\t\t\t\t// See rest below","\t\t\t}","\t\t},","\t\t'attribute-entry': {","\t\t\tpattern: /^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,","\t\t\talias: 'tag'","\t\t},","\t\t'attributes': attributes,","\t\t'hr': {","\t\t\tpattern: /^'{3,}$/m,","\t\t\talias: 'punctuation'","\t\t},","\t\t'page-break': {","\t\t\tpattern: /^<{3,}$/m,","\t\t\talias: 'punctuation'","\t\t},","\t\t'admonition': {","\t\t\tpattern: /^(?:TIP|NOTE|IMPORTANT|WARNING|CAUTION):/m,","\t\t\talias: 'keyword'","\t\t},","\t\t'callout': [","\t\t\t{","\t\t\t\tpattern: /(^[ \\t]*)<?\\d*>/m,","\t\t\t\tlookbehind: true,","\t\t\t\talias: 'symbol'","\t\t\t},","\t\t\t{","\t\t\t\tpattern: /<\\d+>/,","\t\t\t\talias: 'symbol'","\t\t\t}","\t\t],","\t\t'macro': {","\t\t\tpattern: /\\b[a-z\\d][a-z\\d-]*::?(?:(?:\\S+)??\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,","\t\t\tinside: {","\t\t\t\t'function': /^[a-z\\d-]+(?=:)/,","\t\t\t\t'punctuation': /^::?/,","\t\t\t\t'attributes': {","\t\t\t\t\tpattern: /(?:\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,","\t\t\t\t\tinside: attributes.inside","\t\t\t\t}","\t\t\t}","\t\t},","\t\t'inline': {","\t\t\t/*","\t\t\tThe initial look-behind prevents the highlighting of escaped quoted text.","","\t\t\tQuoted text can be multi-line but cannot span an empty line.","\t\t\tAll quoted text can have attributes before [foobar, 'foobar', baz=\"bar\"].","","\t\t\tFirst, we handle the constrained quotes.","\t\t\tThose must be bounded by non-word chars and cannot have spaces between the delimiter and the first char.","\t\t\tThey are, in order: _emphasis_, ``double quotes'', `single quotes', `monospace`, 'emphasis', *strong*, +monospace+ and #unquoted#","","\t\t\tThen we handle the unconstrained quotes.","\t\t\tThose do not have the restrictions of the constrained quotes.","\t\t\tThey are, in order: __emphasis__, **strong**, ++monospace++, +++passthrough+++, ##unquoted##, $$passthrough$$, ~subscript~, ^superscript^, {attribute-reference}, [[anchor]], [[[bibliography anchor]]], <<xref>>, (((indexes))) and ((indexes))","\t\t\t */","\t\t\tpattern: /(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?: ['`]|.)+?(?:(?:\\r?\\n|\\r)(?: ['`]|.)+?)*['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"]|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,","\t\t\tlookbehind: true,","\t\t\tinside: {","\t\t\t\t'attributes': attributes,","\t\t\t\t'url': {","\t\t\t\t\tpattern: /^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,","\t\t\t\t\tinside: {","\t\t\t\t\t\t'punctuation': /^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/","\t\t\t\t\t}","\t\t\t\t},","\t\t\t\t'attribute-ref': {","\t\t\t\t\tpattern: /^\\{.+\\}$/,","\t\t\t\t\tinside: {","\t\t\t\t\t\t'variable': {","\t\t\t\t\t\t\tpattern: /(^\\{)[a-z\\d,+_-]+/,","\t\t\t\t\t\t\tlookbehind: true","\t\t\t\t\t\t},","\t\t\t\t\t\t'operator': /^[=?!#%@$]|!(?=[:}])/,","\t\t\t\t\t\t'punctuation': /^\\{|\\}$|::?/","\t\t\t\t\t}","\t\t\t\t},","\t\t\t\t'italic': {","\t\t\t\t\tpattern: /^(['_])[\\s\\S]+\\1$/,","\t\t\t\t\tinside: {","\t\t\t\t\t\t'punctuation': /^(?:''?|__?)|(?:''?|__?)$/","\t\t\t\t\t}","\t\t\t\t},","\t\t\t\t'bold': {","\t\t\t\t\tpattern: /^\\*[\\s\\S]+\\*$/,","\t\t\t\t\tinside: {","\t\t\t\t\t\tpunctuation: /^\\*\\*?|\\*\\*?$/","\t\t\t\t\t}","\t\t\t\t},","\t\t\t\t'punctuation': /^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/","\t\t\t}","\t\t},","\t\t'replacement': {","\t\t\tpattern: /\\((?:C|TM|R)\\)/,","\t\t\talias: 'builtin'","\t\t},","\t\t'entity': /&#?[\\da-z]{1,8};/i,","\t\t'line-continuation': {","\t\t\tpattern: /(^| )\\+$/m,","\t\t\tlookbehind: true,","\t\t\talias: 'punctuation'","\t\t}","\t};","","","\t// Allow some nesting. There is no recursion though, so cloning should not be needed.","","\tattributes.inside['interpreted'].inside.rest = {","\t\t'macro': Prism.languages.asciidoc['macro'],","\t\t'inline': Prism.languages.asciidoc['inline'],","\t\t'replacement': Prism.languages.asciidoc['replacement'],","\t\t'entity': Prism.languages.asciidoc['entity']","\t};","","\tPrism.languages.asciidoc['passthrough-block'].inside.rest = {","\t\t'macro': Prism.languages.asciidoc['macro']","\t};","","\tPrism.languages.asciidoc['literal-block'].inside.rest = {","\t\t'callout': Prism.languages.asciidoc['callout']","\t};","","\tPrism.languages.asciidoc['table'].inside.rest = {","\t\t'comment-block': Prism.languages.asciidoc['comment-block'],","\t\t'passthrough-block': Prism.languages.asciidoc['passthrough-block'],","\t\t'literal-block': Prism.languages.asciidoc['literal-block'],","\t\t'other-block': Prism.languages.asciidoc['other-block'],","\t\t'list-punctuation': Prism.languages.asciidoc['list-punctuation'],","\t\t'indented-block': Prism.languages.asciidoc['indented-block'],","\t\t'comment': Prism.languages.asciidoc['comment'],","\t\t'title': Prism.languages.asciidoc['title'],","\t\t'attribute-entry': Prism.languages.asciidoc['attribute-entry'],","\t\t'attributes': Prism.languages.asciidoc['attributes'],","\t\t'hr': Prism.languages.asciidoc['hr'],","\t\t'page-break': Prism.languages.asciidoc['page-break'],","\t\t'admonition': Prism.languages.asciidoc['admonition'],","\t\t'list-label': Prism.languages.asciidoc['list-label'],","\t\t'callout': Prism.languages.asciidoc['callout'],","\t\t'macro': Prism.languages.asciidoc['macro'],","\t\t'inline': Prism.languages.asciidoc['inline'],","\t\t'replacement': Prism.languages.asciidoc['replacement'],","\t\t'entity': Prism.languages.asciidoc['entity'],","\t\t'line-continuation': Prism.languages.asciidoc['line-continuation']","\t};","","\tPrism.languages.asciidoc['other-block'].inside.rest = {","\t\t'table': Prism.languages.asciidoc['table'],","\t\t'list-punctuation': Prism.languages.asciidoc['list-punctuation'],","\t\t'indented-block': Prism.languages.asciidoc['indented-block'],","\t\t'comment': Prism.languages.asciidoc['comment'],","\t\t'attribute-entry': Prism.languages.asciidoc['attribute-entry'],","\t\t'attributes': Prism.languages.asciidoc['attributes'],","\t\t'hr': Prism.languages.asciidoc['hr'],","\t\t'page-break': Prism.languages.asciidoc['page-break'],","\t\t'admonition': Prism.languages.asciidoc['admonition'],","\t\t'list-label': Prism.languages.asciidoc['list-label'],","\t\t'macro': Prism.languages.asciidoc['macro'],","\t\t'inline': Prism.languages.asciidoc['inline'],","\t\t'replacement': Prism.languages.asciidoc['replacement'],","\t\t'entity': Prism.languages.asciidoc['entity'],","\t\t'line-continuation': Prism.languages.asciidoc['line-continuation']","\t};","","\tPrism.languages.asciidoc['title'].inside.rest = {","\t\t'macro': Prism.languages.asciidoc['macro'],","\t\t'inline': Prism.languages.asciidoc['inline'],","\t\t'replacement': Prism.languages.asciidoc['replacement'],","\t\t'entity': Prism.languages.asciidoc['entity']","\t};","","\t// Plugin to make entity title show the real entity, idea by Roman Komarov","\tPrism.hooks.add('wrap', function(env) {","\t\tif (env.type === 'entity') {","\t\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');","\t\t}","\t});","}(Prism));"],"l":{"1":1,"3":1,"28":1,"202":1,"209":1,"213":1,"217":1,"240":1,"258":1,"266":1,"267":0,"268":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-aspnet.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-aspnet.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1},"b":{"1":[1,0],"2":[1,1]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":16,"column":3}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":137}},"3":{"start":{"line":21,"column":0},"end":{"line":23,"column":52}},"4":{"start":{"line":25,"column":0},"end":{"line":27,"column":3}},"5":{"start":{"line":30,"column":0},"end":{"line":36,"column":3}}},"branchMap":{"1":{"line":30,"type":"cond-expr","locations":[{"start":{"line":30,"column":68},"end":{"line":30,"column":76}},{"start":{"line":30,"column":79},"end":{"line":30,"column":84}}]},"2":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":10},"end":{"line":34,"column":32}},{"start":{"line":34,"column":36},"end":{"line":34,"column":38}}]}},"code":["Prism.languages.aspnet = Prism.languages.extend('markup', {","\t'page-directive tag': {","\t\tpattern: /<%\\s*@.*%>/i,","\t\tinside: {","\t\t\t'page-directive tag': /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,","\t\t\trest: Prism.languages.markup.tag.inside","\t\t}","\t},","\t'directive tag': {","\t\tpattern: /<%.*%>/i,","\t\tinside: {","\t\t\t'directive tag': /<%\\s*?[$=%#:]{0,2}|%>/i,","\t\t\trest: Prism.languages.csharp","\t\t}","\t}","});","// Regexp copied from prism-markup, with a negative look-ahead added","Prism.languages.aspnet.tag.pattern = /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\\\1|\\\\?(?!\\1)[\\w\\W])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i;","","// match directives of attribute value foo=\"<% Bar %>\"","Prism.languages.insertBefore('inside', 'punctuation', {","\t'directive tag': Prism.languages.aspnet['directive tag']","}, Prism.languages.aspnet.tag.inside[\"attr-value\"]);","","Prism.languages.insertBefore('aspnet', 'comment', {","\t'asp comment': /<%--[\\w\\W]*?--%>/","});","","// script runat=\"server\" contains csharp, not javascript","Prism.languages.insertBefore('aspnet', Prism.languages.javascript ? 'script' : 'tag', {","\t'asp script': {","\t\tpattern: /(<script(?=.*runat=['\"]?server['\"]?)[\\w\\W]*?>)[\\w\\W]*?(?=<\\/script>)/i,","\t\tlookbehind: true,","\t\tinside: Prism.languages.csharp || {}","\t}","});"],"l":{"1":1,"18":1,"21":1,"25":1,"30":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-autohotkey.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-autohotkey.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":27,"column":2}}},"branchMap":{},"code":["// NOTES - follows first-first highlight method, block is locked after highlight, different from SyntaxHl","Prism.languages.autohotkey= {","\t'comment': {","\t\tpattern: /(^[^\";\\n]*(\"[^\"\\n]*?\"[^\"\\n]*?)*)(;.*$|^\\s*\\/\\*[\\s\\S]*\\n\\*\\/)/m,","\t\tlookbehind: true","\t},","\t'string': /\"(([^\"\\n\\r]|\"\")*)\"/m,","\t'function': /[^\\(\\); \\t,\\n\\+\\*\\-=\\?>:\\\\\\/<&%\\[\\]]+?(?=\\()/m,  //function - don't use .*\\) in the end bcoz string locks it","\t'tag': /^[ \\t]*[^\\s:]+?(?=:(?:[^:]|$))/m,  //labels","\t'variable': /%\\w+%/,","\t'number': /\\b-?(0x[\\dA-Fa-f]+|\\d*\\.?\\d+([Ee]-?\\d+)?)\\b/,","\t'operator': /\\?|\\/\\/?=?|:=|\\|[=|]?|&[=&]?|\\+[=+]?|-[=-]?|\\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\\b(?:AND|NOT|OR)\\b/,","\t'punctuation': /[\\{}[\\]\\(\\):,]/,","\t'boolean': /\\b(true|false)\\b/,","","\t'selector': /\\b(AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\\b/i,","","\t'constant': /\\b(a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_formatfloat|a_formatinteger|a_gui|a_guievent|a_guicontrol|a_guicontrolevent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|programfiles|a_programfiles|a_programs|a_programscommon|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel)\\b/i,","","\t'builtin': /\\b(abs|acos|asc|asin|atan|ceil|chr|class|cos|dllcall|exp|fileexist|Fileopen|floor|il_add|il_create|il_destroy|instr|substr|isfunc|islabel|IsObject|ln|log|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|mod|onmessage|numget|numput|registercallback|regexmatch|regexreplace|round|sin|tan|sqrt|strlen|sb_seticon|sb_setparts|sb_settext|strsplit|tv_add|tv_delete|tv_getchild|tv_getcount|tv_getnext|tv_get|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__New|__Call|__Get|__Set)\\b/i,","","\t'symbol': /\\b(alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\\b/i,","","\t'important': /#\\b(AllowSameLineComments|ClipboardTimeout|CommentFlag|ErrorStdOut|EscapeChar|HotkeyInterval|HotkeyModifierTimeout|Hotstring|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Include|IncludeAgain|InstallKeybdHook|InstallMouseHook|KeyHistory|LTrim|MaxHotkeysPerInterval|MaxMem|MaxThreads|MaxThreadsBuffer|MaxThreadsPerHotkey|NoEnv|NoTrayIcon|Persistent|SingleInstance|UseHook|WinActivateForce)\\b/i,","","\t'keyword': /\\b(Abort|AboveNormal|Add|ahk_class|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Region|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|TryAgain|Type|UnCheck|underline|Unicode|Unlock|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\\b/i","};"],"l":{"2":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-autoit.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-autoit.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":33,"column":2}}},"branchMap":{},"code":["Prism.languages.autoit = {","\t\"comment\": [","\t\t/;.*/,","\t\t{","\t\t\t// The multi-line comments delimiters can actually be commented out with \";\"","\t\t\tpattern: /(^\\s*)#(?:comments-start|cs)[\\s\\S]*?^\\s*#(?:comments-end|ce)/m,","\t\t\tlookbehind: true","\t\t}","\t],","\t\"url\": {","\t\tpattern: /(^\\s*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,","\t\tlookbehind: true","\t},","\t\"string\": {","\t\tpattern: /([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,","\t\tinside: {","\t\t\t\"variable\": /([%$@])\\w+\\1/","\t\t}","\t},","\t\"directive\": {","\t\tpattern: /(^\\s*)#\\w+/m,","\t\tlookbehind: true,","\t\talias: 'keyword'","\t},","\t\"function\": /\\b\\w+(?=\\()/,","\t// Variables and macros","\t\"variable\": /[$@]\\w+/,","\t\"keyword\": /\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,","\t\"number\": /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,","\t\"boolean\": /\\b(?:True|False)\\b/i,","\t\"operator\": /<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Or|Not)\\b/i,","\t\"punctuation\": /[\\[\\]().,:]/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-bash.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-bash.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"b":{},"f":{"1":1},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":17}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":80,"column":10}},"2":{"start":{"line":2,"column":1},"end":{"line":31,"column":3}},"3":{"start":{"line":33,"column":1},"end":{"line":72,"column":3}},"4":{"start":{"line":74,"column":1},"end":{"line":74,"column":46}},"5":{"start":{"line":75,"column":1},"end":{"line":75,"column":55}},"6":{"start":{"line":76,"column":1},"end":{"line":76,"column":47}},"7":{"start":{"line":77,"column":1},"end":{"line":77,"column":47}},"8":{"start":{"line":78,"column":1},"end":{"line":78,"column":49}},"9":{"start":{"line":79,"column":1},"end":{"line":79,"column":55}}},"branchMap":{},"code":["(function(Prism) {","\tvar insideString = {","\t\tvariable: [","\t\t\t// Arithmetic Environment","\t\t\t{","\t\t\t\tpattern: /\\$?\\(\\([\\w\\W]+?\\)\\)/,","\t\t\t\tinside: {","\t\t\t\t\t// If there is a $ sign at the beginning highlight $(( and )) as variable","\t\t\t\t\tvariable: [{","\t\t\t\t\t\t\tpattern: /(^\\$\\(\\([\\w\\W]+)\\)\\)/,","\t\t\t\t\t\t\tlookbehind: true","\t\t\t\t\t\t},","\t\t\t\t\t\t/^\\$\\(\\(/,","\t\t\t\t\t],","\t\t\t\t\tnumber: /\\b-?(?:0x[\\dA-Fa-f]+|\\d*\\.?\\d+(?:[Ee]-?\\d+)?)\\b/,","\t\t\t\t\t// Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic","\t\t\t\t\toperator: /--?|-=|\\+\\+?|\\+=|!=?|~|\\*\\*?|\\*=|\\/=?|%=?|<<=?|>>=?|<=?|>=?|==?|&&?|&=|\\^=?|\\|\\|?|\\|=|\\?|:/,","\t\t\t\t\t// If there is no $ sign at the beginning highlight (( and )) as punctuation","\t\t\t\t\tpunctuation: /\\(\\(?|\\)\\)?|,|;/","\t\t\t\t}","\t\t\t},","\t\t\t// Command Substitution","\t\t\t{","\t\t\t\tpattern: /\\$\\([^)]+\\)|`[^`]+`/,","\t\t\t\tinside: {","\t\t\t\t\tvariable: /^\\$\\(|^`|\\)$|`$/","\t\t\t\t}","\t\t\t},","\t\t\t/\\$(?:[a-z0-9_#\\?\\*!@]+|\\{[^}]+\\})/i","\t\t],","\t};","","\tPrism.languages.bash = {","\t\t'shebang': {","\t\t\tpattern: /^#!\\s*\\/bin\\/bash|^#!\\s*\\/bin\\/sh/,","\t\t\talias: 'important'","\t\t},","\t\t'comment': {","\t\t\tpattern: /(^|[^\"{\\\\])#.*/,","\t\t\tlookbehind: true","\t\t},","\t\t'string': [","\t\t\t//Support for Here-Documents https://en.wikipedia.org/wiki/Here_document","\t\t\t{","\t\t\t\tpattern: /((?:^|[^<])<<\\s*)(?:\"|')?(\\w+?)(?:\"|')?\\s*\\r?\\n(?:[\\s\\S])*?\\r?\\n\\2/g,","\t\t\t\tlookbehind: true,","\t\t\t\tgreedy: true,","\t\t\t\tinside: insideString","\t\t\t},","\t\t\t{","\t\t\t\tpattern: /([\"'])(?:\\\\\\\\|\\\\?[^\\\\])*?\\1/g,","\t\t\t\tgreedy: true,","\t\t\t\tinside: insideString","\t\t\t}","\t\t],","\t\t'variable': insideString.variable,","\t\t// Originally based on http://ss64.com/bash/","\t\t'function': {","\t\t\tpattern: /(^|\\s|;|\\||&)(?:alias|apropos|apt-get|aptitude|aspell|awk|basename|bash|bc|bg|builtin|bzip2|cal|cat|cd|cfdisk|chgrp|chmod|chown|chroot|chkconfig|cksum|clear|cmp|comm|command|cp|cron|crontab|csplit|cut|date|dc|dd|ddrescue|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|du|egrep|eject|enable|env|ethtool|eval|exec|expand|expect|export|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|getopts|git|grep|groupadd|groupdel|groupmod|groups|gzip|hash|head|help|hg|history|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|jobs|join|kill|killall|less|link|ln|locate|logname|logout|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|make|man|mkdir|mkfifo|mkisofs|mknod|more|most|mount|mtools|mtr|mv|mmv|nano|netstat|nice|nl|nohup|notify-send|npm|nslookup|open|op|passwd|paste|pathchk|ping|pkill|popd|pr|printcap|printenv|printf|ps|pushd|pv|pwd|quota|quotacheck|quotactl|ram|rar|rcp|read|readarray|readonly|reboot|rename|renice|remsync|rev|rm|rmdir|rsync|screen|scp|sdiff|sed|seq|service|sftp|shift|shopt|shutdown|sleep|slocate|sort|source|split|ssh|stat|strace|su|sudo|sum|suspend|sync|tail|tar|tee|test|time|timeout|times|touch|top|traceroute|trap|tr|tsort|tty|type|ulimit|umask|umount|unalias|uname|unexpand|uniq|units|unrar|unshar|uptime|useradd|userdel|usermod|users|uuencode|uudecode|v|vdir|vi|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yes|zip)(?=$|\\s|;|\\||&)/,","\t\t\tlookbehind: true","\t\t},","\t\t'keyword': {","\t\t\tpattern: /(^|\\s|;|\\||&)(?:let|:|\\.|if|then|else|elif|fi|for|break|continue|while|in|case|function|select|do|done|until|echo|exit|return|set|declare)(?=$|\\s|;|\\||&)/,","\t\t\tlookbehind: true","\t\t},","\t\t'boolean': {","\t\t\tpattern: /(^|\\s|;|\\||&)(?:true|false)(?=$|\\s|;|\\||&)/,","\t\t\tlookbehind: true","\t\t},","\t\t'operator': /&&?|\\|\\|?|==?|!=?|<<<?|>>|<=?|>=?|=~/,","\t\t'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];]/","\t};","","\tvar inside = insideString.variable[1].inside;","\tinside['function'] = Prism.languages.bash['function'];","\tinside.keyword = Prism.languages.bash.keyword;","\tinside.boolean = Prism.languages.bash.boolean;","\tinside.operator = Prism.languages.bash.operator;","\tinside.punctuation = Prism.languages.bash.punctuation;","})(Prism);",""],"l":{"1":1,"2":1,"33":1,"74":1,"75":1,"76":1,"77":1,"78":1,"79":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-basic.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-basic.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":14,"column":2}}},"branchMap":{},"code":["Prism.languages.basic = {","\t'string': /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^_ +\\-.A-Z\\d])*\"/i,","\t'comment': {","\t\tpattern: /(?:!|REM\\b).+/i,","\t\tinside: {","\t\t\t'keyword': /^REM/i","\t\t}","\t},","\t'number': /(?:\\b|\\B[.-])(?:\\d+\\.?\\d*)(?:E[+-]?\\d+)?/i,","\t'keyword': /\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SHARED|SINGLE|SELECT CASE|SHELL|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,","\t'function': /\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,","\t'operator': /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,","\t'punctuation': /[,;:()]/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-batch.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-batch.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"b":{},"f":{"1":1},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":18}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":99,"column":10}},"2":{"start":{"line":2,"column":1},"end":{"line":2,"column":37}},"3":{"start":{"line":3,"column":1},"end":{"line":9,"column":3}},"4":{"start":{"line":10,"column":1},"end":{"line":10,"column":24}},"5":{"start":{"line":11,"column":1},"end":{"line":11,"column":30}},"6":{"start":{"line":13,"column":1},"end":{"line":98,"column":3}}},"branchMap":{},"code":["(function (Prism) {","\tvar variable = /%%?[~:\\w]+%?|!\\S+!/;","\tvar parameter = {","\t\tpattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,","\t\talias: 'attr-name',","\t\tinside: {","\t\t\t'punctuation': /:/","\t\t}","\t};","\tvar string = /\"[^\"]*\"/;","\tvar number = /(?:\\b|-)\\d+\\b/;","","\tPrism.languages.batch = {","\t\t'comment': [","\t\t\t/^::.*/m,","\t\t\t{","\t\t\t\tpattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,","\t\t\t\tlookbehind: true","\t\t\t}","\t\t],","\t\t'label': {","\t\t\tpattern: /^:.*/m,","\t\t\talias: 'property'","\t\t},","\t\t'command': [","\t\t\t{","\t\t\t\t// FOR command","\t\t\t\tpattern: /((?:^|[&(])[ \\t]*)for(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* \\S+ in \\([^)]+\\) do/im,","\t\t\t\tlookbehind: true,","\t\t\t\tinside: {","\t\t\t\t\t'keyword': /^for\\b|\\b(?:in|do)\\b/i,","\t\t\t\t\t'string': string,","\t\t\t\t\t'parameter': parameter,","\t\t\t\t\t'variable': variable,","\t\t\t\t\t'number': number,","\t\t\t\t\t'punctuation': /[()',]/","\t\t\t\t}","\t\t\t},","\t\t\t{","\t\t\t\t// IF command","\t\t\t\tpattern: /((?:^|[&(])[ \\t]*)if(?: ?\\/[a-z?](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|\\S+)?(?:==| (?:equ|neq|lss|leq|gtr|geq) )(?:\"[^\"]*\"|\\S+))/im,","\t\t\t\tlookbehind: true,","\t\t\t\tinside: {","\t\t\t\t\t'keyword': /^if\\b|\\b(?:not|cmdextversion|defined|errorlevel|exist)\\b/i,","\t\t\t\t\t'string': string,","\t\t\t\t\t'parameter': parameter,","\t\t\t\t\t'variable': variable,","\t\t\t\t\t'number': number,","\t\t\t\t\t'operator': /\\^|==|\\b(?:equ|neq|lss|leq|gtr|geq)\\b/i","\t\t\t\t}","\t\t\t},","\t\t\t{","\t\t\t\t// ELSE command","\t\t\t\tpattern: /((?:^|[&()])[ \\t]*)else\\b/im,","\t\t\t\tlookbehind: true,","\t\t\t\tinside: {","\t\t\t\t\t'keyword': /^else\\b/i","\t\t\t\t}","\t\t\t},","\t\t\t{","\t\t\t\t// SET command","\t\t\t\tpattern: /((?:^|[&(])[ \\t]*)set(?: ?\\/[a-z](?:[ :](?:\"[^\"]*\"|\\S+))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,","\t\t\t\tlookbehind: true,","\t\t\t\tinside: {","\t\t\t\t\t'keyword': /^set\\b/i,","\t\t\t\t\t'string': string,","\t\t\t\t\t'parameter': parameter,","\t\t\t\t\t'variable': [","\t\t\t\t\t\tvariable,","\t\t\t\t\t\t/\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/","\t\t\t\t\t],","\t\t\t\t\t'number': number,","\t\t\t\t\t'operator': /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,","\t\t\t\t\t'punctuation': /[()',]/","\t\t\t\t}","\t\t\t},","\t\t\t{","\t\t\t\t// Other commands","\t\t\t\tpattern: /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,","\t\t\t\tlookbehind: true,","\t\t\t\tinside: {","\t\t\t\t\t'keyword': /^\\w+\\b/i,","\t\t\t\t\t'string': string,","\t\t\t\t\t'parameter': parameter,","\t\t\t\t\t'label': {","\t\t\t\t\t\tpattern: /(^\\s*):\\S+/m,","\t\t\t\t\t\tlookbehind: true,","\t\t\t\t\t\talias: 'property'","\t\t\t\t\t},","\t\t\t\t\t'variable': variable,","\t\t\t\t\t'number': number,","\t\t\t\t\t'operator': /\\^/","\t\t\t\t}","\t\t\t}","\t\t],","\t\t'operator': /[&@]/,","\t\t'punctuation': /[()']/","\t};","}(Prism));"],"l":{"1":1,"2":1,"3":1,"10":1,"11":1,"13":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-bison.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-bison.js","s":{"1":2,"2":2},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":56}},"2":{"start":{"line":3,"column":0},"end":{"line":39,"column":3}}},"branchMap":{},"code":["Prism.languages.bison = Prism.languages.extend('c', {});","","Prism.languages.insertBefore('bison', 'comment', {","\t'bison': {","\t\t// This should match all the beginning of the file","\t\t// including the prologue(s), the bison declarations and","\t\t// the grammar rules.","\t\tpattern: /^[\\s\\S]*?%%[\\s\\S]*?%%/,","\t\tinside: {","\t\t\t'c': {","\t\t\t\t// Allow for one level of nested braces","\t\t\t\tpattern: /%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,","\t\t\t\tinside: {","\t\t\t\t\t'delimiter': {","\t\t\t\t\t\tpattern: /^%?\\{|%?\\}$/,","\t\t\t\t\t\talias: 'punctuation'","\t\t\t\t\t},","\t\t\t\t\t'bison-variable': {","\t\t\t\t\t\tpattern: /[$@](?:<[^\\s>]+>)?[\\w$]+/,","\t\t\t\t\t\talias: 'variable',","\t\t\t\t\t\tinside: {","\t\t\t\t\t\t\t'punctuation': /<|>/","\t\t\t\t\t\t}","\t\t\t\t\t},","\t\t\t\t\trest: Prism.languages.c","\t\t\t\t}","\t\t\t},","\t\t\t'comment': Prism.languages.c.comment,","\t\t\t'string': Prism.languages.c.string,","\t\t\t'property': /\\S+(?=:)/,","\t\t\t'keyword': /%\\w+/,","\t\t\t'number': {","\t\t\t\tpattern: /(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,","\t\t\t\tlookbehind: true","\t\t\t},","\t\t\t'punctuation': /%[%?]|[|:;\\[\\]<>]/","\t\t}","\t}","});"],"l":{"1":2,"3":2}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-brainfuck.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-brainfuck.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":20,"column":2}}},"branchMap":{},"code":["Prism.languages.brainfuck = {","\t'pointer': {","\t\tpattern: /<|>/,","\t\talias: 'keyword'","\t},","\t'increment': {","\t\tpattern: /\\+/,","\t\talias: 'inserted'","\t},","\t'decrement': {","\t\tpattern: /-/,","\t\talias: 'deleted'","\t},","\t'branching': {","\t\tpattern: /\\[|\\]/,","\t\talias: 'important'","\t},","\t'operator': /[.,]/,","\t'comment': /\\S+/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-bro.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-bro.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":50,"column":2}}},"branchMap":{},"code":["Prism.languages.bro = {","","\t'comment': {","\t\tpattern: /(^|[^\\\\$])#.*/,","\t\tlookbehind: true,","\t\t\tinside: {","\t\t\t\t'italic':  /\\b(TODO|FIXME|XXX)\\b/","\t\t}","\t},","","\t'string': {","\t\tpattern: /([\"'])(\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,","\t\tgreedy: true","\t},","","\t'boolean': /\\b(T|F)\\b/,","","\t'function': {","\t\tpattern: /(?:function|hook|event) [a-zA-Z0-9_]+(::[a-zA-Z0-9_]+)?/,","\t\tinside: {","\t\t\tkeyword: /^(?:function|hook|event)/","\t\t}","\t},","","\t'variable':\t{","\t\tpattern: /(?:global|local) [a-zA-Z0-9_]+/i,","\t\tinside: {","\t\t\tkeyword: /(?:global|local)/","\t\t}","\t},","","\t'builtin':","\t\t/(@(load(-(sigs|plugin))?|unload|prefixes|ifn?def|else|(end)?if|DIR|FILENAME))|(&?(redef|priority|log|optional|default|add_func|delete_func|expire_func|read_expire|write_expire|create_expire|synchronized|persistent|rotate_interval|rotate_size|encrypt|raw_output|mergeable|group|error_handler|type_column))/,","","\t'constant': {","\t\tpattern: /const [a-zA-Z0-9_]+/i,","\t\tinside: {","\t\t\tkeyword: /const/","\t\t}","\t},","","\t'keyword':","\t\t/\\b(break|next|continue|alarm|using|of|add|delete|export|print|return|schedule|when|timeout|addr|any|bool|count|double|enum|file|int|interval|pattern|opaque|port|record|set|string|subnet|table|time|vector|for|if|else|in|module|function)\\b/,","","\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,","","\t'number': /\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)\\b/i,","","\t'punctuation': /[{}[\\];(),.:]/","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-c.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-c.js","s":{"1":1,"2":1,"3":1,"4":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":30,"column":3}},"3":{"start":{"line":32,"column":0},"end":{"line":32,"column":39}},"4":{"start":{"line":33,"column":0},"end":{"line":33,"column":36}}},"branchMap":{},"code":["Prism.languages.c = Prism.languages.extend('clike', {","\t'keyword': /\\b(asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while)\\b/,","\t'operator': /\\-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|?\\||[~^%?*\\/]/,","\t'number': /\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)[ful]*\\b/i","});","","Prism.languages.insertBefore('c', 'string', {","\t'macro': {","\t\t// allow for multiline macro definitions","\t\t// spaces after the # character compile fine with gcc","\t\tpattern: /(^\\s*)#\\s*[a-z]+([^\\r\\n\\\\]|\\\\.|\\\\(?:\\r\\n?|\\n))*/im,","\t\tlookbehind: true,","\t\talias: 'property',","\t\tinside: {","\t\t\t// highlight the path of the include statement as a string","\t\t\t'string': {","\t\t\t\tpattern: /(#\\s*include\\s*)(<.+?>|(\"|')(\\\\?.)+?\\3)/,","\t\t\t\tlookbehind: true","\t\t\t},","\t\t\t// highlight macro directives as keywords","\t\t\t'directive': {","\t\t\t\tpattern: /(#\\s*)\\b(define|elif|else|endif|error|ifdef|ifndef|if|import|include|line|pragma|undef|using)\\b/,","\t\t\t\tlookbehind: true,","\t\t\t\talias: 'keyword'","\t\t\t}","\t\t}","\t},","\t// highlight predefined macros as constants","\t'constant': /\\b(__FILE__|__LINE__|__DATE__|__TIME__|__TIMESTAMP__|__func__|EOF|NULL|stdin|stdout|stderr)\\b/","});","","delete Prism.languages.c['class-name'];","delete Prism.languages.c['boolean'];",""],"l":{"1":1,"7":1,"32":1,"33":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-clike.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-clike.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":29,"column":2}}},"branchMap":{},"code":["Prism.languages.clike = {","\t'comment': [","\t\t{","\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\//,","\t\t\tlookbehind: true","\t\t},","\t\t{","\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,","\t\t\tlookbehind: true","\t\t}","\t],","\t'string': {","\t\tpattern: /([\"'])(\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,","\t\tgreedy: true","\t},","\t'class-name': {","\t\tpattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[a-z0-9_\\.\\\\]+/i,","\t\tlookbehind: true,","\t\tinside: {","\t\t\tpunctuation: /(\\.|\\\\)/","\t\t}","\t},","\t'keyword': /\\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,","\t'boolean': /\\b(true|false)\\b/,","\t'function': /[a-z0-9_]+(?=\\()/i,","\t'number': /\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)\\b/i,","\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,","\t'punctuation': /[{}[\\];(),.:]/","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-coffeescript.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-coffeescript.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"b":{},"f":{"1":1},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":17}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":91,"column":10}},"2":{"start":{"line":4,"column":0},"end":{"line":8,"column":6}},"3":{"start":{"line":10,"column":0},"end":{"line":34,"column":3}},"4":{"start":{"line":36,"column":0},"end":{"line":51,"column":3}},"5":{"start":{"line":53,"column":0},"end":{"line":82,"column":3}},"6":{"start":{"line":84,"column":0},"end":{"line":87,"column":3}},"7":{"start":{"line":89,"column":0},"end":{"line":89,"column":55}}},"branchMap":{},"code":["(function(Prism) {","","// Ignore comments starting with { to privilege string interpolation highlighting","var comment = /#(?!\\{).+/,","    interpolation = {","    \tpattern: /#\\{[^}]+\\}/,","    \talias: 'variable'","    };","","Prism.languages.coffeescript = Prism.languages.extend('javascript', {","\t'comment': comment,","\t'string': [","","\t\t// Strings are multiline","\t\t{","\t\t\tpattern: /'(?:\\\\?[^\\\\])*?'/,","\t\t\tgreedy: true,","\t\t},","","\t\t{","\t\t\t// Strings are multiline","\t\t\tpattern: /\"(?:\\\\?[^\\\\])*?\"/,","\t\t\tgreedy: true,","\t\t\tinside: {","\t\t\t\t'interpolation': interpolation","\t\t\t}","\t\t}","\t],","\t'keyword': /\\b(and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,","\t'class-member': {","\t\tpattern: /@(?!\\d)\\w+/,","\t\talias: 'variable'","\t}","});","","Prism.languages.insertBefore('coffeescript', 'comment', {","\t'multiline-comment': {","\t\tpattern: /###[\\s\\S]+?###/,","\t\talias: 'comment'","\t},","","\t// Block regexp can contain comments and interpolation","\t'block-regex': {","\t\tpattern: /\\/{3}[\\s\\S]*?\\/{3}/,","\t\talias: 'regex',","\t\tinside: {","\t\t\t'comment': comment,","\t\t\t'interpolation': interpolation","\t\t}","\t}","});","","Prism.languages.insertBefore('coffeescript', 'string', {","\t'inline-javascript': {","\t\tpattern: /`(?:\\\\?[\\s\\S])*?`/,","\t\tinside: {","\t\t\t'delimiter': {","\t\t\t\tpattern: /^`|`$/,","\t\t\t\talias: 'punctuation'","\t\t\t},","\t\t\trest: Prism.languages.javascript","\t\t}","\t},","","\t// Block strings","\t'multiline-string': [","\t\t{","\t\t\tpattern: /'''[\\s\\S]*?'''/,","\t\t\tgreedy: true,","\t\t\talias: 'string'","\t\t},","\t\t{","\t\t\tpattern: /\"\"\"[\\s\\S]*?\"\"\"/,","\t\t\tgreedy: true,","\t\t\talias: 'string',","\t\t\tinside: {","\t\t\t\tinterpolation: interpolation","\t\t\t}","\t\t}","\t]","","});","","Prism.languages.insertBefore('coffeescript', 'keyword', {","\t// Object property","\t'property': /(?!\\d)\\w+(?=\\s*:(?!:))/","});","","delete Prism.languages.coffeescript['template-string'];","","}(Prism));"],"l":{"1":1,"4":1,"10":1,"36":1,"53":1,"84":1,"89":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-core.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-core.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":81089,"12":32589,"13":1182,"14":32589,"15":1494,"16":1494,"17":469,"18":469,"19":1328,"20":1328,"21":469,"22":27,"23":69,"24":998,"25":64,"26":64,"27":79,"28":13,"29":22,"30":22,"31":22,"32":0,"33":0,"34":0,"35":0,"36":0,"37":22,"38":22,"39":174,"40":174,"41":19,"42":40,"43":40,"44":174,"45":22,"46":46943,"47":17,"48":22,"49":15959,"50":15959,"51":46943,"52":46943,"53":46943,"54":14291,"55":14291,"56":32652,"57":1646,"58":1646,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":19,"159":19,"160":19,"161":0,"162":0,"163":0,"164":0,"165":0,"166":1,"167":0,"168":0,"169":0,"170":0,"171":0,"172":1,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":1,"189":1,"190":1,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":1,"208":1,"209":1,"210":1},"b":{"1":[0,1],"2":[0,1],"3":[1,0],"4":[0,0],"5":[0,0],"6":[1182,31407],"7":[469,27],"8":[1328,0],"9":[27,27],"10":[22,19],"11":[0,22],"12":[0,0],"13":[174,0],"14":[19,155],"15":[40,0],"16":[17,46926],"17":[46943,37],"18":[15959,22],"19":[46943,0],"20":[46943,42612],"21":[14291,32652],"22":[46943,14981],"23":[1646,31006],"24":[32652,1671],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[19,4],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0],"69":[0,0],"70":[1,0],"71":[1,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0],"77":[0,0],"78":[0,0],"79":[1,0],"80":[1,1],"81":[1,0]},"f":{"1":1,"2":0,"3":81089,"4":32589,"5":1494,"6":69,"7":64,"8":22,"9":46943,"10":15959,"11":0,"12":0,"13":0,"14":0,"15":0,"16":19,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"fnMap":{"1":{"name":"(anonymous_1)","line":15,"loc":{"start":{"line":15,"column":13},"end":{"line":15,"column":23}}},"2":{"name":"(anonymous_2)","line":23,"loc":{"start":{"line":23,"column":10},"end":{"line":23,"column":28}}},"3":{"name":"(anonymous_3)","line":33,"loc":{"start":{"line":33,"column":8},"end":{"line":33,"column":21}}},"4":{"name":"(anonymous_4)","line":37,"loc":{"start":{"line":37,"column":9},"end":{"line":37,"column":24}}},"5":{"name":"(anonymous_5)","line":45,"loc":{"start":{"line":45,"column":9},"end":{"line":45,"column":22}}},"6":{"name":"(anonymous_6)","line":62,"loc":{"start":{"line":62,"column":27},"end":{"line":62,"column":39}}},"7":{"name":"(anonymous_7)","line":70,"loc":{"start":{"line":70,"column":10},"end":{"line":70,"column":31}}},"8":{"name":"(anonymous_8)","line":89,"loc":{"start":{"line":89,"column":16},"end":{"line":89,"column":56}}},"9":{"name":"(anonymous_9)","line":126,"loc":{"start":{"line":126,"column":32},"end":{"line":126,"column":53}}},"10":{"name":"(anonymous_10)","line":136,"loc":{"start":{"line":136,"column":7},"end":{"line":136,"column":44}}},"11":{"name":"(anonymous_11)","line":156,"loc":{"start":{"line":156,"column":15},"end":{"line":156,"column":41}}},"12":{"name":"(anonymous_12)","line":171,"loc":{"start":{"line":171,"column":19},"end":{"line":171,"column":54}}},"13":{"name":"(anonymous_13)","line":218,"loc":{"start":{"line":218,"column":22},"end":{"line":218,"column":36}}},"14":{"name":"(anonymous_14)","line":250,"loc":{"start":{"line":250,"column":12},"end":{"line":250,"column":47}}},"15":{"name":"(anonymous_15)","line":255,"loc":{"start":{"line":255,"column":11},"end":{"line":255,"column":45}}},"16":{"name":"(anonymous_16)","line":388,"loc":{"start":{"line":388,"column":7},"end":{"line":388,"column":33}}},"17":{"name":"(anonymous_17)","line":396,"loc":{"start":{"line":396,"column":7},"end":{"line":396,"column":28}}},"18":{"name":"(anonymous_18)","line":410,"loc":{"start":{"line":410,"column":22},"end":{"line":410,"column":73}}},"19":{"name":"(anonymous_19)","line":419,"loc":{"start":{"line":419,"column":18},"end":{"line":419,"column":48}}},"20":{"name":"(anonymous_20)","line":425,"loc":{"start":{"line":425,"column":15},"end":{"line":425,"column":33}}},"21":{"name":"(anonymous_21)","line":451,"loc":{"start":{"line":451,"column":50},"end":{"line":451,"column":65}}},"22":{"name":"(anonymous_22)","line":465,"loc":{"start":{"line":465,"column":35},"end":{"line":465,"column":49}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":7,"column":3}},"2":{"start":{"line":15,"column":0},"end":{"line":502,"column":5}},"3":{"start":{"line":18,"column":0},"end":{"line":18,"column":38}},"4":{"start":{"line":19,"column":0},"end":{"line":19,"column":17}},"5":{"start":{"line":21,"column":0},"end":{"line":408,"column":2}},"6":{"start":{"line":24,"column":3},"end":{"line":30,"column":4}},"7":{"start":{"line":25,"column":4},"end":{"line":25,"column":79}},"8":{"start":{"line":26,"column":10},"end":{"line":30,"column":4}},"9":{"start":{"line":27,"column":4},"end":{"line":27,"column":37}},"10":{"start":{"line":29,"column":4},"end":{"line":29,"column":87}},"11":{"start":{"line":34,"column":3},"end":{"line":34,"column":73}},"12":{"start":{"line":38,"column":3},"end":{"line":40,"column":4}},"13":{"start":{"line":39,"column":4},"end":{"line":39,"column":62}},"14":{"start":{"line":41,"column":3},"end":{"line":41,"column":22}},"15":{"start":{"line":46,"column":3},"end":{"line":46,"column":29}},"16":{"start":{"line":48,"column":3},"end":{"line":63,"column":4}},"17":{"start":{"line":50,"column":5},"end":{"line":50,"column":20}},"18":{"start":{"line":52,"column":5},"end":{"line":56,"column":6}},"19":{"start":{"line":53,"column":6},"end":{"line":55,"column":7}},"20":{"start":{"line":54,"column":7},"end":{"line":54,"column":41}},"21":{"start":{"line":58,"column":5},"end":{"line":58,"column":18}},"22":{"start":{"line":62,"column":5},"end":{"line":62,"column":68}},"23":{"start":{"line":62,"column":41},"end":{"line":62,"column":64}},"24":{"start":{"line":65,"column":3},"end":{"line":65,"column":12}},"25":{"start":{"line":71,"column":3},"end":{"line":71,"column":44}},"26":{"start":{"line":73,"column":3},"end":{"line":75,"column":4}},"27":{"start":{"line":74,"column":4},"end":{"line":74,"column":27}},"28":{"start":{"line":77,"column":3},"end":{"line":77,"column":15}},"29":{"start":{"line":90,"column":3},"end":{"line":90,"column":30}},"30":{"start":{"line":91,"column":3},"end":{"line":91,"column":30}},"31":{"start":{"line":93,"column":3},"end":{"line":103,"column":4}},"32":{"start":{"line":94,"column":4},"end":{"line":94,"column":26}},"33":{"start":{"line":96,"column":4},"end":{"line":100,"column":5}},"34":{"start":{"line":97,"column":5},"end":{"line":99,"column":6}},"35":{"start":{"line":98,"column":6},"end":{"line":98,"column":43}},"36":{"start":{"line":102,"column":4},"end":{"line":102,"column":19}},"37":{"start":{"line":105,"column":3},"end":{"line":105,"column":16}},"38":{"start":{"line":107,"column":3},"end":{"line":123,"column":4}},"39":{"start":{"line":109,"column":4},"end":{"line":122,"column":5}},"40":{"start":{"line":111,"column":5},"end":{"line":119,"column":6}},"41":{"start":{"line":113,"column":6},"end":{"line":118,"column":7}},"42":{"start":{"line":115,"column":7},"end":{"line":117,"column":8}},"43":{"start":{"line":116,"column":8},"end":{"line":116,"column":41}},"44":{"start":{"line":121,"column":5},"end":{"line":121,"column":33}},"45":{"start":{"line":126,"column":3},"end":{"line":130,"column":6}},"46":{"start":{"line":127,"column":4},"end":{"line":129,"column":5}},"47":{"start":{"line":128,"column":5},"end":{"line":128,"column":21}},"48":{"start":{"line":132,"column":3},"end":{"line":132,"column":29}},"49":{"start":{"line":137,"column":3},"end":{"line":137,"column":27}},"50":{"start":{"line":138,"column":3},"end":{"line":151,"column":4}},"51":{"start":{"line":139,"column":4},"end":{"line":150,"column":5}},"52":{"start":{"line":140,"column":5},"end":{"line":140,"column":42}},"53":{"start":{"line":142,"column":5},"end":{"line":149,"column":6}},"54":{"start":{"line":143,"column":6},"end":{"line":143,"column":41}},"55":{"start":{"line":144,"column":6},"end":{"line":144,"column":53}},"56":{"start":{"line":146,"column":10},"end":{"line":149,"column":6}},"57":{"start":{"line":147,"column":6},"end":{"line":147,"column":41}},"58":{"start":{"line":148,"column":6},"end":{"line":148,"column":50}},"59":{"start":{"line":157,"column":2},"end":{"line":160,"column":4}},"60":{"start":{"line":162,"column":2},"end":{"line":162,"column":42}},"61":{"start":{"line":164,"column":2},"end":{"line":164,"column":73}},"62":{"start":{"line":166,"column":2},"end":{"line":168,"column":3}},"63":{"start":{"line":167,"column":3},"end":{"line":167,"column":61}},"64":{"start":{"line":173,"column":2},"end":{"line":173,"column":42}},"65":{"start":{"line":175,"column":2},"end":{"line":177,"column":3}},"66":{"start":{"line":176,"column":3},"end":{"line":176,"column":30}},"67":{"start":{"line":179,"column":2},"end":{"line":182,"column":3}},"68":{"start":{"line":180,"column":3},"end":{"line":180,"column":71}},"69":{"start":{"line":181,"column":3},"end":{"line":181,"column":35}},"70":{"start":{"line":185,"column":2},"end":{"line":185,"column":105}},"71":{"start":{"line":188,"column":2},"end":{"line":188,"column":30}},"72":{"start":{"line":190,"column":2},"end":{"line":192,"column":3}},"73":{"start":{"line":191,"column":3},"end":{"line":191,"column":104}},"74":{"start":{"line":194,"column":2},"end":{"line":194,"column":33}},"75":{"start":{"line":196,"column":2},"end":{"line":201,"column":4}},"76":{"start":{"line":203,"column":2},"end":{"line":203,"column":42}},"77":{"start":{"line":205,"column":2},"end":{"line":211,"column":3}},"78":{"start":{"line":206,"column":3},"end":{"line":208,"column":4}},"79":{"start":{"line":207,"column":4},"end":{"line":207,"column":39}},"80":{"start":{"line":209,"column":3},"end":{"line":209,"column":32}},"81":{"start":{"line":210,"column":3},"end":{"line":210,"column":10}},"82":{"start":{"line":213,"column":2},"end":{"line":213,"column":39}},"83":{"start":{"line":215,"column":2},"end":{"line":247,"column":3}},"84":{"start":{"line":216,"column":3},"end":{"line":216,"column":39}},"85":{"start":{"line":218,"column":3},"end":{"line":228,"column":5}},"86":{"start":{"line":219,"column":4},"end":{"line":219,"column":35}},"87":{"start":{"line":221,"column":4},"end":{"line":221,"column":38}},"88":{"start":{"line":223,"column":4},"end":{"line":223,"column":48}},"89":{"start":{"line":225,"column":4},"end":{"line":225,"column":43}},"90":{"start":{"line":226,"column":4},"end":{"line":226,"column":40}},"91":{"start":{"line":227,"column":4},"end":{"line":227,"column":33}},"92":{"start":{"line":230,"column":3},"end":{"line":234,"column":7}},"93":{"start":{"line":237,"column":3},"end":{"line":237,"column":74}},"94":{"start":{"line":239,"column":3},"end":{"line":239,"column":37}},"95":{"start":{"line":241,"column":3},"end":{"line":241,"column":47}},"96":{"start":{"line":243,"column":3},"end":{"line":243,"column":38}},"97":{"start":{"line":245,"column":3},"end":{"line":245,"column":39}},"98":{"start":{"line":246,"column":3},"end":{"line":246,"column":32}},"99":{"start":{"line":251,"column":2},"end":{"line":251,"column":41}},"100":{"start":{"line":252,"column":2},"end":{"line":252,"column":58}},"101":{"start":{"line":256,"column":2},"end":{"line":256,"column":22}},"102":{"start":{"line":258,"column":2},"end":{"line":258,"column":22}},"103":{"start":{"line":260,"column":2},"end":{"line":260,"column":26}},"104":{"start":{"line":262,"column":2},"end":{"line":268,"column":3}},"105":{"start":{"line":263,"column":3},"end":{"line":265,"column":4}},"106":{"start":{"line":264,"column":4},"end":{"line":264,"column":33}},"107":{"start":{"line":267,"column":3},"end":{"line":267,"column":23}},"108":{"start":{"line":270,"column":2},"end":{"line":380,"column":3}},"109":{"start":{"line":270,"column":13},"end":{"line":380,"column":3}},"110":{"start":{"line":271,"column":3},"end":{"line":273,"column":4}},"111":{"start":{"line":272,"column":4},"end":{"line":272,"column":13}},"112":{"start":{"line":275,"column":3},"end":{"line":275,"column":33}},"113":{"start":{"line":276,"column":3},"end":{"line":276,"column":74}},"114":{"start":{"line":278,"column":3},"end":{"line":379,"column":4}},"115":{"start":{"line":279,"column":4},"end":{"line":284,"column":27}},"116":{"start":{"line":286,"column":4},"end":{"line":290,"column":5}},"117":{"start":{"line":288,"column":5},"end":{"line":288,"column":65}},"118":{"start":{"line":289,"column":5},"end":{"line":289,"column":67}},"119":{"start":{"line":292,"column":4},"end":{"line":292,"column":41}},"120":{"start":{"line":295,"column":4},"end":{"line":378,"column":5}},"121":{"start":{"line":297,"column":5},"end":{"line":297,"column":25}},"122":{"start":{"line":299,"column":5},"end":{"line":302,"column":6}},"123":{"start":{"line":301,"column":6},"end":{"line":301,"column":22}},"124":{"start":{"line":304,"column":5},"end":{"line":306,"column":6}},"125":{"start":{"line":305,"column":6},"end":{"line":305,"column":15}},"126":{"start":{"line":308,"column":5},"end":{"line":308,"column":27}},"127":{"start":{"line":310,"column":5},"end":{"line":311,"column":20}},"128":{"start":{"line":314,"column":5},"end":{"line":347,"column":6}},"129":{"start":{"line":315,"column":6},"end":{"line":315,"column":30}},"130":{"start":{"line":316,"column":6},"end":{"line":316,"column":33}},"131":{"start":{"line":317,"column":6},"end":{"line":319,"column":7}},"132":{"start":{"line":318,"column":7},"end":{"line":318,"column":13}},"133":{"start":{"line":321,"column":6},"end":{"line":324,"column":18}},"134":{"start":{"line":326,"column":6},"end":{"line":333,"column":7}},"135":{"start":{"line":327,"column":7},"end":{"line":327,"column":29}},"136":{"start":{"line":329,"column":7},"end":{"line":332,"column":8}},"137":{"start":{"line":330,"column":8},"end":{"line":330,"column":12}},"138":{"start":{"line":331,"column":8},"end":{"line":331,"column":16}},"139":{"start":{"line":339,"column":6},"end":{"line":341,"column":7}},"140":{"start":{"line":340,"column":7},"end":{"line":340,"column":16}},"141":{"start":{"line":344,"column":6},"end":{"line":344,"column":21}},"142":{"start":{"line":345,"column":6},"end":{"line":345,"column":31}},"143":{"start":{"line":346,"column":6},"end":{"line":346,"column":25}},"144":{"start":{"line":349,"column":5},"end":{"line":351,"column":6}},"145":{"start":{"line":350,"column":6},"end":{"line":350,"column":15}},"146":{"start":{"line":353,"column":5},"end":{"line":355,"column":6}},"147":{"start":{"line":354,"column":6},"end":{"line":354,"column":41}},"148":{"start":{"line":357,"column":5},"end":{"line":361,"column":31}},"149":{"start":{"line":363,"column":5},"end":{"line":363,"column":28}},"150":{"start":{"line":365,"column":5},"end":{"line":367,"column":6}},"151":{"start":{"line":366,"column":6},"end":{"line":366,"column":24}},"152":{"start":{"line":369,"column":5},"end":{"line":369,"column":101}},"153":{"start":{"line":371,"column":5},"end":{"line":371,"column":24}},"154":{"start":{"line":373,"column":5},"end":{"line":375,"column":6}},"155":{"start":{"line":374,"column":6},"end":{"line":374,"column":23}},"156":{"start":{"line":377,"column":5},"end":{"line":377,"column":48}},"157":{"start":{"line":382,"column":2},"end":{"line":382,"column":16}},"158":{"start":{"line":389,"column":3},"end":{"line":389,"column":27}},"159":{"start":{"line":391,"column":3},"end":{"line":391,"column":35}},"160":{"start":{"line":393,"column":3},"end":{"line":393,"column":30}},"161":{"start":{"line":397,"column":3},"end":{"line":397,"column":37}},"162":{"start":{"line":399,"column":3},"end":{"line":401,"column":4}},"163":{"start":{"line":400,"column":4},"end":{"line":400,"column":11}},"164":{"start":{"line":403,"column":3},"end":{"line":405,"column":4}},"165":{"start":{"line":404,"column":4},"end":{"line":404,"column":18}},"166":{"start":{"line":410,"column":0},"end":{"line":417,"column":2}},"167":{"start":{"line":411,"column":1},"end":{"line":411,"column":18}},"168":{"start":{"line":412,"column":1},"end":{"line":412,"column":24}},"169":{"start":{"line":413,"column":1},"end":{"line":413,"column":20}},"170":{"start":{"line":415,"column":1},"end":{"line":415,"column":43}},"171":{"start":{"line":416,"column":1},"end":{"line":416,"column":24}},"172":{"start":{"line":419,"column":0},"end":{"line":457,"column":2}},"173":{"start":{"line":420,"column":1},"end":{"line":422,"column":2}},"174":{"start":{"line":421,"column":2},"end":{"line":421,"column":11}},"175":{"start":{"line":424,"column":1},"end":{"line":428,"column":2}},"176":{"start":{"line":425,"column":2},"end":{"line":427,"column":14}},"177":{"start":{"line":426,"column":3},"end":{"line":426,"column":48}},"178":{"start":{"line":430,"column":1},"end":{"line":438,"column":3}},"179":{"start":{"line":440,"column":1},"end":{"line":442,"column":2}},"180":{"start":{"line":441,"column":2},"end":{"line":441,"column":40}},"181":{"start":{"line":444,"column":1},"end":{"line":447,"column":2}},"182":{"start":{"line":445,"column":2},"end":{"line":445,"column":71}},"183":{"start":{"line":446,"column":2},"end":{"line":446,"column":51}},"184":{"start":{"line":449,"column":1},"end":{"line":449,"column":26}},"185":{"start":{"line":451,"column":1},"end":{"line":453,"column":14}},"186":{"start":{"line":452,"column":2},"end":{"line":452,"column":82}},"187":{"start":{"line":455,"column":1},"end":{"line":455,"column":147}},"188":{"start":{"line":459,"column":0},"end":{"line":478,"column":1}},"189":{"start":{"line":460,"column":1},"end":{"line":463,"column":2}},"190":{"start":{"line":462,"column":2},"end":{"line":462,"column":21}},"191":{"start":{"line":465,"column":1},"end":{"line":475,"column":11}},"192":{"start":{"line":466,"column":2},"end":{"line":469,"column":46}},"193":{"start":{"line":471,"column":2},"end":{"line":471,"column":64}},"194":{"start":{"line":472,"column":2},"end":{"line":474,"column":3}},"195":{"start":{"line":473,"column":3},"end":{"line":473,"column":17}},"196":{"start":{"line":477,"column":1},"end":{"line":477,"column":20}},"197":{"start":{"line":481,"column":0},"end":{"line":481,"column":100}},"198":{"start":{"line":483,"column":0},"end":{"line":498,"column":1}},"199":{"start":{"line":484,"column":1},"end":{"line":484,"column":25}},"200":{"start":{"line":486,"column":1},"end":{"line":497,"column":2}},"201":{"start":{"line":487,"column":2},"end":{"line":496,"column":3}},"202":{"start":{"line":488,"column":3},"end":{"line":492,"column":4}},"203":{"start":{"line":489,"column":4},"end":{"line":489,"column":49}},"204":{"start":{"line":491,"column":4},"end":{"line":491,"column":42}},"205":{"start":{"line":495,"column":3},"end":{"line":495,"column":65}},"206":{"start":{"line":500,"column":0},"end":{"line":500,"column":19}},"207":{"start":{"line":504,"column":0},"end":{"line":506,"column":1}},"208":{"start":{"line":505,"column":1},"end":{"line":505,"column":24}},"209":{"start":{"line":509,"column":0},"end":{"line":511,"column":1}},"210":{"start":{"line":510,"column":1},"end":{"line":510,"column":22}}},"branchMap":{"1":{"line":1,"type":"cond-expr","locations":[{"start":{"line":2,"column":3},"end":{"line":2,"column":9}},{"start":{"line":4,"column":2},"end":{"line":6,"column":6}}]},"2":{"line":4,"type":"cond-expr","locations":[{"start":{"line":5,"column":4},"end":{"line":5,"column":8}},{"start":{"line":6,"column":4},"end":{"line":6,"column":6}}]},"3":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":3},"end":{"line":4,"column":43}},{"start":{"line":4,"column":47},"end":{"line":4,"column":80}}]},"4":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":3},"end":{"line":24,"column":3}},{"start":{"line":24,"column":3},"end":{"line":24,"column":3}}]},"5":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":10},"end":{"line":26,"column":10}},{"start":{"line":26,"column":10},"end":{"line":26,"column":10}}]},"6":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":3},"end":{"line":38,"column":3}},{"start":{"line":38,"column":3},"end":{"line":38,"column":3}}]},"7":{"line":48,"type":"switch","locations":[{"start":{"line":49,"column":4},"end":{"line":58,"column":18}},{"start":{"line":60,"column":4},"end":{"line":62,"column":68}}]},"8":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":6},"end":{"line":53,"column":6}},{"start":{"line":53,"column":6},"end":{"line":53,"column":6}}]},"9":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":12},"end":{"line":62,"column":17}},{"start":{"line":62,"column":21},"end":{"line":62,"column":67}}]},"10":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":10},"end":{"line":90,"column":14}},{"start":{"line":90,"column":18},"end":{"line":90,"column":29}}]},"11":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":3},"end":{"line":93,"column":3}},{"start":{"line":93,"column":3},"end":{"line":93,"column":3}}]},"12":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":5},"end":{"line":97,"column":5}},{"start":{"line":97,"column":5},"end":{"line":97,"column":5}}]},"13":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":4},"end":{"line":109,"column":4}},{"start":{"line":109,"column":4},"end":{"line":109,"column":4}}]},"14":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":5},"end":{"line":111,"column":5}},{"start":{"line":111,"column":5},"end":{"line":111,"column":5}}]},"15":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":7},"end":{"line":115,"column":7}},{"start":{"line":115,"column":7},"end":{"line":115,"column":7}}]},"16":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":127,"column":4}},{"start":{"line":127,"column":4},"end":{"line":127,"column":4}}]},"17":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":8},"end":{"line":127,"column":30}},{"start":{"line":127,"column":34},"end":{"line":127,"column":47}}]},"18":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":13},"end":{"line":137,"column":20}},{"start":{"line":137,"column":24},"end":{"line":137,"column":26}}]},"19":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":4},"end":{"line":139,"column":4}},{"start":{"line":139,"column":4},"end":{"line":139,"column":4}}]},"20":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":31},"end":{"line":140,"column":35}},{"start":{"line":140,"column":39},"end":{"line":140,"column":40}}]},"21":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":5},"end":{"line":142,"column":5}},{"start":{"line":142,"column":5},"end":{"line":142,"column":5}}]},"22":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":9},"end":{"line":142,"column":39}},{"start":{"line":142,"column":43},"end":{"line":142,"column":71}}]},"23":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":10},"end":{"line":146,"column":10}},{"start":{"line":146,"column":10},"end":{"line":146,"column":10}}]},"24":{"line":146,"type":"binary-expr","locations":[{"start":{"line":146,"column":14},"end":{"line":146,"column":43}},{"start":{"line":146,"column":47},"end":{"line":146,"column":75}}]},"25":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":17},"end":{"line":164,"column":29}},{"start":{"line":164,"column":33},"end":{"line":164,"column":72}}]},"26":{"line":175,"type":"binary-expr","locations":[{"start":{"line":175,"column":9},"end":{"line":175,"column":15}},{"start":{"line":175,"column":19},"end":{"line":175,"column":47}}]},"27":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":2},"end":{"line":179,"column":2}},{"start":{"line":179,"column":2},"end":{"line":179,"column":2}}]},"28":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":15},"end":{"line":180,"column":43}},{"start":{"line":180,"column":47},"end":{"line":180,"column":52}}]},"29":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":2},"end":{"line":190,"column":2}},{"start":{"line":190,"column":2},"end":{"line":190,"column":2}}]},"30":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":2},"end":{"line":205,"column":2}},{"start":{"line":205,"column":2},"end":{"line":205,"column":2}}]},"31":{"line":205,"type":"binary-expr","locations":[{"start":{"line":205,"column":6},"end":{"line":205,"column":15}},{"start":{"line":205,"column":19},"end":{"line":205,"column":31}}]},"32":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":3},"end":{"line":206,"column":3}},{"start":{"line":206,"column":3},"end":{"line":206,"column":3}}]},"33":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":2},"end":{"line":215,"column":2}},{"start":{"line":215,"column":2},"end":{"line":215,"column":2}}]},"34":{"line":215,"type":"binary-expr","locations":[{"start":{"line":215,"column":6},"end":{"line":215,"column":11}},{"start":{"line":215,"column":15},"end":{"line":215,"column":27}}]},"35":{"line":225,"type":"binary-expr","locations":[{"start":{"line":225,"column":4},"end":{"line":225,"column":12}},{"start":{"line":225,"column":16},"end":{"line":225,"column":42}}]},"36":{"line":243,"type":"binary-expr","locations":[{"start":{"line":243,"column":3},"end":{"line":243,"column":11}},{"start":{"line":243,"column":15},"end":{"line":243,"column":37}}]},"37":{"line":262,"type":"if","locations":[{"start":{"line":262,"column":2},"end":{"line":262,"column":2}},{"start":{"line":262,"column":2},"end":{"line":262,"column":2}}]},"38":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":3},"end":{"line":271,"column":3}},{"start":{"line":271,"column":3},"end":{"line":271,"column":3}}]},"39":{"line":271,"type":"binary-expr","locations":[{"start":{"line":271,"column":6},"end":{"line":271,"column":36}},{"start":{"line":271,"column":40},"end":{"line":271,"column":55}}]},"40":{"line":276,"type":"cond-expr","locations":[{"start":{"line":276,"column":52},"end":{"line":276,"column":60}},{"start":{"line":276,"column":63},"end":{"line":276,"column":73}}]},"41":{"line":286,"type":"if","locations":[{"start":{"line":286,"column":4},"end":{"line":286,"column":4}},{"start":{"line":286,"column":4},"end":{"line":286,"column":4}}]},"42":{"line":286,"type":"binary-expr","locations":[{"start":{"line":286,"column":8},"end":{"line":286,"column":14}},{"start":{"line":286,"column":18},"end":{"line":286,"column":41}}]},"43":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":14},"end":{"line":292,"column":29}},{"start":{"line":292,"column":33},"end":{"line":292,"column":40}}]},"44":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":5},"end":{"line":299,"column":5}},{"start":{"line":299,"column":5},"end":{"line":299,"column":5}}]},"45":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":5},"end":{"line":304,"column":5}},{"start":{"line":304,"column":5},"end":{"line":304,"column":5}}]},"46":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":5},"end":{"line":314,"column":5}},{"start":{"line":314,"column":5},"end":{"line":314,"column":5}}]},"47":{"line":314,"type":"binary-expr","locations":[{"start":{"line":314,"column":9},"end":{"line":314,"column":15}},{"start":{"line":314,"column":19},"end":{"line":314,"column":25}},{"start":{"line":314,"column":29},"end":{"line":314,"column":51}}]},"48":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":6},"end":{"line":317,"column":6}},{"start":{"line":317,"column":6},"end":{"line":317,"column":6}}]},"49":{"line":321,"type":"cond-expr","locations":[{"start":{"line":321,"column":45},"end":{"line":321,"column":60}},{"start":{"line":321,"column":63},"end":{"line":321,"column":64}}]},"50":{"line":326,"type":"binary-expr","locations":[{"start":{"line":326,"column":36},"end":{"line":326,"column":43}},{"start":{"line":326,"column":47},"end":{"line":326,"column":53}}]},"51":{"line":329,"type":"if","locations":[{"start":{"line":329,"column":7},"end":{"line":329,"column":7}},{"start":{"line":329,"column":7},"end":{"line":329,"column":7}}]},"52":{"line":339,"type":"if","locations":[{"start":{"line":339,"column":6},"end":{"line":339,"column":6}},{"start":{"line":339,"column":6},"end":{"line":339,"column":6}}]},"53":{"line":339,"type":"binary-expr","locations":[{"start":{"line":339,"column":10},"end":{"line":339,"column":36}},{"start":{"line":339,"column":40},"end":{"line":339,"column":60}}]},"54":{"line":349,"type":"if","locations":[{"start":{"line":349,"column":5},"end":{"line":349,"column":5}},{"start":{"line":349,"column":5},"end":{"line":349,"column":5}}]},"55":{"line":353,"type":"if","locations":[{"start":{"line":353,"column":5},"end":{"line":353,"column":5}},{"start":{"line":353,"column":5},"end":{"line":353,"column":5}}]},"56":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":5},"end":{"line":365,"column":5}},{"start":{"line":365,"column":5},"end":{"line":365,"column":5}}]},"57":{"line":369,"type":"cond-expr","locations":[{"start":{"line":369,"column":44},"end":{"line":369,"column":69}},{"start":{"line":369,"column":72},"end":{"line":369,"column":77}}]},"58":{"line":373,"type":"if","locations":[{"start":{"line":373,"column":5},"end":{"line":373,"column":5}},{"start":{"line":373,"column":5},"end":{"line":373,"column":5}}]},"59":{"line":391,"type":"binary-expr","locations":[{"start":{"line":391,"column":17},"end":{"line":391,"column":28}},{"start":{"line":391,"column":32},"end":{"line":391,"column":34}}]},"60":{"line":399,"type":"if","locations":[{"start":{"line":399,"column":3},"end":{"line":399,"column":3}},{"start":{"line":399,"column":3},"end":{"line":399,"column":3}}]},"61":{"line":399,"type":"binary-expr","locations":[{"start":{"line":399,"column":7},"end":{"line":399,"column":17}},{"start":{"line":399,"column":21},"end":{"line":399,"column":38}}]},"62":{"line":415,"type":"binary-expr","locations":[{"start":{"line":415,"column":16},"end":{"line":415,"column":26}},{"start":{"line":415,"column":30},"end":{"line":415,"column":32}}]},"63":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":1},"end":{"line":420,"column":1}},{"start":{"line":420,"column":1},"end":{"line":420,"column":1}}]},"64":{"line":424,"type":"if","locations":[{"start":{"line":424,"column":1},"end":{"line":424,"column":1}},{"start":{"line":424,"column":1},"end":{"line":424,"column":1}}]},"65":{"line":440,"type":"if","locations":[{"start":{"line":440,"column":1},"end":{"line":440,"column":1}},{"start":{"line":440,"column":1},"end":{"line":440,"column":1}}]},"66":{"line":444,"type":"if","locations":[{"start":{"line":444,"column":1},"end":{"line":444,"column":1}},{"start":{"line":444,"column":1},"end":{"line":444,"column":1}}]},"67":{"line":445,"type":"cond-expr","locations":[{"start":{"line":445,"column":51},"end":{"line":445,"column":58}},{"start":{"line":445,"column":61},"end":{"line":445,"column":70}}]},"68":{"line":452,"type":"binary-expr","locations":[{"start":{"line":452,"column":24},"end":{"line":452,"column":44}},{"start":{"line":452,"column":48},"end":{"line":452,"column":50}}]},"69":{"line":455,"type":"cond-expr","locations":[{"start":{"line":455,"column":81},"end":{"line":455,"column":97}},{"start":{"line":455,"column":100},"end":{"line":455,"column":102}}]},"70":{"line":459,"type":"if","locations":[{"start":{"line":459,"column":0},"end":{"line":459,"column":0}},{"start":{"line":459,"column":0},"end":{"line":459,"column":0}}]},"71":{"line":460,"type":"if","locations":[{"start":{"line":460,"column":1},"end":{"line":460,"column":1}},{"start":{"line":460,"column":1},"end":{"line":460,"column":1}}]},"72":{"line":472,"type":"if","locations":[{"start":{"line":472,"column":2},"end":{"line":472,"column":2}},{"start":{"line":472,"column":2},"end":{"line":472,"column":2}}]},"73":{"line":481,"type":"binary-expr","locations":[{"start":{"line":481,"column":13},"end":{"line":481,"column":35}},{"start":{"line":481,"column":39},"end":{"line":481,"column":99}}]},"74":{"line":483,"type":"if","locations":[{"start":{"line":483,"column":0},"end":{"line":483,"column":0}},{"start":{"line":483,"column":0},"end":{"line":483,"column":0}}]},"75":{"line":486,"type":"if","locations":[{"start":{"line":486,"column":1},"end":{"line":486,"column":1}},{"start":{"line":486,"column":1},"end":{"line":486,"column":1}}]},"76":{"line":486,"type":"binary-expr","locations":[{"start":{"line":486,"column":5},"end":{"line":486,"column":30}},{"start":{"line":486,"column":34},"end":{"line":486,"column":69}}]},"77":{"line":487,"type":"if","locations":[{"start":{"line":487,"column":2},"end":{"line":487,"column":2}},{"start":{"line":487,"column":2},"end":{"line":487,"column":2}}]},"78":{"line":488,"type":"if","locations":[{"start":{"line":488,"column":3},"end":{"line":488,"column":3}},{"start":{"line":488,"column":3},"end":{"line":488,"column":3}}]},"79":{"line":504,"type":"if","locations":[{"start":{"line":504,"column":0},"end":{"line":504,"column":0}},{"start":{"line":504,"column":0},"end":{"line":504,"column":0}}]},"80":{"line":504,"type":"binary-expr","locations":[{"start":{"line":504,"column":4},"end":{"line":504,"column":33}},{"start":{"line":504,"column":37},"end":{"line":504,"column":51}}]},"81":{"line":509,"type":"if","locations":[{"start":{"line":509,"column":0},"end":{"line":509,"column":0}},{"start":{"line":509,"column":0},"end":{"line":509,"column":0}}]}},"code":["var _self = (typeof window !== 'undefined')","\t? window   // if in browser","\t: (","\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)","\t\t? self // if in worker","\t\t: {}   // if in node js","\t);","","/**"," * Prism: Lightweight, robust, elegant syntax highlighting"," * MIT license http://www.opensource.org/licenses/mit-license.php/"," * @author Lea Verou http://lea.verou.me"," */","","var Prism = (function(){","","// Private helper vars","var lang = /\\blang(?:uage)?-(\\w+)\\b/i;","var uniqueId = 0;","","var _ = _self.Prism = {","\tutil: {","\t\tencode: function (tokens) {","\t\t\tif (tokens instanceof Token) {","\t\t\t\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);","\t\t\t} else if (_.util.type(tokens) === 'Array') {","\t\t\t\treturn tokens.map(_.util.encode);","\t\t\t} else {","\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');","\t\t\t}","\t\t},","","\t\ttype: function (o) {","\t\t\treturn Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];","\t\t},","","\t\tobjId: function (obj) {","\t\t\tif (!obj['__id']) {","\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });","\t\t\t}","\t\t\treturn obj['__id'];","\t\t},","","\t\t// Deep clone a language definition (e.g. to extend it)","\t\tclone: function (o) {","\t\t\tvar type = _.util.type(o);","","\t\t\tswitch (type) {","\t\t\t\tcase 'Object':","\t\t\t\t\tvar clone = {};","","\t\t\t\t\tfor (var key in o) {","\t\t\t\t\t\tif (o.hasOwnProperty(key)) {","\t\t\t\t\t\t\tclone[key] = _.util.clone(o[key]);","\t\t\t\t\t\t}","\t\t\t\t\t}","","\t\t\t\t\treturn clone;","","\t\t\t\tcase 'Array':","\t\t\t\t\t// Check for existence for IE8","\t\t\t\t\treturn o.map && o.map(function(v) { return _.util.clone(v); });","\t\t\t}","","\t\t\treturn o;","\t\t}","\t},","","\tlanguages: {","\t\textend: function (id, redef) {","\t\t\tvar lang = _.util.clone(_.languages[id]);","","\t\t\tfor (var key in redef) {","\t\t\t\tlang[key] = redef[key];","\t\t\t}","","\t\t\treturn lang;","\t\t},","","\t\t/**","\t\t * Insert a token before another token in a language literal","\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),","\t\t * we cannot just provide an object, we need anobject and a key.","\t\t * @param inside The key (or language id) of the parent","\t\t * @param before The key to insert before. If not provided, the function appends instead.","\t\t * @param insert Object with the key/value pairs to insert","\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.","\t\t */","\t\tinsertBefore: function (inside, before, insert, root) {","\t\t\troot = root || _.languages;","\t\t\tvar grammar = root[inside];","","\t\t\tif (arguments.length == 2) {","\t\t\t\tinsert = arguments[1];","","\t\t\t\tfor (var newToken in insert) {","\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {","\t\t\t\t\t\tgrammar[newToken] = insert[newToken];","\t\t\t\t\t}","\t\t\t\t}","","\t\t\t\treturn grammar;","\t\t\t}","","\t\t\tvar ret = {};","","\t\t\tfor (var token in grammar) {","","\t\t\t\tif (grammar.hasOwnProperty(token)) {","","\t\t\t\t\tif (token == before) {","","\t\t\t\t\t\tfor (var newToken in insert) {","","\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {","\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t}","","\t\t\t\t\tret[token] = grammar[token];","\t\t\t\t}","\t\t\t}","","\t\t\t// Update references in other language definitions","\t\t\t_.languages.DFS(_.languages, function(key, value) {","\t\t\t\tif (value === root[inside] && key != inside) {","\t\t\t\t\tthis[key] = ret;","\t\t\t\t}","\t\t\t});","","\t\t\treturn root[inside] = ret;","\t\t},","","\t\t// Traverse a language definition with Depth First Search","\t\tDFS: function(o, callback, type, visited) {","\t\t\tvisited = visited || {};","\t\t\tfor (var i in o) {","\t\t\t\tif (o.hasOwnProperty(i)) {","\t\t\t\t\tcallback.call(o, i, o[i], type || i);","","\t\t\t\t\tif (_.util.type(o[i]) === 'Object' && !visited[_.util.objId(o[i])]) {","\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;","\t\t\t\t\t\t_.languages.DFS(o[i], callback, null, visited);","\t\t\t\t\t}","\t\t\t\t\telse if (_.util.type(o[i]) === 'Array' && !visited[_.util.objId(o[i])]) {","\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;","\t\t\t\t\t\t_.languages.DFS(o[i], callback, i, visited);","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t}","\t},","\tplugins: {},","","\thighlightAll: function(async, callback) {","\t\tvar env = {","\t\t\tcallback: callback,","\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'","\t\t};","","\t\t_.hooks.run(\"before-highlightall\", env);","","\t\tvar elements = env.elements || document.querySelectorAll(env.selector);","","\t\tfor (var i=0, element; element = elements[i++];) {","\t\t\t_.highlightElement(element, async === true, env.callback);","\t\t}","\t},","","\thighlightElement: function(element, async, callback) {","\t\t// Find language","\t\tvar language, grammar, parent = element;","","\t\twhile (parent && !lang.test(parent.className)) {","\t\t\tparent = parent.parentNode;","\t\t}","","\t\tif (parent) {","\t\t\tlanguage = (parent.className.match(lang) || [,''])[1].toLowerCase();","\t\t\tgrammar = _.languages[language];","\t\t}","","\t\t// Set language on the element, if not present","\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;","","\t\t// Set language on the parent, for styling","\t\tparent = element.parentNode;","","\t\tif (/pre/i.test(parent.nodeName)) {","\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;","\t\t}","","\t\tvar code = element.textContent;","","\t\tvar env = {","\t\t\telement: element,","\t\t\tlanguage: language,","\t\t\tgrammar: grammar,","\t\t\tcode: code","\t\t};","","\t\t_.hooks.run('before-sanity-check', env);","","\t\tif (!env.code || !env.grammar) {","\t\t\tif (env.code) {","\t\t\t\tenv.element.textContent = env.code;","\t\t\t}","\t\t\t_.hooks.run('complete', env);","\t\t\treturn;","\t\t}","","\t\t_.hooks.run('before-highlight', env);","","\t\tif (async && _self.Worker) {","\t\t\tvar worker = new Worker(_.filename);","","\t\t\tworker.onmessage = function(evt) {","\t\t\t\tenv.highlightedCode = evt.data;","","\t\t\t\t_.hooks.run('before-insert', env);","","\t\t\t\tenv.element.innerHTML = env.highlightedCode;","","\t\t\t\tcallback && callback.call(env.element);","\t\t\t\t_.hooks.run('after-highlight', env);","\t\t\t\t_.hooks.run('complete', env);","\t\t\t};","","\t\t\tworker.postMessage(JSON.stringify({","\t\t\t\tlanguage: env.language,","\t\t\t\tcode: env.code,","\t\t\t\timmediateClose: true","\t\t\t}));","\t\t}","\t\telse {","\t\t\tenv.highlightedCode = _.highlight(env.code, env.grammar, env.language);","","\t\t\t_.hooks.run('before-insert', env);","","\t\t\tenv.element.innerHTML = env.highlightedCode;","","\t\t\tcallback && callback.call(element);","","\t\t\t_.hooks.run('after-highlight', env);","\t\t\t_.hooks.run('complete', env);","\t\t}","\t},","","\thighlight: function (text, grammar, language) {","\t\tvar tokens = _.tokenize(text, grammar);","\t\treturn Token.stringify(_.util.encode(tokens), language);","\t},","","\ttokenize: function(text, grammar, language) {","\t\tvar Token = _.Token;","","\t\tvar strarr = [text];","","\t\tvar rest = grammar.rest;","","\t\tif (rest) {","\t\t\tfor (var token in rest) {","\t\t\t\tgrammar[token] = rest[token];","\t\t\t}","","\t\t\tdelete grammar.rest;","\t\t}","","\t\ttokenloop: for (var token in grammar) {","\t\t\tif(!grammar.hasOwnProperty(token) || !grammar[token]) {","\t\t\t\tcontinue;","\t\t\t}","","\t\t\tvar patterns = grammar[token];","\t\t\tpatterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];","","\t\t\tfor (var j = 0; j < patterns.length; ++j) {","\t\t\t\tvar pattern = patterns[j],","\t\t\t\t\tinside = pattern.inside,","\t\t\t\t\tlookbehind = !!pattern.lookbehind,","\t\t\t\t\tgreedy = !!pattern.greedy,","\t\t\t\t\tlookbehindLength = 0,","\t\t\t\t\talias = pattern.alias;","","\t\t\t\tif (greedy && !pattern.pattern.global) {","\t\t\t\t\t// Without the global flag, lastIndex won't work","\t\t\t\t\tvar flags = pattern.pattern.toString().match(/[imuy]*$/)[0];","\t\t\t\t\tpattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");","\t\t\t\t}","","\t\t\t\tpattern = pattern.pattern || pattern;","","\t\t\t\t// Don’t cache length as it changes during the loop","\t\t\t\tfor (var i=0, pos = 0; i<strarr.length; pos += strarr[i].length, ++i) {","","\t\t\t\t\tvar str = strarr[i];","","\t\t\t\t\tif (strarr.length > text.length) {","\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!","\t\t\t\t\t\tbreak tokenloop;","\t\t\t\t\t}","","\t\t\t\t\tif (str instanceof Token) {","\t\t\t\t\t\tcontinue;","\t\t\t\t\t}","","\t\t\t\t\tpattern.lastIndex = 0;","","\t\t\t\t\tvar match = pattern.exec(str),","\t\t\t\t\t    delNum = 1;","","\t\t\t\t\t// Greedy patterns can override/remove up to two previously matched tokens","\t\t\t\t\tif (!match && greedy && i != strarr.length - 1) {","\t\t\t\t\t\tpattern.lastIndex = pos;","\t\t\t\t\t\tmatch = pattern.exec(text);","\t\t\t\t\t\tif (!match) {","\t\t\t\t\t\t\tbreak;","\t\t\t\t\t\t}","","\t\t\t\t\t\tvar from = match.index + (lookbehind ? match[1].length : 0),","\t\t\t\t\t\t    to = match.index + match[0].length,","\t\t\t\t\t\t    k = i,","\t\t\t\t\t\t    p = pos;","","\t\t\t\t\t\tfor (var len = strarr.length; k < len && p < to; ++k) {","\t\t\t\t\t\t\tp += strarr[k].length;","\t\t\t\t\t\t\t// Move the index i to the element in strarr that is closest to from","\t\t\t\t\t\t\tif (from >= p) {","\t\t\t\t\t\t\t\t++i;","\t\t\t\t\t\t\t\tpos = p;","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","","\t\t\t\t\t\t/*","\t\t\t\t\t\t * If strarr[i] is a Token, then the match starts inside another Token, which is invalid","\t\t\t\t\t\t * If strarr[k - 1] is greedy we are in conflict with another greedy pattern","\t\t\t\t\t\t */","\t\t\t\t\t\tif (strarr[i] instanceof Token || strarr[k - 1].greedy) {","\t\t\t\t\t\t\tcontinue;","\t\t\t\t\t\t}","","\t\t\t\t\t\t// Number of tokens to delete and replace with the new match","\t\t\t\t\t\tdelNum = k - i;","\t\t\t\t\t\tstr = text.slice(pos, p);","\t\t\t\t\t\tmatch.index -= pos;","\t\t\t\t\t}","","\t\t\t\t\tif (!match) {","\t\t\t\t\t\tcontinue;","\t\t\t\t\t}","","\t\t\t\t\tif(lookbehind) {","\t\t\t\t\t\tlookbehindLength = match[1].length;","\t\t\t\t\t}","","\t\t\t\t\tvar from = match.index + lookbehindLength,","\t\t\t\t\t    match = match[0].slice(lookbehindLength),","\t\t\t\t\t    to = from + match.length,","\t\t\t\t\t    before = str.slice(0, from),","\t\t\t\t\t    after = str.slice(to);","","\t\t\t\t\tvar args = [i, delNum];","","\t\t\t\t\tif (before) {","\t\t\t\t\t\targs.push(before);","\t\t\t\t\t}","","\t\t\t\t\tvar wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);","","\t\t\t\t\targs.push(wrapped);","","\t\t\t\t\tif (after) {","\t\t\t\t\t\targs.push(after);","\t\t\t\t\t}","","\t\t\t\t\tArray.prototype.splice.apply(strarr, args);","\t\t\t\t}","\t\t\t}","\t\t}","","\t\treturn strarr;","\t},","","\thooks: {","\t\tall: {},","","\t\tadd: function (name, callback) {","\t\t\tvar hooks = _.hooks.all;","","\t\t\thooks[name] = hooks[name] || [];","","\t\t\thooks[name].push(callback);","\t\t},","","\t\trun: function (name, env) {","\t\t\tvar callbacks = _.hooks.all[name];","","\t\t\tif (!callbacks || !callbacks.length) {","\t\t\t\treturn;","\t\t\t}","","\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {","\t\t\t\tcallback(env);","\t\t\t}","\t\t}","\t}","};","","var Token = _.Token = function(type, content, alias, matchedStr, greedy) {","\tthis.type = type;","\tthis.content = content;","\tthis.alias = alias;","\t// Copy of the full string this token was created from","\tthis.length = (matchedStr || \"\").length|0;","\tthis.greedy = !!greedy;","};","","Token.stringify = function(o, language, parent) {","\tif (typeof o == 'string') {","\t\treturn o;","\t}","","\tif (_.util.type(o) === 'Array') {","\t\treturn o.map(function(element) {","\t\t\treturn Token.stringify(element, language, o);","\t\t}).join('');","\t}","","\tvar env = {","\t\ttype: o.type,","\t\tcontent: Token.stringify(o.content, language, parent),","\t\ttag: 'span',","\t\tclasses: ['token', o.type],","\t\tattributes: {},","\t\tlanguage: language,","\t\tparent: parent","\t};","","\tif (env.type == 'comment') {","\t\tenv.attributes['spellcheck'] = 'true';","\t}","","\tif (o.alias) {","\t\tvar aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];","\t\tArray.prototype.push.apply(env.classes, aliases);","\t}","","\t_.hooks.run('wrap', env);","","\tvar attributes = Object.keys(env.attributes).map(function(name) {","\t\treturn name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';","\t}).join(' ');","","\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';","","};","","if (!_self.document) {","\tif (!_self.addEventListener) {","\t\t// in Node.js","\t\treturn _self.Prism;","\t}"," \t// In worker","\t_self.addEventListener('message', function(evt) {","\t\tvar message = JSON.parse(evt.data),","\t\t    lang = message.language,","\t\t    code = message.code,","\t\t    immediateClose = message.immediateClose;","","\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));","\t\tif (immediateClose) {","\t\t\t_self.close();","\t\t}","\t}, false);","","\treturn _self.Prism;","}","","//Get current script and highlight","var script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();","","if (script) {","\t_.filename = script.src;","","\tif (document.addEventListener && !script.hasAttribute('data-manual')) {","\t\tif(document.readyState !== \"loading\") {","\t\t\tif (window.requestAnimationFrame) {","\t\t\t\twindow.requestAnimationFrame(_.highlightAll);","\t\t\t} else {","\t\t\t\twindow.setTimeout(_.highlightAll, 16);","\t\t\t}","\t\t}","\t\telse {","\t\t\tdocument.addEventListener('DOMContentLoaded', _.highlightAll);","\t\t}","\t}","}","","return _self.Prism;","","})();","","if (typeof module !== 'undefined' && module.exports) {","\tmodule.exports = Prism;","}","","// hack for components to work correctly in node.js","if (typeof global !== 'undefined') {","\tglobal.Prism = Prism;","}",""],"l":{"1":1,"15":1,"18":1,"19":1,"21":1,"24":0,"25":0,"26":0,"27":0,"29":0,"34":81089,"38":32589,"39":1182,"41":32589,"46":1494,"48":1494,"50":469,"52":469,"53":1328,"54":1328,"58":469,"62":69,"65":998,"71":64,"73":64,"74":79,"77":13,"90":22,"91":22,"93":22,"94":0,"96":0,"97":0,"98":0,"102":0,"105":22,"107":22,"109":174,"111":174,"113":19,"115":40,"116":40,"121":174,"126":22,"127":46943,"128":17,"132":22,"137":15959,"138":15959,"139":46943,"140":46943,"142":46943,"143":14291,"144":14291,"146":32652,"147":1646,"148":1646,"157":0,"162":0,"164":0,"166":0,"167":0,"173":0,"175":0,"176":0,"179":0,"180":0,"181":0,"185":0,"188":0,"190":0,"191":0,"194":0,"196":0,"203":0,"205":0,"206":0,"207":0,"209":0,"210":0,"213":0,"215":0,"216":0,"218":0,"219":0,"221":0,"223":0,"225":0,"226":0,"227":0,"230":0,"237":0,"239":0,"241":0,"243":0,"245":0,"246":0,"251":0,"252":0,"256":0,"258":0,"260":0,"262":0,"263":0,"264":0,"267":0,"270":0,"271":0,"272":0,"275":0,"276":0,"278":0,"279":0,"286":0,"288":0,"289":0,"292":0,"295":0,"297":0,"299":0,"301":0,"304":0,"305":0,"308":0,"310":0,"314":0,"315":0,"316":0,"317":0,"318":0,"321":0,"326":0,"327":0,"329":0,"330":0,"331":0,"339":0,"340":0,"344":0,"345":0,"346":0,"349":0,"350":0,"353":0,"354":0,"357":0,"363":0,"365":0,"366":0,"369":0,"371":0,"373":0,"374":0,"377":0,"382":0,"389":19,"391":19,"393":19,"397":0,"399":0,"400":0,"403":0,"404":0,"410":1,"411":0,"412":0,"413":0,"415":0,"416":0,"419":1,"420":0,"421":0,"424":0,"425":0,"426":0,"430":0,"440":0,"441":0,"444":0,"445":0,"446":0,"449":0,"451":0,"452":0,"455":0,"459":1,"460":1,"462":1,"465":0,"466":0,"471":0,"472":0,"473":0,"477":0,"481":0,"483":0,"484":0,"486":0,"487":0,"488":0,"489":0,"491":0,"495":0,"500":0,"504":1,"505":1,"509":1,"510":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-cpp.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-cpp.js","s":{"1":2,"2":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":5,"column":3}},"2":{"start":{"line":7,"column":0},"end":{"line":12,"column":3}}},"branchMap":{},"code":["Prism.languages.cpp = Prism.languages.extend('c', {","\t'keyword': /\\b(alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|class|compl|const|constexpr|const_cast|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|float|for|friend|goto|if|inline|int|long|mutable|namespace|new|noexcept|nullptr|operator|private|protected|public|register|reinterpret_cast|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/,","\t'boolean': /\\b(true|false)\\b/,","\t'operator': /[-+]{1,2}|!=?|<{1,2}=?|>{1,2}=?|\\->|:{1,2}|={1,2}|\\^|~|%|&{1,2}|\\|?\\||\\?|\\*|\\/|\\b(and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/","});","","Prism.languages.insertBefore('cpp', 'keyword', {","\t'class-name': {","\t\tpattern: /(class\\s+)[a-z0-9_]+/i,","\t\tlookbehind: true","\t}","});"],"l":{"1":2,"7":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-crystal.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-crystal.js","s":{"1":2,"2":2,"3":0,"4":0},"b":{},"f":{"1":2},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":17}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":53,"column":10}},"2":{"start":{"line":2,"column":1},"end":{"line":12,"column":4}},"3":{"start":{"line":14,"column":1},"end":{"line":14,"column":54}},"4":{"start":{"line":16,"column":1},"end":{"line":51,"column":4}}},"branchMap":{},"code":["(function(Prism) {","\tPrism.languages.crystal = Prism.languages.extend('ruby', {","\t\tkeyword: [","\t\t\t/\\b(?:abstract|alias|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|ifdef|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|rescue|return|require|self|sizeof|struct|super|then|type|typeof|union|unless|until|when|while|with|yield|__DIR__|__FILE__|__LINE__)\\b/,","\t\t\t{","\t\t\t\tpattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,","\t\t\t\tlookbehind: true","\t\t\t}","\t\t],","","\t\tnumber: /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[0-9a-fA-F_]*[0-9a-fA-F]|(?:[0-9](?:[0-9_]*[0-9])?)(?:\\.[0-9_]*[0-9])?(?:[eE][+-]?[0-9_]*[0-9])?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/,","\t});","","\tvar rest = Prism.util.clone(Prism.languages.crystal);","","\tPrism.languages.insertBefore('crystal', 'string', {","\t\tattribute: {","\t\t\tpattern: /@\\[.+?\\]/,","\t\t\talias: 'attr-name',","\t\t\tinside: {","\t\t\t\tdelimiter: {","\t\t\t\t\tpattern: /^@\\[|\\]$/,","\t\t\t\t\talias: 'tag'","\t\t\t\t},","\t\t\t\trest: rest","\t\t\t}","\t\t},","","\t\texpansion: [","\t\t{","\t\t\tpattern: /\\{\\{.+?\\}\\}/,","\t\t\tinside: {","\t\t\t\tdelimiter: {","\t\t\t\t\tpattern: /^\\{\\{|\\}\\}$/,","\t\t\t\t\talias: 'tag'","\t\t\t\t},","\t\t\t\trest: rest","\t\t\t}","\t\t},","\t\t{","\t\t\tpattern: /\\{%.+?%\\}/,","\t\t\tinside: {","\t\t\t\tdelimiter: {","\t\t\t\t\tpattern: /^\\{%|%\\}$/,","\t\t\t\t\talias: 'tag'","\t\t\t\t},","\t\t\t\trest: rest","\t\t\t}","\t\t}","\t\t]","\t});","","}(Prism));",""],"l":{"1":2,"2":2,"14":0,"16":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-csharp.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-csharp.js","s":{"1":2,"2":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":8,"column":3}},"2":{"start":{"line":10,"column":0},"end":{"line":32,"column":3}}},"branchMap":{},"code":["Prism.languages.csharp = Prism.languages.extend('clike', {","\t'keyword': /\\b(abstract|as|async|await|base|bool|break|byte|case|catch|char|checked|class|const|continue|decimal|default|delegate|do|double|else|enum|event|explicit|extern|false|finally|fixed|float|for|foreach|goto|if|implicit|in|int|interface|internal|is|lock|long|namespace|new|null|object|operator|out|override|params|private|protected|public|readonly|ref|return|sbyte|sealed|short|sizeof|stackalloc|static|string|struct|switch|this|throw|true|try|typeof|uint|ulong|unchecked|unsafe|ushort|using|virtual|void|volatile|while|add|alias|ascending|async|await|descending|dynamic|from|get|global|group|into|join|let|orderby|partial|remove|select|set|value|var|where|yield)\\b/,","\t'string': [","\t\t/@(\"|')(\\1\\1|\\\\\\1|\\\\?(?!\\1)[\\s\\S])*\\1/,","\t\t/(\"|')(\\\\?.)*?\\1/","\t],","\t'number': /\\b-?(0x[\\da-f]+|\\d*\\.?\\d+f?)\\b/i","});","","Prism.languages.insertBefore('csharp', 'keyword', {","\t'generic-method': {","\t\tpattern: /[a-z0-9_]+\\s*<[^>\\r\\n]+?>\\s*(?=\\()/i,","\t\talias: 'function',","\t\tinside: {","\t\t\tkeyword: Prism.languages.csharp.keyword,","\t\t\tpunctuation: /[<>(),.:]/","\t\t}","\t},","\t'preprocessor': {","\t\tpattern: /(^\\s*)#.*/m,","\t\tlookbehind: true,","\t\talias: 'property',","\t\tinside: {","\t\t\t// highlight preprocessor directives as keywords","\t\t\t'directive': {","\t\t\t\tpattern: /(\\s*#)\\b(define|elif|else|endif|endregion|error|if|line|pragma|region|undef|warning)\\b/,","\t\t\t\tlookbehind: true,","\t\t\t\talias: 'keyword'","\t\t\t}","\t\t}","\t}","});",""],"l":{"1":2,"10":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-css-extras.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-css-extras.js","s":{"1":2,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":10,"column":2}},"2":{"start":{"line":12,"column":0},"end":{"line":16,"column":3}}},"branchMap":{},"code":["Prism.languages.css.selector = {","\tpattern: /[^\\{\\}\\s][^\\{\\}]*(?=\\s*\\{)/,","\tinside: {","\t\t'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,","\t\t'pseudo-class': /:[-\\w]+(?:\\(.*\\))?/,","\t\t'class': /\\.[-:\\.\\w]+/,","\t\t'id': /#[-:\\.\\w]+/,","\t\t'attribute': /\\[[^\\]]+\\]/","\t}","};","","Prism.languages.insertBefore('css', 'function', {","\t'hexcode': /#[\\da-f]{3,6}/i,","\t'entity': /\\\\[\\da-f]{1,8}/i,","\t'number': /[\\d%\\.]+/","});"],"l":{"1":2,"12":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-css.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-css.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0},"b":{"1":[0,1]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":20,"column":2}},"2":{"start":{"line":22,"column":0},"end":{"line":22,"column":82}},"3":{"start":{"line":24,"column":0},"end":{"line":51,"column":1}},"4":{"start":{"line":25,"column":1},"end":{"line":32,"column":4}},"5":{"start":{"line":34,"column":1},"end":{"line":50,"column":32}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":0},"end":{"line":24,"column":0}},{"start":{"line":24,"column":0},"end":{"line":24,"column":0}}]}},"code":["Prism.languages.css = {","\t'comment': /\\/\\*[\\w\\W]*?\\*\\//,","\t'atrule': {","\t\tpattern: /@[\\w-]+?.*?(;|(?=\\s*\\{))/i,","\t\tinside: {","\t\t\t'rule': /@[\\w-]+/","\t\t\t// See rest below","\t\t}","\t},","\t'url': /url\\((?:([\"'])(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,","\t'selector': /[^\\{\\}\\s][^\\{\\};]*?(?=\\s*\\{)/,","\t'string': {","\t\tpattern: /(\"|')(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1/,","\t\tgreedy: true","\t},","\t'property': /(\\b|\\B)[\\w-]+(?=\\s*:)/i,","\t'important': /\\B!important\\b/i,","\t'function': /[-a-z0-9]+(?=\\()/i,","\t'punctuation': /[(){};:]/","};","","Prism.languages.css['atrule'].inside.rest = Prism.util.clone(Prism.languages.css);","","if (Prism.languages.markup) {","\tPrism.languages.insertBefore('markup', 'tag', {","\t\t'style': {","\t\t\tpattern: /(<style[\\w\\W]*?>)[\\w\\W]*?(?=<\\/style>)/i,","\t\t\tlookbehind: true,","\t\t\tinside: Prism.languages.css,","\t\t\talias: 'language-css'","\t\t}","\t});","\t","\tPrism.languages.insertBefore('inside', 'attr-value', {","\t\t'style-attr': {","\t\t\tpattern: /\\s*style=(\"|').*?\\1/i,","\t\t\tinside: {","\t\t\t\t'attr-name': {","\t\t\t\t\tpattern: /^\\s*style/i,","\t\t\t\t\tinside: Prism.languages.markup.tag.inside","\t\t\t\t},","\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,","\t\t\t\t'attr-value': {","\t\t\t\t\tpattern: /.+/i,","\t\t\t\t\tinside: Prism.languages.css","\t\t\t\t}","\t\t\t},","\t\t\talias: 'language-css'","\t\t}","\t}, Prism.languages.markup.tag);","}"],"l":{"1":1,"22":1,"24":1,"25":0,"34":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-dart.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-dart.js","s":{"1":2,"2":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":11,"column":3}},"2":{"start":{"line":13,"column":0},"end":{"line":18,"column":3}}},"branchMap":{},"code":["Prism.languages.dart = Prism.languages.extend('clike', {","\t'string': [","\t\t/r?(\"\"\"|''')[\\s\\S]*?\\1/,","\t\t/r?(\"|')(\\\\?.)*?\\1/","\t],","\t'keyword': [","\t\t/\\b(?:async|sync|yield)\\*/,","\t\t/\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|default|deferred|do|dynamic|else|enum|export|external|extends|factory|final|finally|for|get|if|implements|import|in|library|new|null|operator|part|rethrow|return|set|static|super|switch|this|throw|try|typedef|var|void|while|with|yield)\\b/","\t],","\t'operator': /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/","});","","Prism.languages.insertBefore('dart','function',{","\t'metadata': {","\t\tpattern: /@\\w+/,","\t\talias: 'symbol'","\t}","});"],"l":{"1":2,"13":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-diff.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-diff.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":20,"column":2}}},"branchMap":{},"code":["Prism.languages.diff = {","\t'coord': [","\t\t// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").","\t\t/^(?:\\*{3}|-{3}|\\+{3}).*$/m,","\t\t// Match \"@@ ... @@\" coord lines in unified diff.","\t\t/^@@.*@@$/m,","\t\t// Match coord lines in normal diff (starts with a number).","\t\t/^\\d+.*$/m","\t],","","\t// Match inserted and deleted lines. Support both +/- and >/< styles.","\t'deleted': /^[-<].*$/m,","\t'inserted': /^[+>].*$/m,","","\t// Match \"different\" lines (prefixed with \"!\") in context diff.","\t'diff': {","\t\t'pattern': /^!(?!!).+$/m,","\t\t'alias': 'important'","\t}","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-d.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-d.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":32,"column":3}},"2":{"start":{"line":35,"column":0},"end":{"line":44,"column":36}},"3":{"start":{"line":46,"column":0},"end":{"line":52,"column":3}},"4":{"start":{"line":54,"column":0},"end":{"line":56,"column":3}},"5":{"start":{"line":58,"column":0},"end":{"line":64,"column":3}}},"branchMap":{},"code":["Prism.languages.d = Prism.languages.extend('clike', {","\t'string': [","\t\t// r\"\", x\"\"","\t\t/\\b[rx]\"(\\\\.|[^\\\\\"])*\"[cwd]?/,","\t\t// q\"[]\", q\"()\", q\"<>\", q\"{}\"","\t\t/\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/,","\t\t// q\"IDENT","\t\t// ...","\t\t// IDENT\"","\t\t/\\bq\"([_a-zA-Z][_a-zA-Z\\d]*)(?:\\r?\\n|\\r)[\\s\\S]*?(?:\\r?\\n|\\r)\\1\"/,","\t\t// q\"//\", q\"||\", etc.","\t\t/\\bq\"(.)[\\s\\S]*?\\1\"/,","\t\t// Characters","\t\t/'(?:\\\\'|\\\\?[^']+)'/,","","\t\t/([\"`])(\\\\.|(?!\\1)[^\\\\])*\\1[cwd]?/","\t],","","\t'number': [","\t\t// The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator","\t\t// Hexadecimal numbers must be handled separately to avoid problems with exponent \"e\"","\t\t/\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]*/i,","\t\t{","\t\t\tpattern: /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]*/i,","\t\t\tlookbehind: true","\t\t}","\t],","","\t// In order: $, keywords and special tokens, globally defined symbols","\t'keyword': /\\$|\\b(?:abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|public|pure|real|ref|return|scope|shared|short|static|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|__(?:(?:FILE|MODULE|LINE|FUNCTION|PRETTY_FUNCTION|DATE|EOF|TIME|TIMESTAMP|VENDOR|VERSION)__|gshared|traits|vector|parameters)|string|wstring|dstring|size_t|ptrdiff_t)\\b/,","\t'operator': /\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/","});","","","Prism.languages.d.comment = [","\t// Shebang","\t/^\\s*#!.+/,","\t// /+ +/","\t{","\t\t// Allow one level of nesting","\t\tpattern: /(^|[^\\\\])\\/\\+(?:\\/\\+[\\w\\W]*?\\+\\/|[\\w\\W])*?\\+\\//,","\t\tlookbehind: true","\t}","].concat(Prism.languages.d.comment);","","Prism.languages.insertBefore('d', 'comment', {","\t'token-string': {","\t\t// Allow one level of nesting","\t\tpattern: /\\bq\\{(?:|\\{[^}]*\\}|[^}])*\\}/,","\t\talias: 'string'","\t}","});","","Prism.languages.insertBefore('d', 'keyword', {","\t'property': /\\B@\\w*/","});","","Prism.languages.insertBefore('d', 'function', {","\t'register': {","\t\t// Iasm registers","\t\tpattern: /\\b(?:[ABCD][LHX]|E[ABCD]X|E?(?:BP|SP|DI|SI)|[ECSDGF]S|CR[0234]|DR[012367]|TR[3-7]|X?MM[0-7]|R[ABCD]X|[BS]PL|R[BS]P|[DS]IL|R[DS]I|R(?:[89]|1[0-5])[BWD]?|XMM(?:[89]|1[0-5])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,","\t\talias: 'variable'","\t}","});"],"l":{"1":2,"35":0,"46":0,"54":0,"58":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-docker.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-docker.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":9,"column":2}}},"branchMap":{},"code":["Prism.languages.docker = {","\t'keyword': {","\t\tpattern: /(^\\s*)(?:ONBUILD|FROM|MAINTAINER|RUN|EXPOSE|ENV|ADD|COPY|VOLUME|USER|WORKDIR|CMD|LABEL|ENTRYPOINT)(?=\\s)/mi,","\t\tlookbehind: true","\t},","\t'string': /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*?\\1/,","\t'comment': /#.*/,","\t'punctuation': /---|\\.\\.\\.|[:[\\]{}\\-,|>?]/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-eiffel.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-eiffel.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":24,"column":2}}},"branchMap":{},"code":["Prism.languages.eiffel = {","\t'string': [","\t\t// Aligned-verbatim-strings","\t\t/\"([^[]*)\\[[\\s\\S]+?\\]\\1\"/,","\t\t// Non-aligned-verbatim-strings","\t\t/\"([^{]*)\\{[\\s\\S]+?\\}\\1\"/,","\t\t// Single-line string","\t\t/\"(?:%\\s+%|%\"|.)*?\"/","\t],","\t// (comments including quoted strings not supported)","\t'comment': /--.*/,","\t// normal char | special char | char code","\t'char': /'(?:%'|.)+?'/,","\t'keyword': /\\b(?:across|agent|alias|all|and|attached|as|assign|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,","\t'boolean': /\\b(?:True|False)\\b/i,","\t'number': [","\t\t// hexa | octal | bin","\t\t/\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i,","\t\t// Decimal","\t\t/(?:\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?[eE][+-]?)?\\d(?:_*\\d)*|\\d(?:_*\\d)*\\.?/","\t],","\t'punctuation': /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,","\t'operator': /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-elixir.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-elixir.js","s":{"1":1,"2":1,"3":3},"b":{},"f":{"1":3},"fnMap":{"1":{"name":"(anonymous_1)","line":76,"loc":{"start":{"line":76,"column":38},"end":{"line":76,"column":50}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":74,"column":2}},"2":{"start":{"line":76,"column":0},"end":{"line":89,"column":3}},"3":{"start":{"line":77,"column":1},"end":{"line":88,"column":3}}},"branchMap":{},"code":["Prism.languages.elixir = {","\t// Negative look-ahead is needed for string interpolation","\t// Negative look-behind is needed to avoid highlighting markdown headers in","\t// multi-line doc strings","\t'comment': {","\t\tpattern: /(^|[^#])#(?![{#]).*/m,","\t\tlookbehind: true","\t},","\t// ~r\"\"\"foo\"\"\", ~r'''foo''', ~r/foo/, ~r|foo|, ~r\"foo\", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>","\t'regex': /~[rR](?:(\"\"\"|'''|[\\/|\"'])(?:\\\\.|(?!\\1)[^\\\\])+\\1|\\((?:\\\\\\)|[^)])+\\)|\\[(?:\\\\\\]|[^\\]])+\\]|\\{(?:\\\\\\}|[^}])+\\}|<(?:\\\\>|[^>])+>)[uismxfr]*/,","\t'string': [","\t\t{","\t\t\t// ~s\"\"\"foo\"\"\", ~s'''foo''', ~s/foo/, ~s|foo|, ~s\"foo\", ~s'foo', ~s(foo), ~s[foo], ~s{foo}, ~s<foo>","\t\t\tpattern: /~[cCsSwW](?:(\"\"\"|'''|[\\/|\"'])(?:\\\\.|(?!\\1)[^\\\\])+\\1|\\((?:\\\\\\)|[^)])+\\)|\\[(?:\\\\\\]|[^\\]])+\\]|\\{(?:\\\\\\}|#\\{[^}]+\\}|[^}])+\\}|<(?:\\\\>|[^>])+>)[csa]?/,","\t\t\tinside: {","\t\t\t\t// See interpolation below","\t\t\t}","\t\t},","\t\t{","\t\t\tpattern: /(\"\"\"|''')[\\s\\S]*?\\1/,","\t\t\tinside: {","\t\t\t\t// See interpolation below","\t\t\t}","\t\t},","\t\t{","\t\t\t// Multi-line strings are allowed","\t\t\tpattern: /(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,","\t\t\tinside: {","\t\t\t\t// See interpolation below","\t\t\t}","\t\t}","\t],","\t'atom': {","\t\t// Look-behind prevents bad highlighting of the :: operator","\t\tpattern: /(^|[^:]):\\w+/,","\t\tlookbehind: true,","\t\talias: 'symbol'","\t},","\t// Look-ahead prevents bad highlighting of the :: operator","\t'attr-name': /\\w+:(?!:)/,","\t'capture': {","\t\t// Look-behind prevents bad highlighting of the && operator","\t\tpattern: /(^|[^&])&(?:[^&\\s\\d()][^\\s()]*|(?=\\())/,","\t\tlookbehind: true,","\t\talias: 'function'","\t},","\t'argument': {","\t\t// Look-behind prevents bad highlighting of the && operator","\t\tpattern: /(^|[^&])&\\d+/,","\t\tlookbehind: true,","\t\talias: 'variable'","\t},","\t'attribute': {","\t\tpattern: /@[\\S]+/,","\t\talias: 'variable'","\t},","\t'number': /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,","\t'keyword': /\\b(?:after|alias|and|case|catch|cond|def(?:callback|exception|impl|module|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|require|rescue|try|unless|use|when)\\b/,","\t'boolean': /\\b(?:true|false|nil)\\b/,","\t'operator': [","\t\t/\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/,","\t\t{","\t\t\t// We don't want to match <<","\t\t\tpattern: /([^<])<(?!<)/,","\t\t\tlookbehind: true","\t\t},","\t\t{","\t\t\t// We don't want to match >>","\t\t\tpattern: /([^>])>(?!>)/,","\t\t\tlookbehind: true","\t\t}","\t],","\t'punctuation': /<<|>>|[.,%\\[\\]{}()]/","};","","Prism.languages.elixir.string.forEach(function(o) {","\to.inside = {","\t\t'interpolation': {","\t\t\tpattern: /#\\{[^}]+\\}/,","\t\t\tinside: {","\t\t\t\t'delimiter': {","\t\t\t\t\tpattern: /^#\\{|\\}$/,","\t\t\t\t\talias: 'punctuation'","\t\t\t\t},","\t\t\t\trest: Prism.util.clone(Prism.languages.elixir)","\t\t\t}","\t\t}","\t};","});","",""],"l":{"1":1,"76":1,"77":3}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-erlang.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-erlang.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":41,"column":2}}},"branchMap":{},"code":["Prism.languages.erlang = {","\t'comment': /%.+/,","\t'string': /\"(?:\\\\?.)*?\"/,","\t'quoted-function': {","\t\tpattern: /'(?:\\\\.|[^'\\\\])+'(?=\\()/,","\t\talias: 'function'","\t},","\t'quoted-atom': {","\t\tpattern: /'(?:\\\\.|[^'\\\\])+'/,","\t\talias: 'atom'","\t},","\t'boolean': /\\b(?:true|false)\\b/,","\t'keyword': /\\b(?:fun|when|case|of|end|if|receive|after|try|catch)\\b/,","\t'number': [","\t\t/\\$\\\\?./,","\t\t/\\d+#[a-z0-9]+/i,","\t\t/(?:\\b|-)\\d*\\.?\\d+([Ee][+-]?\\d+)?\\b/","\t],","\t'function': /\\b[a-z][\\w@]*(?=\\()/,","\t'variable': {","\t\t// Look-behind is used to prevent wrong highlighting of atoms containing \"@\"","\t\tpattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,","\t\tlookbehind: true","\t},","\t'operator': [","\t\t/[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:bnot|div|rem|band|bor|bxor|bsl|bsr|not|and|or|xor|orelse|andalso)\\b/,","\t\t{","\t\t\t// We don't want to match <<","\t\t\tpattern: /(^|[^<])<(?!<)/,","\t\t\tlookbehind: true","\t\t},","\t\t{","\t\t\t// We don't want to match >>","\t\t\tpattern: /(^|[^>])>(?!>)/,","\t\t\tlookbehind: true","\t\t}","\t],","\t'atom': /\\b[a-z][\\w@]*/,","\t'punctuation': /[()[\\]{}:;,.#|]|<<|>>/","","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-fortran.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-fortran.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":37,"column":2}}},"branchMap":{},"code":["Prism.languages.fortran = {","\t'quoted-number': {","\t\tpattern: /[BOZ](['\"])[A-F0-9]+\\1/i,","\t\talias: 'number'","\t},","\t'string': {","\t\tpattern: /(?:\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:\\s*!.+(?:\\r\\n?|\\n))?|(?!\\1).)*(?:\\1|&)/,","\t\tinside: {","\t\t\t'comment': {","\t\t\t\tpattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,","\t\t\t\tlookbehind: true","\t\t\t}","\t\t}","\t},","\t'comment': /!.*/,","\t'boolean': /\\.(?:TRUE|FALSE)\\.(?:_\\w+)?/i,","\t'number': /(?:\\b|[+-])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,","\t'keyword': [","\t\t// Types","\t\t/\\b(?:INTEGER|REAL|DOUBLE ?PRECISION|COMPLEX|CHARACTER|LOGICAL)\\b/i,","\t\t// END statements","\t\t/\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i,","\t\t// Statements","\t\t/\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i,","\t\t// Others","\t\t/\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEWHERE|ELSEIF|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i","\t],","\t'operator': [","\t\t/\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.(?:EQ|NE|LT|LE|GT|GE|NOT|AND|OR|EQV|NEQV)\\.|\\.[A-Z]+\\./i,","\t\t{","\t\t\t// Use lookbehind to prevent confusion with (/ /)","\t\t\tpattern: /(^|(?!\\().)\\/(?!\\))/,","\t\t\tlookbehind: true","\t\t}","\t],","\t'punctuation': /\\(\\/|\\/\\)|[(),;:&]/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-fsharp.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-fsharp.js","s":{"1":2,"2":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":20,"column":3}},"2":{"start":{"line":21,"column":0},"end":{"line":33,"column":3}}},"branchMap":{},"code":["Prism.languages.fsharp = Prism.languages.extend('clike', {","\t'comment': [","\t\t{","\t\t\tpattern: /(^|[^\\\\])\\(\\*[\\w\\W]*?\\*\\)/,","\t\t\tlookbehind: true","\t\t},","\t\t{","\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,","\t\t\tlookbehind: true","\t\t}","\t],","\t'keyword': /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(abstract|and|as|assert|base|begin|class|default|delegate|do|done|downcast|downto|elif|else|end|exception|extern|false|finally|for|fun|function|global|if|in|inherit|inline|interface|internal|lazy|match|member|module|mutable|namespace|new|not|null|of|open|or|override|private|public|rec|select|static|struct|then|to|true|try|type|upcast|val|void|when|while|with|asr|land|lor|lsl|lsr|lxor|mod|sig|atomic|break|checked|component|const|constraint|constructor|continue|eager|event|external|fixed|functor|include|method|mixin|object|parallel|process|protected|pure|sealed|tailcall|trait|virtual|volatile)\\b/,","\t'string': /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|(\"|')(?:\\\\\\1|\\\\?(?!\\1)[\\s\\S])*\\1)B?/,","\t'number': [","\t\t/\\b-?0x[\\da-fA-F]+(un|lf|LF)?\\b/,","\t\t/\\b-?0b[01]+(y|uy)?\\b/,","\t\t/\\b-?(\\d*\\.?\\d+|\\d+\\.)([fFmM]|[eE][+-]?\\d+)?\\b/,","\t\t/\\b-?\\d+(y|uy|s|us|l|u|ul|L|UL|I)?\\b/","\t]","});","Prism.languages.insertBefore('fsharp', 'keyword', {","\t'preprocessor': {","\t\tpattern: /^[^\\r\\n\\S]*#.*/m,","\t\talias: 'property',","\t\tinside: {","\t\t\t'directive': {","\t\t\t\tpattern: /(\\s*#)\\b(else|endif|if|light|line|nowarn)\\b/,","\t\t\t\tlookbehind: true,","\t\t\t\talias: 'keyword'","\t\t\t}","\t\t}","\t}","});",""],"l":{"1":2,"21":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-gherkin.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-gherkin.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":78,"column":2}}},"branchMap":{},"code":["Prism.languages.gherkin = {","\t'pystring': {","\t\tpattern: /(\"\"\"|''')[\\s\\S]+?\\1/,","\t\talias: 'string'","\t},","\t'comment': {","\t\tpattern: /((^|\\r?\\n|\\r)[ \\t]*)#.*/,","\t\tlookbehind: true","\t},","\t'tag': {","\t\tpattern: /((^|\\r?\\n|\\r)[ \\t]*)@\\S*/,","\t\tlookbehind: true","\t},","\t'feature': {","\t\tpattern: /((^|\\r?\\n|\\r)[ \\t]*)(Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Característica|Egenskab|Egenskap|Eiginleiki|Feature|Fīča|Fitur|Fonctionnalité|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Funcţionalitate|Funcționalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalitāte|Funkcionalnost|Funkcja|Funksie|Funktionalität|Funktionalitéit|Funzionalità|Hwaet|Hwæt|Jellemző|Karakteristik|laH|Lastnost|Mak|Mogucnost|Mogućnost|Moznosti|Možnosti|OH HAI|Omadus|Ominaisuus|Osobina|Özellik|perbogh|poQbogh malja'|Potrzeba biznesowa|Požadavek|Požiadavka|Pretty much|Qap|Qu'meH 'ut|Savybė|Tính năng|Trajto|Vermoë|Vlastnosť|Właściwość|Značilnost|Δυνατότητα|Λειτουργία|Могућност|Мөмкинлек|Особина|Свойство|Үзенчәлеклелек|Функционал|Функционалност|Функция|Функціонал|תכונה|خاصية|خصوصیت|صلاحیت|کاروبار کی ضرورت|وِیژگی|रूप लेख|ਖਾਸੀਅਤ|ਨਕਸ਼ ਨੁਹਾਰ|ਮੁਹਾਂਦਰਾ|గుణము|ಹೆಚ್ಚಳ|ความต้องการทางธุรกิจ|ความสามารถ|โครงหลัก|기능|フィーチャ|功能|機能):([^:]+(?:\\r?\\n|\\r|$))*/,","\t\tlookbehind: true,","\t\tinside: {","\t\t\t'important': {","\t\t\t\tpattern: /(:)[^\\r\\n]+/,","\t\t\t\tlookbehind: true","\t\t\t},","\t\t\tkeyword: /[^:\\r\\n]+:/","\t\t}","\t},","\t'scenario': {","\t\tpattern: /((^|\\r?\\n|\\r)[ \\t]*)(Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|Ær|Agtergrond|All y'all|Antecedentes|Antecedents|Atburðarás|Atburðarásir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|Bối cảnh|Cefndir|Cenario|Cenário|Cenario de Fundo|Cenário de Fundo|Cenarios|Cenários|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|Dæmi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delineação do Cenário|Dis is what went down|Dữ liệu|Dyagram senaryo|Dyagram Senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cenário|Examples|EXAMPLZ|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgatókönyv|Forgatókönyv vázlat|Fundo|Geçmiş|ghantoH|Grundlage|Hannergrond|Háttér|Heave to|Istorik|Juhtumid|Keadaan|Khung kịch bản|Khung tình huống|Kịch bản|Koncept|Konsep skenario|Kontèks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut|lut chovnatlh|lutmey|Lýsing Atburðarásar|Lýsing Dæma|Menggariskan Senario|MISHUN|MISHUN SRSLY|mo'|Náčrt Scenára|Náčrt Scénáře|Náčrt Scenáru|Oris scenarija|Örnekler|Osnova|Osnova Scenára|Osnova scénáře|Osnutek|Ozadje|Paraugs|Pavyzdžiai|Példák|Piemēri|Plan du scénario|Plan du Scénario|Plan senaryo|Plan Senaryo|Plang vum Szenario|Pozadí|Pozadie|Pozadina|Príklady|Příklady|Primer|Primeri|Primjeri|Przykłady|Raamstsenaarium|Reckon it's like|Rerefons|Scenár|Scénář|Scenarie|Scenarij|Scenarijai|Scenarijaus šablonas|Scenariji|Scenārijs|Scenārijs pēc parauga|Scenarijus|Scenario|Scénario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ðe|Se the|Se þe|Senario|Senaryo|Senaryo deskripsyon|Senaryo Deskripsyon|Senaryo taslağı|Shiver me timbers|Situācija|Situai|Situasie|Situasie Uiteensetting|Skenario|Skenario konsep|Skica|Structura scenariu|Structură scenariu|Struktura scenarija|Stsenaarium|Swa|Swa hwaer swa|Swa hwær swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|Tình huống|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo\\-ho\\-ho|You'll wanna|Założenia|Παραδείγματα|Περιγραφή Σεναρίου|Σενάρια|Σενάριο|Υπόβαθρο|Кереш|Контекст|Концепт|Мисаллар|Мисоллар|Основа|Передумова|Позадина|Предистория|Предыстория|Приклади|Пример|Примери|Примеры|Рамка на сценарий|Скица|Структура сценарија|Структура сценария|Структура сценарію|Сценарий|Сценарий структураси|Сценарийның төзелеше|Сценарији|Сценарио|Сценарій|Тарих|Үрнәкләр|דוגמאות|רקע|תבנית תרחיש|תרחיש|الخلفية|الگوی سناریو|امثلة|پس منظر|زمینه|سناریو|سيناريو|سيناريو مخطط|مثالیں|منظر نامے کا خاکہ|منظرنامہ|نمونه ها|उदाहरण|परिदृश्य|परिदृश्य रूपरेखा|पृष्ठभूमि|ਉਦਾਹਰਨਾਂ|ਪਟਕਥਾ|ਪਟਕਥਾ ਢਾਂਚਾ|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਿਛੋਕੜ|ఉదాహరణలు|కథనం|నేపథ్యం|సన్నివేశం|ಉದಾಹರಣೆಗಳು|ಕಥಾಸಾರಾಂಶ|ವಿವರಣೆ|ಹಿನ್ನೆಲೆ|โครงสร้างของเหตุการณ์|ชุดของตัวอย่าง|ชุดของเหตุการณ์|แนวคิด|สรุปเหตุการณ์|เหตุการณ์|배경|시나리오|시나리오 개요|예|サンプル|シナリオ|シナリオアウトライン|シナリオテンプレ|シナリオテンプレート|テンプレ|例|例子|剧本|剧本大纲|劇本|劇本大綱|场景|场景大纲|場景|場景大綱|背景):[^:\\r\\n]*/,","\t\tlookbehind: true,","\t\tinside: {","\t\t\t'important': {","\t\t\t\tpattern: /(:)[^\\r\\n]*/,","\t\t\t\tlookbehind: true","\t\t\t},","\t\t\tkeyword: /[^:\\r\\n]+:/","\t\t}","\t},","\t'table-body': {","\t\tpattern: /((?:\\r?\\n|\\r)[ \\t]*\\|.+\\|[^\\r\\n]*)+/,","\t\tlookbehind: true,","\t\tinside: {","\t\t\t'outline': {","\t\t\t\tpattern: /<[^>]+?>/,","\t\t\t\talias: 'variable'","\t\t\t},","\t\t\t'td': {","\t\t\t\tpattern: /\\s*[^\\s|][^|]*/,","\t\t\t\talias: 'string'","\t\t\t},","\t\t\t'punctuation': /\\|/","\t\t}","\t},","\t'table-head': {","\t\tpattern: /((?:\\r?\\n|\\r)[ \\t]*\\|.+\\|[^\\r\\n]*)/,","\t\tinside: {","\t\t\t'th': {","\t\t\t\tpattern: /\\s*[^\\s|][^|]*/,","\t\t\t\talias: 'variable'","\t\t\t},","\t\t\t'punctuation': /\\|/","\t\t}","\t},","\t'atrule': {","\t\tpattern: /((?:\\r?\\n|\\r)[ \\t]+)('ach|'a|'ej|7|a|A také|A taktiež|A tiež|A zároveň|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|Atès|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Biết|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|Când|Cando|Cand|Ce|Cuando|Če|Ða ðe|Ða|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Daţi fiind|Dați fiind|Dato|DEN|Den youse gotta|Dengan|De|Diberi|Diyelim ki|Donada|Donat|Donitaĵo|Do|Dun|Duota|Ðurh|Eeldades|Ef|Eğer ki|Entao|Então|Entón|Entonces|En|Epi|E|És|Etant donnée|Etant donné|Et|Étant données|Étant donnée|Étant donné|Etant données|Etant donnés|Étant donnés|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Jeśli|Jeżeli|Kadar|Kada|Kad|Kai|Kaj|Když|Keď|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|Lè sa a|Lè|Logo|Lorsqu'<|Lorsque|mä|Maar|Mais|Mając|Majd|Maka|Manawa|Mas|Ma|Menawa|Men|Mutta|Nalikaning|Nalika|Nanging|Når|När|Nato|Nhưng|Niin|Njuk|O zaman|Og|Och|Oletetaan|Onda|Ond|Oraz|Pak|Pero|Però|Podano|Pokiaľ|Pokud|Potem|Potom|Privzeto|Pryd|qaSDI'|Quando|Quand|Quan|Så|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|Şi|Și|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Thì|Thurh|Toda|Too right|ugeholl|Und|Un|Và|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za předpokladu|Zadani|Zadano|Zadan|Zadate|Zadato|Zakładając|Zaradi|Zatati|Þa þe|Þa|Þá|Þegar|Þurh|Αλλά|Δεδομένου|Και|Όταν|Τότε|А також|Агар|Але|Али|Аммо|А|Әгәр|Әйтик|Әмма|Бирок|Ва|Вә|Дадено|Дано|Допустим|Если|Задате|Задати|Задато|И|І|К тому же|Када|Кад|Когато|Когда|Коли|Ләкин|Лекин|Нәтиҗәдә|Нехай|Но|Онда|Припустимо, що|Припустимо|Пусть|Также|Та|Тогда|Тоді|То|Унда|Һәм|Якщо|אבל|אזי|אז|בהינתן|וגם|כאשר|آنگاه|اذاً|اگر|اما|اور|با فرض|بالفرض|بفرض|پھر|تب|ثم|جب|عندما|فرض کیا|لكن|لیکن|متى|هنگامی|و|अगर|और|कदा|किन्तु|चूंकि|जब|तथा|तदा|तब|परन्तु|पर|यदि|ਅਤੇ|ਜਦੋਂ|ਜਿਵੇਂ ਕਿ|ਜੇਕਰ|ਤਦ|ਪਰ|అప్పుడు|ఈ పరిస్థితిలో|కాని|చెప్పబడినది|మరియు|ಆದರೆ|ನಂತರ|ನೀಡಿದ|ಮತ್ತು|ಸ್ಥಿತಿಯನ್ನು|กำหนดให้|ดังนั้น|แต่|เมื่อ|และ|그러면<|그리고<|단<|만약<|만일<|먼저<|조건<|하지만<|かつ<|しかし<|ただし<|ならば<|もし<|並且<|但し<|但是<|假如<|假定<|假設<|假设<|前提<|同时<|同時<|并且<|当<|當<|而且<|那么<|那麼<)(?=[ \\t]+)/,","\t\tlookbehind: true","\t},","\t'string': {","\t\tpattern: /(\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*')/,","\t\tinside: {","\t\t\t'outline': {","\t\t\t\tpattern: /<[^>]+?>/,","\t\t\t\talias: 'variable'","\t\t\t}","\t\t}","\t},","\t'outline': {","\t\tpattern: /<[^>]+?>/,","\t\talias: 'variable'","\t}","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-git.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-git.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":68,"column":2}}},"branchMap":{},"code":["Prism.languages.git = {","\t/*","\t * A simple one line comment like in a git status command","\t * For instance:","\t * $ git status","\t * # On branch infinite-scroll","\t * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,","\t * # and have 1 and 2 different commits each, respectively.","\t * nothing to commit (working directory clean)","\t */","\t'comment': /^#.*/m,","","\t/*","\t * Regexp to match the changed lines in a git diff output. Check the example below.","\t */","\t'deleted': /^[-–].*/m,","\t'inserted': /^\\+.*/m,","","\t/*","\t * a string (double and simple quote)","\t */","\t'string': /(\"|')(\\\\?.)*?\\1/m,","","\t/*","\t * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters","\t * For instance:","\t * $ git add file.txt","\t */","\t'command': {","\t\tpattern: /^.*\\$ git .*$/m,","\t\tinside: {","\t\t\t/*","\t\t\t * A git command can contain a parameter starting by a single or a double dash followed by a string","\t\t\t * For instance:","\t\t\t * $ git diff --cached","\t\t\t * $ git log -p","\t\t\t */","\t\t\t'parameter': /\\s(--|-)\\w+/m","\t\t}","\t},","","\t/*","\t * Coordinates displayed in a git diff command","\t * For instance:","\t * $ git diff","\t * diff --git file.txt file.txt","\t * index 6214953..1d54a52 100644","\t * --- file.txt","\t * +++ file.txt","\t * @@ -1 +1,2 @@","\t * -Here's my tetx file","\t * +Here's my text file","\t * +And this is the second line","\t */","\t'coord': /^@@.*@@$/m,","","\t/*","\t * Match a \"commit [SHA1]\" line in a git log output.","\t * For instance:","\t * $ git log","\t * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09","\t * Author: lgiraudel","\t * Date:   Mon Feb 17 11:18:34 2014 +0100","\t *","\t *     Add of a new line","\t */","\t'commit_sha1': /^commit \\w{40}$/m","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-glsl.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-glsl.js","s":{"1":2,"2":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":8,"column":3}},"2":{"start":{"line":10,"column":0},"end":{"line":16,"column":3}}},"branchMap":{},"code":["Prism.languages.glsl = Prism.languages.extend('clike', {","\t'comment': [","\t\t/\\/\\*[\\w\\W]*?\\*\\//,","\t\t/\\/\\/(?:\\\\(?:\\r\\n|[\\s\\S])|.)*/","\t],","\t'number': /\\b(?:0x[\\da-f]+|(?:\\.\\d+|\\d+\\.?\\d*)(?:e[+-]?\\d+)?)[ulf]*\\b/i,","\t'keyword': /\\b(?:attribute|const|uniform|varying|buffer|shared|coherent|volatile|restrict|readonly|writeonly|atomic_uint|layout|centroid|flat|smooth|noperspective|patch|sample|break|continue|do|for|while|switch|case|default|if|else|subroutine|in|out|inout|float|double|int|void|bool|true|false|invariant|precise|discard|return|d?mat[234](?:x[234])?|[ibdu]?vec[234]|uint|lowp|mediump|highp|precision|[iu]?sampler[123]D|[iu]?samplerCube|sampler[12]DShadow|samplerCubeShadow|[iu]?sampler[12]DArray|sampler[12]DArrayShadow|[iu]?sampler2DRect|sampler2DRectShadow|[iu]?samplerBuffer|[iu]?sampler2DMS(?:Array)?|[iu]?samplerCubeArray|samplerCubeArrayShadow|[iu]?image[123]D|[iu]?image2DRect|[iu]?imageCube|[iu]?imageBuffer|[iu]?image[12]DArray|[iu]?imageCubeArray|[iu]?image2DMS(?:Array)?|struct|common|partition|active|asm|class|union|enum|typedef|template|this|resource|goto|inline|noinline|public|static|extern|external|interface|long|short|half|fixed|unsigned|superp|input|output|hvec[234]|fvec[234]|sampler3DRect|filter|sizeof|cast|namespace|using)\\b/","});","","Prism.languages.insertBefore('glsl', 'comment', {","\t'preprocessor': {","\t\tpattern: /(^[ \\t]*)#(?:(?:define|undef|if|ifdef|ifndef|else|elif|endif|error|pragma|extension|version|line)\\b)?/m,","\t\tlookbehind: true,","\t\talias: 'builtin'","\t}","});"],"l":{"1":2,"10":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-go.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-go.js","s":{"1":2,"2":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":8,"column":3}},"2":{"start":{"line":9,"column":0},"end":{"line":9,"column":40}}},"branchMap":{},"code":["Prism.languages.go = Prism.languages.extend('clike', {","\t'keyword': /\\b(break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,","\t'builtin': /\\b(bool|byte|complex(64|128)|error|float(32|64)|rune|string|u?int(8|16|32|64|)|uintptr|append|cap|close|complex|copy|delete|imag|len|make|new|panic|print(ln)?|real|recover)\\b/,","\t'boolean': /\\b(_|iota|nil|true|false)\\b/,","\t'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,","\t'number': /\\b(-?(0x[a-f\\d]+|(\\d+\\.?\\d*|\\.\\d+)(e[-+]?\\d+)?)i?)\\b/i,","\t'string': /(\"|'|`)(\\\\?.|\\r|\\n)*?\\1/","});","delete Prism.languages.go['class-name'];",""],"l":{"1":2,"9":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-graphql.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-graphql.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":24,"column":2}}},"branchMap":{},"code":["Prism.languages.graphql = {","\t'comment': /#.*/,","\t'string': {","\t\tpattern: /\"(?:\\\\.|[^\\\\\"])*\"/,","\t\tgreedy: true","\t},","\t'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b/,","\t'boolean': /\\b(?:true|false)\\b/,","\t'variable': /\\$[a-z_]\\w*/i,","\t'directive': {","\t\tpattern: /@[a-z_]\\w*/i,","\t\talias: 'function'","\t},","\t'attr-name': /[a-z_]\\w*(?=\\s*:)/i,","\t'keyword': [","\t\t{","\t\t\tpattern: /(fragment\\s+(?!on)[a-z_]\\w*\\s+|\\.\\.\\.\\s*)on\\b/,","\t\t\tlookbehind: true","\t\t},","\t\t/\\b(?:query|fragment|mutation)\\b/","\t],","\t'operator': /!|=|\\.{3}/,","\t'punctuation': /[!(){}\\[\\]:=,]/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-groovy.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-groovy.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":41,"loc":{"start":{"line":41,"column":24},"end":{"line":41,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":19,"column":3}},"2":{"start":{"line":21,"column":0},"end":{"line":26,"column":3}},"3":{"start":{"line":28,"column":0},"end":{"line":30,"column":3}},"4":{"start":{"line":32,"column":0},"end":{"line":38,"column":3}},"5":{"start":{"line":41,"column":0},"end":{"line":65,"column":3}},"6":{"start":{"line":42,"column":1},"end":{"line":64,"column":2}},"7":{"start":{"line":43,"column":2},"end":{"line":43,"column":33}},"8":{"start":{"line":45,"column":2},"end":{"line":63,"column":3}},"9":{"start":{"line":46,"column":3},"end":{"line":46,"column":48}},"10":{"start":{"line":47,"column":3},"end":{"line":49,"column":4}},"11":{"start":{"line":48,"column":4},"end":{"line":48,"column":45}},"12":{"start":{"line":52,"column":3},"end":{"line":52,"column":74}},"13":{"start":{"line":54,"column":3},"end":{"line":60,"column":6}},"14":{"start":{"line":62,"column":3},"end":{"line":62,"column":61}}},"branchMap":{"1":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},{"start":{"line":42,"column":1},"end":{"line":42,"column":1}}]},"2":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":5},"end":{"line":42,"column":30}},{"start":{"line":42,"column":34},"end":{"line":42,"column":55}}]},"3":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"4":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":3},"end":{"line":47,"column":3}},{"start":{"line":47,"column":3},"end":{"line":47,"column":3}}]},"5":{"line":62,"type":"cond-expr","locations":[{"start":{"line":62,"column":40},"end":{"line":62,"column":47}},{"start":{"line":62,"column":50},"end":{"line":62,"column":59}}]}},"code":["Prism.languages.groovy = Prism.languages.extend('clike', {","\t'keyword': /\\b(as|def|in|abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,","\t'string': [","\t\t{","\t\t\tpattern: /(\"\"\"|''')[\\W\\w]*?\\1|(\\$\\/)(\\$\\/\\$|[\\W\\w])*?\\/\\$/,","\t\t\tgreedy: true","\t\t},","\t\t{","\t\t\tpattern: /(\"|'|\\/)(?:\\\\?.)*?\\1/,","\t\t\tgreedy: true","\t\t}","\t],","\t'number': /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?[\\d]+)?)[glidf]?\\b/i,","\t'operator': {","\t\tpattern: /(^|[^.])(~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.{1,2}(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,","\t\tlookbehind: true","\t},","\t'punctuation': /\\.+|[{}[\\];(),:$]/","});","","Prism.languages.insertBefore('groovy', 'string', {","\t'shebang': {","\t\tpattern: /#!.+/,","\t\talias: 'comment'","\t}","});","","Prism.languages.insertBefore('groovy', 'punctuation', {","\t'spock-block': /\\b(setup|given|when|then|and|cleanup|expect|where):/","});","","Prism.languages.insertBefore('groovy', 'function', {","\t'annotation': {","\t\talias: 'punctuation',","\t\tpattern: /(^|[^.])@\\w+/,","\t\tlookbehind: true","\t}","});","","// Handle string interpolation","Prism.hooks.add('wrap', function(env) {","\tif (env.language === 'groovy' && env.type === 'string') {","\t\tvar delimiter = env.content[0];","","\t\tif (delimiter != \"'\") {","\t\t\tvar pattern = /([^\\\\])(\\$(\\{.*?\\}|[\\w\\.]+))/;","\t\t\tif (delimiter === '$') {","\t\t\t\tpattern = /([^\\$])(\\$(\\{.*?\\}|[\\w\\.]+))/;","\t\t\t}","","\t\t\t// To prevent double HTML-encoding we have to decode env.content first","\t\t\tenv.content = env.content.replace(/&lt;/g, '<').replace(/&amp;/g, '&');","","\t\t\tenv.content = Prism.highlight(env.content, {","\t\t\t\t'expression': {","\t\t\t\t\tpattern: pattern,","\t\t\t\t\tlookbehind: true,","\t\t\t\t\tinside: Prism.languages.groovy","\t\t\t\t}","\t\t\t});","","\t\t\tenv.classes.push(delimiter === '/' ? 'regex' : 'gstring');","\t\t}","\t}","});",""],"l":{"1":2,"21":0,"28":0,"32":0,"41":0,"42":0,"43":0,"45":0,"46":0,"47":0,"48":0,"52":0,"54":0,"62":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-haml.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-haml.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":9,"8":9,"9":9,"10":1,"11":1},"b":{"1":[8,1],"2":[1,8]},"f":{"1":1},"fnMap":{"1":{"name":"(anonymous_1)","line":8,"loc":{"start":{"line":8,"column":1},"end":{"line":8,"column":17}}}},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":154,"column":10}},"2":{"start":{"line":10,"column":1},"end":{"line":117,"column":3}},"3":{"start":{"line":119,"column":1},"end":{"line":119,"column":124}},"4":{"start":{"line":122,"column":1},"end":{"line":132,"column":3}},"5":{"start":{"line":133,"column":1},"end":{"line":133,"column":22}},"6":{"start":{"line":134,"column":1},"end":{"line":150,"column":2}},"7":{"start":{"line":135,"column":2},"end":{"line":135,"column":26}},"8":{"start":{"line":136,"column":2},"end":{"line":136,"column":84}},"9":{"start":{"line":137,"column":2},"end":{"line":149,"column":3}},"10":{"start":{"line":138,"column":3},"end":{"line":148,"column":4}},"11":{"start":{"line":152,"column":1},"end":{"line":152,"column":61}}},"branchMap":{"1":{"line":136,"type":"cond-expr","locations":[{"start":{"line":136,"column":40},"end":{"line":136,"column":74}},{"start":{"line":136,"column":77},"end":{"line":136,"column":83}}]},"2":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":2},"end":{"line":137,"column":2}},{"start":{"line":137,"column":2},"end":{"line":137,"column":2}}]}},"code":["/* TODO","\tHandle multiline code after tag","\t    %foo= some |","\t\t\tmultiline |","\t\t\tcode |","*/","","(function(Prism) {","","\tPrism.languages.haml = {","\t\t// Multiline stuff should appear before the rest","","\t\t'multiline-comment': {","\t\t\tpattern: /((?:^|\\r?\\n|\\r)([\\t ]*))(?:\\/|-#).*((?:\\r?\\n|\\r)\\2[\\t ]+.+)*/,","\t\t\tlookbehind: true,","\t\t\talias: 'comment'","\t\t},","","\t\t'multiline-code': [","\t\t\t{","\t\t\t\tpattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*,[\\t ]*((?:\\r?\\n|\\r)\\2[\\t ]+.*,[\\t ]*)*((?:\\r?\\n|\\r)\\2[\\t ]+.+)/,","\t\t\t\tlookbehind: true,","\t\t\t\tinside: {","\t\t\t\t\trest: Prism.languages.ruby","\t\t\t\t}","\t\t\t},","\t\t\t{","\t\t\t\tpattern: /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*\\|[\\t ]*((?:\\r?\\n|\\r)\\2[\\t ]+.*\\|[\\t ]*)*/,","\t\t\t\tlookbehind: true,","\t\t\t\tinside: {","\t\t\t\t\trest: Prism.languages.ruby","\t\t\t\t}","\t\t\t}","\t\t],","","\t\t// See at the end of the file for known filters","\t\t'filter': {","\t\t\tpattern: /((?:^|\\r?\\n|\\r)([\\t ]*)):[\\w-]+((?:\\r?\\n|\\r)(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/,","\t\t\tlookbehind: true,","\t\t\tinside: {","\t\t\t\t'filter-name': {","\t\t\t\t\tpattern: /^:[\\w-]+/,","\t\t\t\t\talias: 'variable'","\t\t\t\t}","\t\t\t}","\t\t},","","\t\t'markup': {","\t\t\tpattern: /((?:^|\\r?\\n|\\r)[\\t ]*)<.+/,","\t\t\tlookbehind: true,","\t\t\tinside: {","\t\t\t\trest: Prism.languages.markup","\t\t\t}","\t\t},","\t\t'doctype': {","\t\t\tpattern: /((?:^|\\r?\\n|\\r)[\\t ]*)!!!(?: .+)?/,","\t\t\tlookbehind: true","\t\t},","\t\t'tag': {","\t\t\t// Allows for one nested group of braces","\t\t\tpattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[%.#][\\w\\-#.]*[\\w\\-](?:\\([^)]+\\)|\\{(?:\\{[^}]+\\}|[^}])+\\}|\\[[^\\]]+\\])*[\\/<>]*/,","\t\t\tlookbehind: true,","\t\t\tinside: {","\t\t\t\t'attributes': [","\t\t\t\t\t{","\t\t\t\t\t\t// Lookbehind tries to prevent interpolations for breaking it all","\t\t\t\t\t\t// Allows for one nested group of braces","\t\t\t\t\t\tpattern: /(^|[^#])\\{(?:\\{[^}]+\\}|[^}])+\\}/,","\t\t\t\t\t\tlookbehind: true,","\t\t\t\t\t\tinside: {","\t\t\t\t\t\t\trest: Prism.languages.ruby","\t\t\t\t\t\t}","\t\t\t\t\t},","\t\t\t\t\t{","\t\t\t\t\t\tpattern: /\\([^)]+\\)/,","\t\t\t\t\t\tinside: {","\t\t\t\t\t\t\t'attr-value': {","\t\t\t\t\t\t\t\tpattern: /(=\\s*)(?:\"(?:\\\\?.)*?\"|[^)\\s]+)/,","\t\t\t\t\t\t\t\tlookbehind: true","\t\t\t\t\t\t\t},","\t\t\t\t\t\t\t'attr-name': /[\\w:-]+(?=\\s*!?=|\\s*[,)])/,","\t\t\t\t\t\t\t'punctuation': /[=(),]/","\t\t\t\t\t\t}","\t\t\t\t\t},","\t\t\t\t\t{","\t\t\t\t\t\tpattern: /\\[[^\\]]+\\]/,","\t\t\t\t\t\tinside: {","\t\t\t\t\t\t\trest: Prism.languages.ruby","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t],","\t\t\t\t'punctuation': /[<>]/","\t\t\t}","\t\t},","\t\t'code': {","\t\t\tpattern: /((?:^|\\r?\\n|\\r)[\\t ]*(?:[~-]|[&!]?=)).+/,","\t\t\tlookbehind: true,","\t\t\tinside: {","\t\t\t\trest: Prism.languages.ruby","\t\t\t}","\t\t},","\t\t// Interpolations in plain text","\t\t'interpolation': {","\t\t\tpattern: /#\\{[^}]+\\}/,","\t\t\tinside: {","\t\t\t\t'delimiter': {","\t\t\t\t\tpattern: /^#\\{|\\}$/,","\t\t\t\t\talias: 'punctuation'","\t\t\t\t},","\t\t\t\trest: Prism.languages.ruby","\t\t\t}","\t\t},","\t\t'punctuation': {","\t\t\tpattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[~=\\-&!]+/,","\t\t\tlookbehind: true","\t\t}","\t};","","\tvar filter_pattern = '((?:^|\\\\r?\\\\n|\\\\r)([\\\\t ]*)):{{filter_name}}((?:\\\\r?\\\\n|\\\\r)(?:\\\\2[\\\\t ]+.+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+';","","\t// Non exhaustive list of available filters and associated languages","\tvar filters = [","\t\t'css',","\t\t{filter:'coffee',language:'coffeescript'},","\t\t'erb',","\t\t'javascript',","\t\t'less',","\t\t'markdown',","\t\t'ruby',","\t\t'scss',","\t\t'textile'","\t];","\tvar all_filters = {};","\tfor (var i = 0, l = filters.length; i < l; i++) {","\t\tvar filter = filters[i];","\t\tfilter = typeof filter === 'string' ? {filter: filter, language: filter} : filter;","\t\tif (Prism.languages[filter.language]) {","\t\t\tall_filters['filter-' + filter.filter] = {","\t\t\t\tpattern: RegExp(filter_pattern.replace('{{filter_name}}', filter.filter)),","\t\t\t\tlookbehind: true,","\t\t\t\tinside: {","\t\t\t\t\t'filter-name': {","\t\t\t\t\t\tpattern: /^:[\\w-]+/,","\t\t\t\t\t\talias: 'variable'","\t\t\t\t\t},","\t\t\t\t\trest: Prism.languages[filter.language]","\t\t\t\t}","\t\t\t}","\t\t}","\t}","","\tPrism.languages.insertBefore('haml', 'filter', all_filters);","","}(Prism));"],"l":{"8":1,"10":1,"119":1,"122":1,"133":1,"134":1,"135":9,"136":9,"137":9,"138":1,"152":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-handlebars.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-handlebars.js","s":{"1":2,"2":2,"3":2,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":17}}},"2":{"name":"(anonymous_2)","line":45,"loc":{"start":{"line":45,"column":37},"end":{"line":45,"column":51}}},"3":{"name":"(anonymous_3)","line":53,"loc":{"start":{"line":53,"column":50},"end":{"line":53,"column":66}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":34},"end":{"line":61,"column":48}}},"5":{"name":"(anonymous_5)","line":70,"loc":{"start":{"line":70,"column":36},"end":{"line":70,"column":50}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":83,"column":10}},"2":{"start":{"line":3,"column":1},"end":{"line":3,"column":67}},"3":{"start":{"line":5,"column":1},"end":{"line":32,"column":4}},"4":{"start":{"line":36,"column":1},"end":{"line":41,"column":4}},"5":{"start":{"line":45,"column":1},"end":{"line":58,"column":4}},"6":{"start":{"line":46,"column":2},"end":{"line":48,"column":3}},"7":{"start":{"line":47,"column":3},"end":{"line":47,"column":10}},"8":{"start":{"line":50,"column":2},"end":{"line":50,"column":22}},"9":{"start":{"line":52,"column":2},"end":{"line":52,"column":28}},"10":{"start":{"line":53,"column":2},"end":{"line":57,"column":5}},"11":{"start":{"line":54,"column":3},"end":{"line":54,"column":30}},"12":{"start":{"line":56,"column":3},"end":{"line":56,"column":58}},"13":{"start":{"line":61,"column":1},"end":{"line":66,"column":4}},"14":{"start":{"line":62,"column":2},"end":{"line":65,"column":3}},"15":{"start":{"line":63,"column":3},"end":{"line":63,"column":29}},"16":{"start":{"line":64,"column":3},"end":{"line":64,"column":25}},"17":{"start":{"line":70,"column":1},"end":{"line":81,"column":4}},"18":{"start":{"line":71,"column":2},"end":{"line":73,"column":3}},"19":{"start":{"line":72,"column":3},"end":{"line":72,"column":10}},"20":{"start":{"line":75,"column":2},"end":{"line":78,"column":3}},"21":{"start":{"line":77,"column":3},"end":{"line":77,"column":158}},"22":{"start":{"line":80,"column":2},"end":{"line":80,"column":46}}},"branchMap":{"1":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":2},"end":{"line":46,"column":2}},{"start":{"line":46,"column":2},"end":{"line":46,"column":2}}]},"2":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"3":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":2},"end":{"line":71,"column":2}},{"start":{"line":71,"column":2},"end":{"line":71,"column":2}}]}},"code":["(function(Prism) {","","\tvar handlebars_pattern = /\\{\\{\\{[\\w\\W]+?\\}\\}\\}|\\{\\{[\\w\\W]+?\\}\\}/g;","","\tPrism.languages.handlebars = Prism.languages.extend('markup', {","\t\t'handlebars': {","\t\t\tpattern: handlebars_pattern,","\t\t\tinside: {","\t\t\t\t'delimiter': {","\t\t\t\t\tpattern: /^\\{\\{\\{?|\\}\\}\\}?$/i,","\t\t\t\t\talias: 'punctuation'","\t\t\t\t},","\t\t\t\t'string': /([\"'])(\\\\?.)*?\\1/,","\t\t\t\t'number': /\\b-?(0x[\\dA-Fa-f]+|\\d*\\.?\\d+([Ee][+-]?\\d+)?)\\b/,","\t\t\t\t'boolean': /\\b(true|false)\\b/,","\t\t\t\t'block': {","\t\t\t\t\tpattern: /^(\\s*~?\\s*)[#\\/]\\S+?(?=\\s*~?\\s*$|\\s)/i,","\t\t\t\t\tlookbehind: true,","\t\t\t\t\talias: 'keyword'","\t\t\t\t},","\t\t\t\t'brackets': {","\t\t\t\t\tpattern: /\\[[^\\]]+\\]/,","\t\t\t\t\tinside: {","\t\t\t\t\t\tpunctuation: /\\[|\\]/,","\t\t\t\t\t\tvariable: /[\\w\\W]+/","\t\t\t\t\t}","\t\t\t\t},","\t\t\t\t'punctuation': /[!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,","\t\t\t\t'variable': /[^!\"#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/","\t\t\t}","\t\t}","\t});","","\t// Comments are inserted at top so that they can","\t// surround markup","\tPrism.languages.insertBefore('handlebars', 'tag', {","\t\t'handlebars-comment': {","\t\t\tpattern: /\\{\\{![\\w\\W]*?\\}\\}/,","\t\t\talias: ['handlebars','comment']","\t\t}","\t});","","\t// Tokenize all inline Handlebars expressions that are wrapped in {{ }} or {{{ }}}","\t// This allows for easy Handlebars + markup highlighting","\tPrism.hooks.add('before-highlight', function(env) {","\t\tif (env.language !== 'handlebars') {","\t\t\treturn;","\t\t}","","\t\tenv.tokenStack = [];","","\t\tenv.backupCode = env.code;","\t\tenv.code = env.code.replace(handlebars_pattern, function(match) {","\t\t\tenv.tokenStack.push(match);","","\t\t\treturn '___HANDLEBARS' + env.tokenStack.length + '___';","\t\t});","\t});","","\t// Restore env.code for other plugins (e.g. line-numbers)","\tPrism.hooks.add('before-insert', function(env) {","\t\tif (env.language === 'handlebars') {","\t\t\tenv.code = env.backupCode;","\t\t\tdelete env.backupCode;","\t\t}","\t});","","\t// Re-insert the tokens after highlighting","\t// and highlight them with defined grammar","\tPrism.hooks.add('after-highlight', function(env) {","\t\tif (env.language !== 'handlebars') {","\t\t\treturn;","\t\t}","","\t\tfor (var i = 0, t; t = env.tokenStack[i]; i++) {","\t\t\t// The replace prevents $$, $&, $`, $', $n, $nn from being interpreted as special patterns","\t\t\tenv.highlightedCode = env.highlightedCode.replace('___HANDLEBARS' + (i + 1) + '___', Prism.highlight(t, env.grammar, 'handlebars').replace(/\\$/g, '$$$$'));","\t\t}","","\t\tenv.element.innerHTML = env.highlightedCode;","\t});","","}(Prism));",""],"l":{"1":2,"3":2,"5":2,"36":1,"45":1,"46":0,"47":0,"50":0,"52":0,"53":0,"54":0,"56":0,"61":1,"62":0,"63":0,"64":0,"70":1,"71":0,"72":0,"75":0,"77":0,"80":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-haskell.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-haskell.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":35,"column":2}}},"branchMap":{},"code":["Prism.languages.haskell= {","\t'comment': {","\t\tpattern: /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(--[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|{-[\\w\\W]*?-})/m,","\t\tlookbehind: true","\t},","\t'char': /'([^\\\\']|\\\\([abfnrtv\\\\\"'&]|\\^[A-Z@[\\]\\^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,","\t'string': {","\t\tpattern: /\"([^\\\\\"]|\\\\([abfnrtv\\\\\"'&]|\\^[A-Z@[\\]\\^_]|NUL|SOH|STX|ETX|EOT|ENQ|ACK|BEL|BS|HT|LF|VT|FF|CR|SO|SI|DLE|DC1|DC2|DC3|DC4|NAK|SYN|ETB|CAN|EM|SUB|ESC|FS|GS|RS|US|SP|DEL|\\d+|o[0-7]+|x[0-9a-fA-F]+)|\\\\\\s+\\\\)*\"/,","\t\tgreedy: true","\t},","\t'keyword' : /\\b(case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,","\t'import_statement' : {","\t\t// The imported or hidden names are not included in this import","\t\t// statement. This is because we want to highlight those exactly like","\t\t// we do for the names in the program.","\t\tpattern: /(\\r?\\n|\\r|^)\\s*import\\s+(qualified\\s+)?([A-Z][_a-zA-Z0-9']*)(\\.[A-Z][_a-zA-Z0-9']*)*(\\s+as\\s+([A-Z][_a-zA-Z0-9']*)(\\.[A-Z][_a-zA-Z0-9']*)*)?(\\s+hiding\\b)?/m,","\t\tinside: {","\t\t\t'keyword': /\\b(import|qualified|as|hiding)\\b/","\t\t}","\t},","\t// These are builtin variables only. Constructors are highlighted later as a constant.","\t'builtin': /\\b(abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,","\t// decimal integers and floating point numbers | octal integers | hexadecimal integers","\t'number' : /\\b(\\d+(\\.\\d+)?(e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,","\t// Most of this is needed because of the meaning of a single '.'.","\t// If it stands alone freely, it is the function composition.","\t// It may also be a separator between a module name and an identifier => no","\t// operator. If it comes together with other special characters it is an","\t// operator too.","\t'operator' : /\\s\\.\\s|[-!#$%*+=?&@|~.:<>^\\\\\\/]*\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+|[-!#$%*+=?&@|~.:<>^\\\\\\/]+\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]*|[-!#$%*+=?&@|~:<>^\\\\\\/]+|`([A-Z][_a-zA-Z0-9']*\\.)*[_a-z][_a-zA-Z0-9']*`/,","\t// In Haskell, nearly everything is a variable, do not highlight these.","\t'hvariable': /\\b([A-Z][_a-zA-Z0-9']*\\.)*[_a-z][_a-zA-Z0-9']*\\b/,","\t'constant': /\\b([A-Z][_a-zA-Z0-9']*\\.)*[A-Z][_a-zA-Z0-9']*\\b/,","\t'punctuation' : /[{}[\\];(),.:]/","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-haxe.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-haxe.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":22,"column":3}},"2":{"start":{"line":23,"column":0},"end":{"line":27,"column":3}},"3":{"start":{"line":28,"column":0},"end":{"line":41,"column":3}},"4":{"start":{"line":42,"column":0},"end":{"line":42,"column":108}},"5":{"start":{"line":43,"column":0},"end":{"line":43,"column":42}}},"branchMap":{},"code":["Prism.languages.haxe = Prism.languages.extend('clike', {","\t// Strings can be multi-line","\t'string': {","\t\tpattern: /([\"'])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,","\t\tinside: {","\t\t\t'interpolation': {","\t\t\t\tpattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^}]+\\})/,","\t\t\t\tlookbehind: true,","\t\t\t\tinside: {","\t\t\t\t\t'interpolation': {","\t\t\t\t\t\tpattern: /^\\$\\w*/,","\t\t\t\t\t\talias: 'variable'","\t\t\t\t\t}","\t\t\t\t\t// See rest below","\t\t\t\t}","\t\t\t}","\t\t}","\t},","\t// The final look-ahead prevents highlighting of keywords if expressions such as \"haxe.macro.Expr\"","\t'keyword': /\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|from|for|function|if|implements|import|in|inline|interface|macro|new|null|override|public|private|return|static|super|switch|throw|to|try|typedef|using|var|while)(?!\\.)\\b/,","\t'operator': /\\.{3}|\\+\\+?|-[->]?|[=!]=?|&&?|\\|\\|?|<[<=]?|>[>=]?|[*\\/%~^]/","});","Prism.languages.insertBefore('haxe', 'class-name', {","\t'regex': {","\t\tpattern: /~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[igmsu]*/","\t}","});","Prism.languages.insertBefore('haxe', 'keyword', {","\t'preprocessor': {","\t\tpattern: /#\\w+/,","\t\talias: 'builtin'","\t},","\t'metadata': {","\t\tpattern: /@:?\\w+/,","\t\talias: 'symbol'","\t},","\t'reification': {","\t\tpattern: /\\$(?:\\w+|(?=\\{))/,","\t\talias: 'variable'","\t}","});","Prism.languages.haxe['string'].inside['interpolation'].inside.rest = Prism.util.clone(Prism.languages.haxe);","delete Prism.languages.haxe['class-name'];"],"l":{"1":2,"23":0,"28":0,"42":0,"43":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-http.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-http.js","s":{"1":1,"2":1,"3":1,"4":4,"5":0,"6":0,"7":0},"b":{"1":[0,4]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":26,"column":2}},"2":{"start":{"line":29,"column":0},"end":{"line":34,"column":2}},"3":{"start":{"line":38,"column":0},"end":{"line":50,"column":1}},"4":{"start":{"line":39,"column":1},"end":{"line":49,"column":2}},"5":{"start":{"line":40,"column":2},"end":{"line":40,"column":19}},"6":{"start":{"line":41,"column":2},"end":{"line":47,"column":4}},"7":{"start":{"line":48,"column":2},"end":{"line":48,"column":63}}},"branchMap":{"1":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},{"start":{"line":39,"column":1},"end":{"line":39,"column":1}}]}},"code":["Prism.languages.http = {","\t'request-line': {","\t\tpattern: /^(POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\b\\shttps?:\\/\\/\\S+\\sHTTP\\/[0-9.]+/m,","\t\tinside: {","\t\t\t// HTTP Verb","\t\t\tproperty: /^(POST|GET|PUT|DELETE|OPTIONS|PATCH|TRACE|CONNECT)\\b/,","\t\t\t// Path or query argument","\t\t\t'attr-name': /:\\w+/","\t\t}","\t},","\t'response-status': {","\t\tpattern: /^HTTP\\/1.[01] [0-9]+.*/m,","\t\tinside: {","\t\t\t// Status, e.g. 200 OK","\t\t\tproperty: {","                pattern: /(^HTTP\\/1.[01] )[0-9]+.*/i,","                lookbehind: true","            }","\t\t}","\t},","\t// HTTP header name","\t'header-name': {","        pattern: /^[\\w-]+:(?=.)/m,","        alias: 'keyword'","    }","};","","// Create a mapping of Content-Type headers to language definitions","var httpLanguages = {","\t'application/json': Prism.languages.javascript,","\t'application/xml': Prism.languages.markup,","\t'text/xml': Prism.languages.markup,","\t'text/html': Prism.languages.markup","};","","// Insert each content type parser that has its associated language","// currently loaded.","for (var contentType in httpLanguages) {","\tif (httpLanguages[contentType]) {","\t\tvar options = {};","\t\toptions[contentType] = {","\t\t\tpattern: new RegExp('(content-type:\\\\s*' + contentType + '[\\\\w\\\\W]*?)(?:\\\\r?\\\\n|\\\\r){2}[\\\\w\\\\W]*', 'i'),","\t\t\tlookbehind: true,","\t\t\tinside: {","\t\t\t\trest: httpLanguages[contentType]","\t\t\t}","\t\t};","\t\tPrism.languages.insertBefore('http', 'header-name', options);","\t}","}",""],"l":{"1":1,"29":1,"38":1,"39":4,"40":0,"41":0,"48":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-icon.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-icon.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":17,"column":2}}},"branchMap":{},"code":["Prism.languages.icon = {","\t'comment': /#.*/,","\t'string': /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.|_(?:\\r?\\n|\\r))*\\1/,","\t'number': /\\b(?:\\d+r[a-z\\d]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b|\\.\\d+\\b/i,","\t'builtin-keyword': {","\t\tpattern: /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\\b/,","\t\talias: 'variable'","\t},","\t'directive': {","\t\tpattern: /\\$\\w+/,","\t\talias: 'builtin'","\t},","\t'keyword': /\\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\\b/,","\t'function': /(?!\\d)\\w+(?=\\s*[({]|\\s*!\\s*\\[)/,","\t'operator': /[+-]:(?!=)|(?:[\\/?@^%&]|\\+\\+?|--?|==?=?|~==?=?|\\*\\*?|\\|\\|\\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\\\|~]/,","\t'punctuation': /[\\[\\](){},;]/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-inform7.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-inform7.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":51,"column":2}},"2":{"start":{"line":53,"column":0},"end":{"line":53,"column":113}},"3":{"start":{"line":55,"column":0},"end":{"line":58,"column":2}}},"branchMap":{},"code":["Prism.languages.inform7 = {","\t'string': {","\t\tpattern: /\"[^\"]*\"/,","\t\tinside: {","\t\t\t'substitution': {","\t\t\t\tpattern: /\\[[^\\]]+\\]/,","\t\t\t\tinside: {","\t\t\t\t\t'delimiter': {","\t\t\t\t\t\tpattern:/\\[|\\]/,","\t\t\t\t\t\talias: 'punctuation'","\t\t\t\t\t}","\t\t\t\t\t// See rest below","\t\t\t\t}","\t\t\t}","\t\t}","\t},","\t'comment': /\\[[^\\]]+\\]/,","\t'title': {","\t\tpattern: /^[ \\t]*(?:volume|book|part(?! of)|chapter|section|table)\\b.+/im,","\t\talias: 'important'","\t},","\t'number': {","\t\tpattern: /(^|[^-])(?:(?:\\b|-)\\d+(?:\\.\\d+)?(?:\\^\\d+)?\\w*|\\b(?:one|two|three|four|five|six|seven|eight|nine|ten|eleven|twelve))\\b(?!-)/i,","\t\tlookbehind: true","\t},","\t'verb': {","\t\tpattern: /(^|[^-])\\b(?:applying to|are|attacking|answering|asking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:s|ing)?|consulting|contain(?:s|ing)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:ve|s|ving)|hold(?:s|ing)?|impl(?:y|ies)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:s|ing)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:s|ing)?|setting|showing|singing|sleeping|smelling|squeezing|switching|support(?:s|ing)?|swearing|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:s|ing)?|var(?:y|ies|ying)|waiting|waking|waving|wear(?:s|ing)?)\\b(?!-)/i,","\t\tlookbehind: true,","\t\talias: 'operator'","\t},","\t'keyword': {","\t\tpattern: /(^|[^-])\\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|unless|the story)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\\b(?!-)/i,","\t\tlookbehind: true","\t},","\t'property': {","\t\tpattern: /(^|[^-])\\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: on| off)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\\b(?!-)/i,","\t\tlookbehind: true,","\t\talias: 'symbol'","\t},","\t'position': {","\t\tpattern: /(^|[^-])\\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\\b(?!-)/i,","\t\tlookbehind: true,","\t\talias: 'keyword'","\t},","\t'type': {","\t\tpattern: /(^|[^-])\\b(?:actions?|activit(?:y|ies)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\\b(?!-)/i,","\t\tlookbehind: true,","\t\talias: 'variable'","\t},","\t'punctuation': /[.,:;(){}]/","};","","Prism.languages.inform7['string'].inside['substitution'].inside.rest = Prism.util.clone(Prism.languages.inform7);","// We don't want the remaining text in the substitution to be highlighted as the string.","Prism.languages.inform7['string'].inside['substitution'].inside.rest.text = {","\tpattern: /\\S(?:\\s*\\S)*/,","\talias: 'comment'","};"],"l":{"1":1,"53":1,"55":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-ini.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-ini.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":11,"column":2}}},"branchMap":{},"code":["Prism.languages.ini= {","\t'comment': /^[ \\t]*;.*$/m,","\t'selector': /^[ \\t]*\\[.*?\\]/m,","\t'constant': /^[ \\t]*[^\\s=]+?(?=[ \\t]*=)/m,","\t'attr-value': {","\t\tpattern: /=.*/,","\t\tinside: {","\t\t\t'punctuation': /^[=]/","\t\t}","\t}","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-jade.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-jade.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":13,"8":13,"9":13,"10":0,"11":1},"b":{"1":[10,3],"2":[0,13]},"f":{"1":1},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":17}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":198,"column":10}},"2":{"start":{"line":10,"column":1},"end":{"line":156,"column":3}},"3":{"start":{"line":158,"column":1},"end":{"line":158,"column":115}},"4":{"start":{"line":161,"column":1},"end":{"line":176,"column":3}},"5":{"start":{"line":177,"column":1},"end":{"line":177,"column":22}},"6":{"start":{"line":178,"column":1},"end":{"line":194,"column":2}},"7":{"start":{"line":179,"column":2},"end":{"line":179,"column":26}},"8":{"start":{"line":180,"column":2},"end":{"line":180,"column":84}},"9":{"start":{"line":181,"column":2},"end":{"line":193,"column":3}},"10":{"start":{"line":182,"column":3},"end":{"line":192,"column":4}},"11":{"start":{"line":196,"column":1},"end":{"line":196,"column":61}}},"branchMap":{"1":{"line":180,"type":"cond-expr","locations":[{"start":{"line":180,"column":40},"end":{"line":180,"column":74}},{"start":{"line":180,"column":77},"end":{"line":180,"column":83}}]},"2":{"line":181,"type":"if","locations":[{"start":{"line":181,"column":2},"end":{"line":181,"column":2}},{"start":{"line":181,"column":2},"end":{"line":181,"column":2}}]}},"code":["(function(Prism) {","\t// TODO:","\t// - Add CSS highlighting inside <style> tags","\t// - Add support for multi-line code blocks","\t// - Add support for interpolation #{} and !{}","\t// - Add support for tag interpolation #[]","\t// - Add explicit support for plain text using |","\t// - Add support for markup embedded in plain text","","\tPrism.languages.jade = {","","\t\t// Multiline stuff should appear before the rest","","\t\t// This handles both single-line and multi-line comments","\t\t'comment': {","\t\t\tpattern: /(^([\\t ]*))\\/\\/.*((?:\\r?\\n|\\r)\\2[\\t ]+.+)*/m,","\t\t\tlookbehind: true","\t\t},","","\t\t// All the tag-related part is in lookbehind","\t\t// so that it can be highlighted by the \"tag\" pattern","\t\t'multiline-script': {","\t\t\tpattern: /(^([\\t ]*)script\\b.*\\.[\\t ]*)((?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,","\t\t\tlookbehind: true,","\t\t\tinside: {","\t\t\t\trest: Prism.languages.javascript","\t\t\t}","\t\t},","","\t\t// See at the end of the file for known filters","\t\t'filter': {","\t\t\tpattern: /(^([\\t ]*)):.+((?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,","\t\t\tlookbehind: true,","\t\t\tinside: {","\t\t\t\t'filter-name': {","\t\t\t\t\tpattern: /^:[\\w-]+/,","\t\t\t\t\talias: 'variable'","\t\t\t\t}","\t\t\t}","\t\t},","","\t\t'multiline-plain-text': {","\t\t\tpattern: /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)((?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ]+.+|\\s*?(?=\\r?\\n|\\r)))+/m,","\t\t\tlookbehind: true","\t\t},","\t\t'markup': {","\t\t\tpattern: /(^[\\t ]*)<.+/m,","\t\t\tlookbehind: true,","\t\t\tinside: {","\t\t\t\trest: Prism.languages.markup","\t\t\t}","\t\t},","\t\t'doctype': {","\t\t\tpattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,","\t\t\tlookbehind: true","\t\t},","","\t\t// This handle all conditional and loop keywords","\t\t'flow-control': {","\t\t\tpattern: /(^[\\t ]*)(?:if|unless|else|case|when|default|each|while)\\b(?: .+)?/m,","\t\t\tlookbehind: true,","\t\t\tinside: {","\t\t\t\t'each': {","\t\t\t\t\tpattern: /^each .+? in\\b/,","\t\t\t\t\tinside: {","\t\t\t\t\t\t'keyword': /\\b(?:each|in)\\b/,","\t\t\t\t\t\t'punctuation': /,/","\t\t\t\t\t}","\t\t\t\t},","\t\t\t\t'branch': {","\t\t\t\t\tpattern: /^(?:if|unless|else|case|when|default|while)\\b/,","\t\t\t\t\talias: 'keyword'","\t\t\t\t},","\t\t\t\trest: Prism.languages.javascript","\t\t\t}","\t\t},","\t\t'keyword': {","\t\t\tpattern: /(^[\\t ]*)(?:block|extends|include|append|prepend)\\b.+/m,","\t\t\tlookbehind: true","\t\t},","\t\t'mixin': [","\t\t\t// Declaration","\t\t\t{","\t\t\t\tpattern: /(^[\\t ]*)mixin .+/m,","\t\t\t\tlookbehind: true,","\t\t\t\tinside: {","\t\t\t\t\t'keyword': /^mixin/,","\t\t\t\t\t'function': /\\w+(?=\\s*\\(|\\s*$)/,","\t\t\t\t\t'punctuation': /[(),.]/","\t\t\t\t}","\t\t\t},","\t\t\t// Usage","\t\t\t{","\t\t\t\tpattern: /(^[\\t ]*)\\+.+/m,","\t\t\t\tlookbehind: true,","\t\t\t\tinside: {","\t\t\t\t\t'name': {","\t\t\t\t\t\tpattern: /^\\+\\w+/,","\t\t\t\t\t\talias: 'function'","\t\t\t\t\t},","\t\t\t\t\t'rest': Prism.languages.javascript","\t\t\t\t}","\t\t\t}","\t\t],","\t\t'script': {","\t\t\tpattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]+).+/m,","\t\t\tlookbehind: true,","\t\t\tinside: {","\t\t\t\trest: Prism.languages.javascript","\t\t\t}","\t\t},","","\t\t'plain-text': {","\t\t\tpattern: /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]+).+/m,","\t\t\tlookbehind: true","\t\t},","\t\t'tag': {","\t\t\tpattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,","\t\t\tlookbehind: true,","\t\t\tinside: {","\t\t\t\t'attributes': [","\t\t\t\t\t{","\t\t\t\t\t\tpattern: /&[^(]+\\([^)]+\\)/,","\t\t\t\t\t\tinside: {","\t\t\t\t\t\t\trest: Prism.languages.javascript","\t\t\t\t\t\t}","\t\t\t\t\t},","\t\t\t\t\t{","\t\t\t\t\t\tpattern: /\\([^)]+\\)/,","\t\t\t\t\t\tinside: {","\t\t\t\t\t\t\t'attr-value': {","\t\t\t\t\t\t\t\tpattern: /(=\\s*)(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,","\t\t\t\t\t\t\t\tlookbehind: true,","\t\t\t\t\t\t\t\tinside: {","\t\t\t\t\t\t\t\t\trest: Prism.languages.javascript","\t\t\t\t\t\t\t\t}","\t\t\t\t\t\t\t},","\t\t\t\t\t\t\t'attr-name': /[\\w-]+(?=\\s*!?=|\\s*[,)])/,","\t\t\t\t\t\t\t'punctuation': /[!=(),]+/","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t],","\t\t\t\t'punctuation': /:/","\t\t\t}","\t\t},","\t\t'code': [","\t\t\t{","\t\t\t\tpattern: /(^[\\t ]*(?:-|!?=)).+/m,","\t\t\t\tlookbehind: true,","\t\t\t\tinside: {","\t\t\t\t\trest: Prism.languages.javascript","\t\t\t\t}","\t\t\t}","\t\t],","\t\t'punctuation': /[.\\-!=|]+/","\t};","","\tvar filter_pattern = '(^([\\\\t ]*)):{{filter_name}}((?:\\\\r?\\\\n|\\\\r(?!\\\\n))(?:\\\\2[\\\\t ]+.+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+';","","\t// Non exhaustive list of available filters and associated languages","\tvar filters = [","\t\t{filter:'atpl',language:'twig'},","\t\t{filter:'coffee',language:'coffeescript'},","\t\t'ejs',","\t\t'handlebars',","\t\t'hogan',","\t\t'less',","\t\t'livescript',","\t\t'markdown',","\t\t'mustache',","\t\t'plates',","\t\t{filter:'sass',language:'scss'},","\t\t'stylus',","\t\t'swig'","","\t];","\tvar all_filters = {};","\tfor (var i = 0, l = filters.length; i < l; i++) {","\t\tvar filter = filters[i];","\t\tfilter = typeof filter === 'string' ? {filter: filter, language: filter} : filter;","\t\tif (Prism.languages[filter.language]) {","\t\t\tall_filters['filter-' + filter.filter] = {","\t\t\t\tpattern: RegExp(filter_pattern.replace('{{filter_name}}', filter.filter), 'm'),","\t\t\t\tlookbehind: true,","\t\t\t\tinside: {","\t\t\t\t\t'filter-name': {","\t\t\t\t\t\tpattern: /^:[\\w-]+/,","\t\t\t\t\t\talias: 'variable'","\t\t\t\t\t},","\t\t\t\t\trest: Prism.languages[filter.language]","\t\t\t\t}","\t\t\t}","\t\t}","\t}","","\tPrism.languages.insertBefore('jade', 'filter', all_filters);","","}(Prism));"],"l":{"1":1,"10":1,"158":1,"161":1,"177":1,"178":1,"179":13,"180":13,"181":13,"182":0,"196":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-java.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-java.js","s":{"1":2,"2":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":8,"column":3}},"2":{"start":{"line":10,"column":0},"end":{"line":16,"column":3}}},"branchMap":{},"code":["Prism.languages.java = Prism.languages.extend('clike', {","\t'keyword': /\\b(abstract|continue|for|new|switch|assert|default|goto|package|synchronized|boolean|do|if|private|this|break|double|implements|protected|throw|byte|else|import|public|throws|case|enum|instanceof|return|transient|catch|extends|int|short|try|char|final|interface|static|void|class|finally|long|strictfp|volatile|const|float|native|super|while)\\b/,","\t'number': /\\b0b[01]+\\b|\\b0x[\\da-f]*\\.?[\\da-fp\\-]+\\b|\\b\\d*\\.?\\d+(?:e[+-]?\\d+)?[df]?\\b/i,","\t'operator': {","\t\tpattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|!=?|<<?=?|>>?>?=?|==?|&[&=]?|\\|[|=]?|\\*=?|\\/=?|%=?|\\^=?|[?:~])/m,","\t\tlookbehind: true","\t}","});","","Prism.languages.insertBefore('java','function', {","\t'annotation': {","\t\talias: 'punctuation',","\t\tpattern: /(^|[^.])@\\w+/,","\t\tlookbehind: true","\t}","});",""],"l":{"1":2,"10":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-javascript.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-javascript.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0},"b":{"1":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":7,"column":3}},"2":{"start":{"line":9,"column":0},"end":{"line":15,"column":3}},"3":{"start":{"line":17,"column":0},"end":{"line":35,"column":3}},"4":{"start":{"line":37,"column":0},"end":{"line":46,"column":1}},"5":{"start":{"line":38,"column":1},"end":{"line":45,"column":4}},"6":{"start":{"line":48,"column":0},"end":{"line":48,"column":48}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":0},"end":{"line":37,"column":0}},{"start":{"line":37,"column":0},"end":{"line":37,"column":0}}]}},"code":["Prism.languages.javascript = Prism.languages.extend('clike', {","\t'keyword': /\\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,","\t'number': /\\b-?(0x[\\dA-Fa-f]+|0b[01]+|0o[0-7]+|\\d*\\.?\\d+([Ee][+-]?\\d+)?|NaN|Infinity)\\b/,","\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)","\t'function': /[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*(?=\\()/i,","\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*\\*?|\\/|~|\\^|%|\\.{3}/","});","","Prism.languages.insertBefore('javascript', 'keyword', {","\t'regex': {","\t\tpattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,","\t\tlookbehind: true,","\t\tgreedy: true","\t}","});","","Prism.languages.insertBefore('javascript', 'string', {","\t'template-string': {","\t\tpattern: /`(?:\\\\\\\\|\\\\?[^\\\\])*?`/,","\t\tgreedy: true,","\t\tinside: {","\t\t\t'interpolation': {","\t\t\t\tpattern: /\\$\\{[^}]+\\}/,","\t\t\t\tinside: {","\t\t\t\t\t'interpolation-punctuation': {","\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,","\t\t\t\t\t\talias: 'punctuation'","\t\t\t\t\t},","\t\t\t\t\trest: Prism.languages.javascript","\t\t\t\t}","\t\t\t},","\t\t\t'string': /[\\s\\S]+/","\t\t}","\t}","});","","if (Prism.languages.markup) {","\tPrism.languages.insertBefore('markup', 'tag', {","\t\t'script': {","\t\t\tpattern: /(<script[\\w\\W]*?>)[\\w\\W]*?(?=<\\/script>)/i,","\t\t\tlookbehind: true,","\t\t\tinside: Prism.languages.javascript,","\t\t\talias: 'language-javascript'","\t\t}","\t});","}","","Prism.languages.js = Prism.languages.javascript;"],"l":{"1":2,"9":0,"17":0,"37":0,"38":0,"48":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-j.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-j.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":22,"column":2}}},"branchMap":{},"code":["Prism.languages.j = {","\t'comment': /\\bNB\\..*/,","\t'string': /'(?:''|[^'\\r\\n])*'/,","\t'keyword': /\\b(?:(?:adverb|conjunction|CR|def|define|dyad|LF|monad|noun|verb)\\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\\w+|goto_\\w+|if|label_\\w+|return|select|throw|try|while|whilst)\\.)/,","\t'verb': {","\t\t// Negative look-ahead prevents bad highlighting","\t\t// of ^: ;. =. =: !. !:","\t\tpattern: /(?!\\^:|;\\.|[=!][.:])(?:\\{(?:\\.|::?)?|p(?:\\.\\.?|:)|[=!\\]]|[<>+*\\-%$|,#][.:]?|[\\^?]\\.?|[;\\[]:?|[~}\"i][.:]|[ACeEIjLor]\\.|(?:[_\\/\\\\qsux]|_?\\d):)/,","\t\talias: 'keyword'","\t},","\t'number': /\\b_?(?:(?!\\d:)\\d+(?:\\.\\d+)?(?:(?:[ejpx]|ad|ar)_?\\d+(?:\\.\\d+)?)*(?:b_?[\\da-z]+(?:\\.[\\da-z]+)?)?|_(?!\\.))/,","\t'adverb': {","\t\tpattern: /[~}]|[\\/\\\\]\\.?|[bfM]\\.|t[.:]/,","\t\talias: 'builtin'","\t},","\t'operator': /[=a][.:]|_\\./,","\t'conjunction': {","\t\tpattern: /&(?:\\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\\.|`:?|[\\^LS]:|\"/,","\t\talias: 'variable'","\t},","\t'punctuation': /[()]/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-jolie.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-jolie.js","s":{"1":2,"2":0,"3":0,"4":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":12,"column":3}},"2":{"start":{"line":14,"column":0},"end":{"line":14,"column":43}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":41}},"4":{"start":{"line":17,"column":0},"end":{"line":56,"column":3}}},"branchMap":{},"code":["Prism.languages.jolie = Prism.languages.extend('clike', {","\t'keyword': /\\b(?:include|define|is_defined|undef|main|init|outputPort|inputPort|Location|Protocol|Interfaces|RequestResponse|OneWay|type|interface|extender|throws|cset|csets|forward|Aggregates|Redirects|embedded|courier|extender|execution|sequential|concurrent|single|scope|install|throw|comp|cH|default|global|linkIn|linkOut|synchronized|this|new|for|if|else|while|in|Jolie|Java|Javascript|nullProcess|spawn|constants|with|provide|until|exit|foreach|instanceof|over|service)\\b/g,","\t'builtin': /\\b(?:undefined|string|int|void|long|Byte|bool|double|float|char|any)\\b/,","\t'number': /\\b\\d*\\.?\\d+(?:e[+-]?\\d+)?l?\\b/i,","\t'operator': /->|<<|[!+-<>=*]?=|[:<>!?*\\/%^]|&&|\\|\\||--?|\\+\\+?/g,","\t'symbol': /[|;@]/,","\t'punctuation': /[,.]/,","\t'string': {","\t\tpattern: /([\"'])(\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,","\t\tgreedy: true","\t},","});","","delete Prism.languages.jolie['class-name'];","delete Prism.languages.jolie['function'];","","Prism.languages.insertBefore( 'jolie', 'keyword', {","\t'function':","\t{","\t\tpattern: /((?:\\b(?:outputPort|inputPort|in|service|courier)\\b|@)\\s*)\\w+/,","\t\tlookbehind: true","\t},","\t'aggregates': {","\t\tpattern: /(\\bAggregates\\s*:\\s*)(?:\\w+(?:\\s+with\\s+\\w+)?\\s*,\\s*)*\\w+(?:\\s+with\\s+\\w+)?/,","\t\tlookbehind: true,","\t\tinside: {","\t\t\t'withExtension': {","\t\t\t\tpattern: /\\bwith\\s+\\w+/,","\t\t\t\tinside: {","\t\t\t\t\t'keyword' : /\\bwith\\b/","\t\t\t\t}","\t\t\t},","\t\t\t'function': {","\t\t\t\tpattern: /\\w+/","\t\t\t},","\t\t\t'punctuation': {","\t\t\t\tpattern: /,/","\t\t\t}","\t\t}","\t},","\t'redirects': {","\t\tpattern: /(\\bRedirects\\s*:\\s*)(?:\\w+\\s*=>\\s*\\w+\\s*,\\s*)*(?:\\w+\\s*=>\\s*\\w+)/,","\t\tlookbehind: true,","\t\tinside: {","\t\t\t'punctuation': {","\t\t\t\tpattern: /,/","\t\t\t},","\t\t\t'function': {","\t\t\t\tpattern: /\\w+/g","\t\t\t},","\t\t\t'symbol': {","\t\t\t\tpattern: /=>/g","\t\t\t}","\t\t}","\t}","});"],"l":{"1":2,"14":0,"15":0,"17":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-json.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-json.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":9,"column":2}},"2":{"start":{"line":11,"column":0},"end":{"line":11,"column":45}}},"branchMap":{},"code":["Prism.languages.json = {","    'property': /\"(?:\\\\.|[^|\"])*\"(?=\\s*:)/ig,","    'string': /\"(?!:)(?:\\\\.|[^|\"])*\"(?!:)/g,","    'number': /\\b-?(0x[\\dA-Fa-f]+|\\d*\\.?\\d+([Ee][+-]?\\d+)?)\\b/g,","    'punctuation': /[{}[\\]);,]/g,","    'operator': /:/g,","    'boolean': /\\b(true|false)\\b/gi,","    'null': /\\bnull\\b/gi","};","","Prism.languages.jsonp = Prism.languages.json;",""],"l":{"1":1,"11":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-jsx.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-jsx.js","s":{"1":2,"2":2,"3":2,"4":2,"5":1,"6":1,"7":1,"8":1,"9":1},"b":{},"f":{"1":2},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":17}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":27,"column":10}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":62}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":67}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":133}},"5":{"start":{"line":8,"column":0},"end":{"line":8,"column":94}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":58}},"7":{"start":{"line":12,"column":0},"end":{"line":12,"column":32}},"8":{"start":{"line":14,"column":0},"end":{"line":16,"column":27}},"9":{"start":{"line":18,"column":0},"end":{"line":25,"column":28}}},"branchMap":{},"code":["(function(Prism) {","","var javascript = Prism.util.clone(Prism.languages.javascript);","","Prism.languages.jsx = Prism.languages.extend('markup', javascript);","Prism.languages.jsx.tag.pattern= /<\\/?[\\w\\.:-]+\\s*(?:\\s+[\\w\\.:-]+(?:=(?:(\"|')(\\\\?[\\w\\W])*?\\1|[^\\s'\">=]+|(\\{[\\w\\W]*?\\})))?\\s*)*\\/?>/i;","","Prism.languages.jsx.tag.inside['attr-value'].pattern = /=[^\\{](?:('|\")[\\w\\W]*?(\\1)|[^\\s>]+)/i;","","var jsxExpression = Prism.util.clone(Prism.languages.jsx);","","delete jsxExpression.punctuation","","jsxExpression = Prism.languages.insertBefore('jsx', 'operator', {","  'punctuation': /=(?={)|[{}[\\];(),.:]/","}, { jsx: jsxExpression });","","Prism.languages.insertBefore('inside', 'attr-value',{","\t'script': {","\t\t// Allow for one level of nesting","\t\tpattern: /=(\\{(?:\\{[^}]*\\}|[^}])+\\})/i,","\t\tinside: jsxExpression,","\t\t'alias': 'language-javascript'","\t}","}, Prism.languages.jsx.tag);","","}(Prism));",""],"l":{"1":2,"3":2,"5":2,"6":2,"8":1,"10":1,"12":1,"14":1,"18":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-julia.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-julia.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":12,"column":2}}},"branchMap":{},"code":["Prism.languages.julia= {","\t'comment': {","\t\tpattern: /(^|[^\\\\])#.*/,","\t\tlookbehind: true","\t},","\t'string': /\"\"\"[\\s\\S]+?\"\"\"|'''[\\s\\S]+?'''|(\"|')(\\\\?.)*?\\1/,","\t'keyword' : /\\b(abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|let|local|macro|module|print|println|quote|return|try|type|typealias|using|while)\\b/,","\t'boolean' : /\\b(true|false)\\b/,","\t'number' : /\\b-?(0[box])?(?:[\\da-f]+\\.?\\d*|\\.\\d+)(?:[efp][+-]?\\d+)?j?\\b/i,","\t'operator': /\\+=?|-=?|\\*=?|\\/[\\/=]?|\\\\=?|\\^=?|%=?|÷=?|!=?=?|&=?|\\|[=>]?|\\$=?|<(?:<=?|[=:])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥]/,","\t'punctuation' : /[{}[\\];(),.:]/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-keyman.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-keyman.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":14,"column":2}}},"branchMap":{},"code":["Prism.languages.keyman = {","\t'comment': /\\bc\\s.*/i,","\t'function': /\\[\\s*((CTRL|SHIFT|ALT|LCTRL|RCTRL|LALT|RALT|CAPS|NCAPS)\\s+)*([TKU]_[a-z0-9_?]+|\".+?\"|'.+?')\\s*\\]/i,  // virtual key","\t'string': /(\"|')((?!\\1).)*\\1/,","\t'bold': [   // header statements, system stores and variable system stores","\t\t/&(baselayout|bitmap|capsononly|capsalwaysoff|shiftfreescaps|copyright|ethnologuecode|hotkey|includecodes|keyboardversion|kmw_embedcss|kmw_embedjs|kmw_helpfile|kmw_helptext|kmw_rtl|language|layer|layoutfile|message|mnemoniclayout|name|oldcharposmatching|platform|targets|version|visualkeyboard|windowslanguages)\\b/i,","\t\t/\\b(bitmap|bitmaps|caps on only|caps always off|shift frees caps|copyright|hotkey|language|layout|message|name|version)\\b/i","\t],","\t'keyword': /\\b(any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|return|reset|save|set|store|use)\\b/i,  // rule keywords","\t'atrule': /\\b(ansi|begin|unicode|group|using keys|match|nomatch)\\b/i,   // structural keywords","\t'number': /\\b(U\\+[\\dA-F]+|d\\d+|x[\\da-f]+|\\d+)\\b/i, // U+####, x###, d### characters and numbers","\t'operator': /[+>\\\\,()]/,","\t'tag': /\\$(keyman|kmfl|weaver|keymanweb|keymanonly):/i   // prefixes","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-kotlin.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-kotlin.js","s":{"1":2,"2":2,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{},"f":{"1":2},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":18}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":62,"column":10}},"2":{"start":{"line":2,"column":1},"end":{"line":17,"column":4}},"3":{"start":{"line":19,"column":1},"end":{"line":19,"column":45}},"4":{"start":{"line":21,"column":1},"end":{"line":27,"column":4}},"5":{"start":{"line":28,"column":1},"end":{"line":33,"column":4}},"6":{"start":{"line":34,"column":1},"end":{"line":39,"column":4}},"7":{"start":{"line":41,"column":1},"end":{"line":56,"column":3}},"8":{"start":{"line":58,"column":1},"end":{"line":60,"column":3}}},"branchMap":{},"code":["(function (Prism) {","\tPrism.languages.kotlin = Prism.languages.extend('clike', {","\t\t'keyword': {","\t\t\t// The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get","\t\t\tpattern: /(^|[^.])\\b(?:abstract|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|else|enum|final|finally|for|fun|get|if|import|in|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|out|override|package|private|protected|public|reified|return|sealed|set|super|tailrec|this|throw|to|try|val|var|when|where|while)\\b/,","\t\t\tlookbehind: true","\t\t},","\t\t'function': [","\t\t\t/\\w+(?=\\s*\\()/,","\t\t\t{","\t\t\t\tpattern: /(\\.)\\w+(?=\\s*\\{)/,","\t\t\t\tlookbehind: true","\t\t\t}","\t\t],","\t\t'number': /\\b(?:0[bx][\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?[fFL]?)\\b/,","\t\t'operator': /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/","\t});","","\tdelete Prism.languages.kotlin[\"class-name\"];","","\tPrism.languages.insertBefore('kotlin', 'string', {","\t\t'raw-string': {","\t\t\tpattern: /([\"'])\\1\\1[\\s\\S]*?\\1{3}/,","\t\t\talias: 'string'","\t\t\t// See interpolation below","\t\t}","\t});","\tPrism.languages.insertBefore('kotlin', 'keyword', {","\t\t'annotation': {","\t\t\tpattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,","\t\t\talias: 'builtin'","\t\t}","\t});","\tPrism.languages.insertBefore('kotlin', 'function', {","\t\t'label': {","\t\t\tpattern: /\\w+@|@\\w+/,","\t\t\talias: 'symbol'","\t\t}","\t});","","\tvar interpolation = [","\t\t{","\t\t\tpattern: /\\$\\{[^}]+\\}/,","\t\t\tinside: {","\t\t\t\tdelimiter: {","\t\t\t\t\tpattern: /^\\$\\{|\\}$/,","\t\t\t\t\talias: 'variable'","\t\t\t\t},","\t\t\t\trest: Prism.util.clone(Prism.languages.kotlin)","\t\t\t}","\t\t},","\t\t{","\t\t\tpattern: /\\$\\w+/,","\t\t\talias: 'variable'","\t\t}","\t];","","\tPrism.languages.kotlin['string'].inside = Prism.languages.kotlin['raw-string'].inside = {","\t\tinterpolation: interpolation","\t};","","}(Prism));"],"l":{"1":2,"2":2,"19":0,"21":0,"28":0,"34":0,"41":0,"58":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-latex.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-latex.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{"1":1},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":17}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":61,"column":10}},"2":{"start":{"line":2,"column":1},"end":{"line":8,"column":7}},"3":{"start":{"line":10,"column":1},"end":{"line":60,"column":3}}},"branchMap":{},"code":["(function(Prism) {","\tvar funcPattern = /\\\\([^a-z()[\\]]|[a-z\\*]+)/i,","\t    insideEqu = {","\t\t    'equation-command': {","\t\t\t    pattern: funcPattern,","\t\t\t    alias: 'regex'","\t\t    }","\t    };","","\tPrism.languages.latex = {","\t\t'comment': /%.*/m,","\t\t// the verbatim environment prints whitespace to the document","\t\t'cdata':  {","\t\t\tpattern: /(\\\\begin\\{((?:verbatim|lstlisting)\\*?)\\})([\\w\\W]*?)(?=\\\\end\\{\\2\\})/,","\t\t\tlookbehind: true","\t\t},","\t\t/*","\t\t * equations can be between $ $ or \\( \\) or \\[ \\]","\t\t * (all are multiline)","\t\t */","\t\t'equation': [","\t\t\t{","\t\t\t\tpattern: /\\$(?:\\\\?[\\w\\W])*?\\$|\\\\\\((?:\\\\?[\\w\\W])*?\\\\\\)|\\\\\\[(?:\\\\?[\\w\\W])*?\\\\\\]/,","\t\t\t\tinside: insideEqu,","\t\t\t\talias: 'string'","\t\t\t},","\t\t\t{","\t\t\t\tpattern: /(\\\\begin\\{((?:equation|math|eqnarray|align|multline|gather)\\*?)\\})([\\w\\W]*?)(?=\\\\end\\{\\2\\})/,","\t\t\t\tlookbehind: true,","\t\t\t\tinside: insideEqu,","\t\t\t\talias: 'string'","\t\t\t}","\t\t],","\t\t/*","\t\t * arguments which are keywords or references are highlighted","\t\t * as keywords","\t\t */","\t\t'keyword': {","\t\t\tpattern: /(\\\\(?:begin|end|ref|cite|label|usepackage|documentclass)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,","\t\t\tlookbehind: true","\t\t},","\t\t'url': {","\t\t\tpattern: /(\\\\url\\{)[^}]+(?=\\})/,","\t\t\tlookbehind: true","\t\t},","\t\t/*","\t\t * section or chapter headlines are highlighted as bold so that","\t\t * they stand out more","\t\t */","\t\t'headline': {","\t\t\tpattern: /(\\\\(?:part|chapter|section|subsection|frametitle|subsubsection|paragraph|subparagraph|subsubparagraph|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\}(?:\\[[^\\]]+\\])?)/,","\t\t\tlookbehind: true,","\t\t\talias: 'class-name'","\t\t},","\t\t'function': {","\t\t\tpattern: funcPattern,","\t\t\talias: 'selector'","\t\t},","\t\t'punctuation': /[[\\]{}&]/","\t};","})(Prism);",""],"l":{"1":1,"2":1,"10":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-less.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-less.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":9,"column":0},"end":{"line":35,"column":3}},"2":{"start":{"line":38,"column":0},"end":{"line":40,"column":3}},"3":{"start":{"line":42,"column":0},"end":{"line":60,"column":3}}},"branchMap":{},"code":["/* FIXME :"," :extend() is not handled specifically : its highlighting is buggy."," Mixin usage must be inside a ruleset to be highlighted."," At-rules (e.g. import) containing interpolations are buggy."," Detached rulesets are highlighted as at-rules."," A comment before a mixin usage prevents the latter to be properly highlighted."," */","","Prism.languages.less = Prism.languages.extend('css', {","\t'comment': [","\t\t/\\/\\*[\\w\\W]*?\\*\\//,","\t\t{","\t\t\tpattern: /(^|[^\\\\])\\/\\/.*/,","\t\t\tlookbehind: true","\t\t}","\t],","\t'atrule': {","\t\tpattern: /@[\\w-]+?(?:\\([^{}]+\\)|[^(){};])*?(?=\\s*\\{)/i,","\t\tinside: {","\t\t\t'punctuation': /[:()]/","\t\t}","\t},","\t// selectors and mixins are considered the same","\t'selector': {","\t\tpattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\([^{}]*\\)|[^{};@])*?(?=\\s*\\{)/,","\t\tinside: {","\t\t\t// mixin parameters","\t\t\t'variable': /@+[\\w-]+/","\t\t}","\t},","","\t'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/i,","\t'punctuation': /[{}();:,]/,","\t'operator': /[+\\-*\\/]/","});","","// Invert function and punctuation positions","Prism.languages.insertBefore('less', 'punctuation', {","\t'function': Prism.languages.less.function","});","","Prism.languages.insertBefore('less', 'property', {","\t'variable': [","\t\t// Variable declaration (the colon must be consumed!)","\t\t{","\t\t\tpattern: /@[\\w-]+\\s*:/,","\t\t\tinside: {","\t\t\t\t\"punctuation\": /:/","\t\t\t}","\t\t},","","\t\t// Variable usage","\t\t/@@?[\\w-]+/","\t],","\t'mixin-usage': {","\t\tpattern: /([{;]\\s*)[.#](?!\\d)[\\w-]+.*?(?=[(;])/,","\t\tlookbehind: true,","\t\talias: 'function'","\t}","});",""],"l":{"9":1,"38":1,"42":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-livescript.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-livescript.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":116,"column":2}},"2":{"start":{"line":118,"column":0},"end":{"line":118,"column":115}}},"branchMap":{},"code":["Prism.languages.livescript = {","\t'interpolated-string': {","\t\tpattern: /(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,","\t\tgreedy: true,","\t\tinside: {","\t\t\t'variable': {","\t\t\t\tpattern: /(^|[^\\\\])#[a-z_](?:-?[a-z]|\\d)*/m,","\t\t\t\tlookbehind: true","\t\t\t},","\t\t\t'interpolation': {","\t\t\t\tpattern: /(^|[^\\\\])#\\{[^}]+\\}/m,","\t\t\t\tlookbehind: true,","\t\t\t\tinside: {","\t\t\t\t\t'interpolation-punctuation': {","\t\t\t\t\t\tpattern: /^#\\{|\\}$/,","\t\t\t\t\t\talias: 'variable'","\t\t\t\t\t}","\t\t\t\t\t// See rest below","\t\t\t\t}","\t\t\t},","\t\t\t'string': /[\\s\\S]+/","\t\t}","\t},","\t'comment': [","\t\t{","\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\//,","\t\t\tlookbehind: true,","\t\t\tgreedy: true","\t\t},","\t\t{","\t\t\tpattern: /(^|[^\\\\])#.*/,","\t\t\tlookbehind: true,","\t\t\tgreedy: true","\t\t}","\t],","\t'string': [","\t\t{","\t\t\tpattern: /('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,","\t\t\tgreedy: true","\t\t},","\t\t{","\t\t\tpattern: /<\\[[\\s\\S]*?\\]>/,","\t\t\tgreedy: true","\t\t},","\t\t/\\\\[^\\s,;\\])}]+/","\t],","\t'regex': [","\t\t{","\t\t\tpattern: /\\/\\/(\\[.+?]|\\\\.|(?!\\/\\/)[^\\\\])+\\/\\/[gimyu]{0,5}/,","\t\t\tgreedy: true,","\t\t\tinside: {","\t\t\t\t'comment': {","\t\t\t\t\tpattern: /(^|[^\\\\])#.*/,","\t\t\t\t\tlookbehind: true","\t\t\t\t}","\t\t\t}","\t\t},","\t\t{","\t\t\tpattern: /\\/(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}/,","\t\t\tgreedy: true","\t\t}","\t],","\t'keyword': {","\t\tpattern: /(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,","\t\tlookbehind: true","\t},","\t'keyword-operator': {","\t\tpattern: /(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?:nt| not)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,","\t\tlookbehind: true,","\t\talias: 'operator'","\t},","\t'boolean': {","\t\tpattern: /(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,","\t\tlookbehind: true","\t},","\t'argument': {","\t\t// Don't match .&. nor &&","\t\tpattern: /(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,","\t\tlookbehind: true,","\t\talias: 'variable'","\t},","\t'number': /\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,","\t'identifier': /[a-z_](?:-?[a-z]|\\d)*/i,","\t'operator': [","\t\t// Spaced .","\t\t{","\t\t\tpattern: /( )\\.(?= )/,","\t\t\tlookbehind: true","\t\t},","\t\t// Full list, in order:","\t\t// .= .~ .. ...","\t\t// .&. .^. .<<. .>>. .>>>.","\t\t// := :: ::=","\t\t// &&","\t\t// || |>","\t\t// < << <<< <<<<","\t\t// <- <-- <-! <--!","\t\t// <~ <~~ <~! <~~!","\t\t// <| <= <?","\t\t// > >> >= >?","\t\t// - -- -> -->","\t\t// + ++","\t\t// @ @@","\t\t// % %%","\t\t// * **","\t\t// ! != !~=","\t\t// !~> !~~>","\t\t// !-> !-->","\t\t// ~ ~> ~~> ~=","\t\t// = ==","\t\t// ^ ^^","\t\t// / ?","\t\t/\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/","\t],","\t'punctuation': /[(){}\\[\\]|.,:;`]/","};","","Prism.languages.livescript['interpolated-string'].inside['interpolation'].inside.rest = Prism.languages.livescript;"],"l":{"1":1,"118":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-lolcode.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-lolcode.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":54,"column":2}}},"branchMap":{},"code":["Prism.languages.lolcode = {","\t'comment': [","\t\t/\\bOBTW\\s+[\\s\\S]*?\\s+TLDR\\b/,","\t\t/\\bBTW.+/","\t],","\t'string': {","\t\tpattern: /\"(?::.|[^\"])*\"/,","\t\tinside: {","\t\t\t'variable': /:\\{[^}]+\\}/,","\t\t\t'symbol': [","\t\t\t\t/:\\([a-f\\d]+\\)/i,","\t\t\t\t/:\\[[^\\]]+\\]/,","\t\t\t\t/:[)>o\":]/","\t\t\t]","\t\t}","\t},","\t'number': /(-|\\b)\\d*\\.?\\d+/,","\t'symbol': {","\t\tpattern: /(^|\\s)(?:A )?(?:YARN|NUMBR|NUMBAR|TROOF|BUKKIT|NOOB)(?=\\s|,|$)/,","\t\tlookbehind: true,","\t\tinside: {","\t\t\t'keyword': /A(?=\\s)/","\t\t}","\t},","\t'label': {","\t\tpattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,","\t\tlookbehind: true,","\t\talias: 'string'","\t},","\t'function': {","\t\tpattern: /((?:^|\\s)(?:I IZ|HOW IZ I|IZ) )[a-zA-Z]\\w*/,","\t\tlookbehind: true","\t},","\t'keyword': [","\t\t{","\t\t\tpattern: /(^|\\s)(?:O HAI IM|KTHX|HAI|KTHXBYE|I HAS A|ITZ(?: A)?|R|AN|MKAY|SMOOSH|MAEK|IS NOW(?: A)?|VISIBLE|GIMMEH|O RLY\\?|YA RLY|NO WAI|OIC|MEBBE|WTF\\?|OMG|OMGWTF|GTFO|IM IN YR|IM OUTTA YR|FOUND YR|YR|TIL|WILE|UPPIN|NERFIN|I IZ|HOW IZ I|IF U SAY SO|SRS|HAS A|LIEK(?: A)?|IZ)(?=\\s|,|$)/,","\t\t\tlookbehind: true","\t\t},","\t\t/'Z(?=\\s|,|$)/","\t],","\t'boolean': {","\t\tpattern: /(^|\\s)(?:WIN|FAIL)(?=\\s|,|$)/,","\t\tlookbehind: true","\t},","\t'variable': {","\t\tpattern: /(^|\\s)IT(?=\\s|,|$)/,","\t\tlookbehind: true","\t},","\t'operator': {","\t\tpattern: /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:SUM|DIFF|PRODUKT|QUOSHUNT|MOD|BIGGR|SMALLR|BOTH|EITHER|WON|ALL|ANY) OF)(?=\\s|,|$)/,","\t\tlookbehind: true","\t},","\t'punctuation': /\\.{3}|…|,|!/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-lua.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-lua.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":20,"column":2}}},"branchMap":{},"code":["Prism.languages.lua = {","\t'comment': /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,","\t// \\z may be used to skip the following space","\t'string': {","\t\tpattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[\\s\\S]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,","\t\tgreedy: true","\t},","\t'number': /\\b0x[a-f\\d]+\\.?[a-f\\d]*(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|\\.?\\d*(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,","\t'keyword': /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,","\t'function': /(?!\\d)\\w+(?=\\s*(?:[({]))/,","\t'operator': [","\t\t/[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/,","\t\t{","\t\t\t// Match \"..\" but don't break \"...\"","\t\t\tpattern: /(^|[^.])\\.\\.(?!\\.)/,","\t\t\tlookbehind: true","\t\t}","\t],","\t'punctuation': /[\\[\\](){},;]|\\.+|:+/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-makefile.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-makefile.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":31,"column":2}}},"branchMap":{},"code":["Prism.languages.makefile = {","\t'comment': {","\t\tpattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|.)*/,","\t\tlookbehind: true","\t},","\t'string': /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,","","\t// Built-in target names","\t'builtin': /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,","","\t// Targets","\t'symbol': {","\t\tpattern: /^[^:=\\r\\n]+(?=\\s*:(?!=))/m,","\t\tinside: {","\t\t\t'variable': /\\$+(?:[^(){}:#=\\s]+|(?=[({]))/","\t\t}","\t},","\t'variable': /\\$+(?:[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,","","\t'keyword': [","\t\t// Directives","\t\t/-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,","\t\t// Functions","\t\t{","\t\t\tpattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,","\t\t\tlookbehind: true","\t\t}","\t],","\t'operator': /(?:::|[?:+!])?=|[|@]/,","\t'punctuation': /[:;(){}]/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-markdown.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-markdown.js","s":{"1":2,"2":2,"3":2,"4":1,"5":1,"6":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":64}},"2":{"start":{"line":2,"column":0},"end":{"line":115,"column":3}},"3":{"start":{"line":117,"column":0},"end":{"line":117,"column":99}},"4":{"start":{"line":118,"column":0},"end":{"line":118,"column":101}},"5":{"start":{"line":119,"column":0},"end":{"line":119,"column":105}},"6":{"start":{"line":120,"column":0},"end":{"line":120,"column":103}}},"branchMap":{},"code":["Prism.languages.markdown = Prism.languages.extend('markup', {});","Prism.languages.insertBefore('markdown', 'prolog', {","\t'blockquote': {","\t\t// > ...","\t\tpattern: /^>(?:[\\t ]*>)*/m,","\t\talias: 'punctuation'","\t},","\t'code': [","\t\t{","\t\t\t// Prefixed by 4 spaces or 1 tab","\t\t\tpattern: /^(?: {4}|\\t).+/m,","\t\t\talias: 'keyword'","\t\t},","\t\t{","\t\t\t// `code`","\t\t\t// ``code``","\t\t\tpattern: /``.+?``|`[^`\\n]+`/,","\t\t\talias: 'keyword'","\t\t}","\t],","\t'title': [","\t\t{","\t\t\t// title 1","\t\t\t// =======","","\t\t\t// title 2","\t\t\t// -------","\t\t\tpattern: /\\w+.*(?:\\r?\\n|\\r)(?:==+|--+)/,","\t\t\talias: 'important',","\t\t\tinside: {","\t\t\t\tpunctuation: /==+$|--+$/","\t\t\t}","\t\t},","\t\t{","\t\t\t// # title 1","\t\t\t// ###### title 6","\t\t\tpattern: /(^\\s*)#+.+/m,","\t\t\tlookbehind: true,","\t\t\talias: 'important',","\t\t\tinside: {","\t\t\t\tpunctuation: /^#+|#+$/","\t\t\t}","\t\t}","\t],","\t'hr': {","\t\t// ***","\t\t// ---","\t\t// * * *","\t\t// -----------","\t\tpattern: /(^\\s*)([*-])([\\t ]*\\2){2,}(?=\\s*$)/m,","\t\tlookbehind: true,","\t\talias: 'punctuation'","\t},","\t'list': {","\t\t// * item","\t\t// + item","\t\t// - item","\t\t// 1. item","\t\tpattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,","\t\tlookbehind: true,","\t\talias: 'punctuation'","\t},","\t'url-reference': {","\t\t// [id]: http://example.com \"Optional title\"","\t\t// [id]: http://example.com 'Optional title'","\t\t// [id]: http://example.com (Optional title)","\t\t// [id]: <http://example.com> \"Optional title\"","\t\tpattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,","\t\tinside: {","\t\t\t'variable': {","\t\t\t\tpattern: /^(!?\\[)[^\\]]+/,","\t\t\t\tlookbehind: true","\t\t\t},","\t\t\t'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,","\t\t\t'punctuation': /^[\\[\\]!:]|[<>]/","\t\t},","\t\talias: 'url'","\t},","\t'bold': {","\t\t// **strong**","\t\t// __strong__","","\t\t// Allow only one line break","\t\tpattern: /(^|[^\\\\])(\\*\\*|__)(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,","\t\tlookbehind: true,","\t\tinside: {","\t\t\t'punctuation': /^\\*\\*|^__|\\*\\*$|__$/","\t\t}","\t},","\t'italic': {","\t\t// *em*","\t\t// _em_","","\t\t// Allow only one line break","\t\tpattern: /(^|[^\\\\])([*_])(?:(?:\\r?\\n|\\r)(?!\\r?\\n|\\r)|.)+?\\2/,","\t\tlookbehind: true,","\t\tinside: {","\t\t\t'punctuation': /^[*_]|[*_]$/","\t\t}","\t},","\t'url': {","\t\t// [example](http://example.com \"Optional title\")","\t\t// [example] [id]","\t\tpattern: /!?\\[[^\\]]+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)| ?\\[[^\\]\\n]*\\])/,","\t\tinside: {","\t\t\t'variable': {","\t\t\t\tpattern: /(!?\\[)[^\\]]+(?=\\]$)/,","\t\t\t\tlookbehind: true","\t\t\t},","\t\t\t'string': {","\t\t\t\tpattern: /\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/","\t\t\t}","\t\t}","\t}","});","","Prism.languages.markdown['bold'].inside['url'] = Prism.util.clone(Prism.languages.markdown['url']);","Prism.languages.markdown['italic'].inside['url'] = Prism.util.clone(Prism.languages.markdown['url']);","Prism.languages.markdown['bold'].inside['italic'] = Prism.util.clone(Prism.languages.markdown['italic']);","Prism.languages.markdown['italic'].inside['bold'] = Prism.util.clone(Prism.languages.markdown['bold']);"],"l":{"1":2,"2":2,"117":2,"118":1,"119":1,"120":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-markup.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-markup.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":1,"7":1,"8":1},"b":{"1":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":36,"loc":{"start":{"line":36,"column":24},"end":{"line":36,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":33,"column":2}},"2":{"start":{"line":36,"column":0},"end":{"line":41,"column":3}},"3":{"start":{"line":38,"column":1},"end":{"line":40,"column":2}},"4":{"start":{"line":39,"column":2},"end":{"line":39,"column":62}},"5":{"start":{"line":43,"column":0},"end":{"line":43,"column":45}},"6":{"start":{"line":44,"column":0},"end":{"line":44,"column":46}},"7":{"start":{"line":45,"column":0},"end":{"line":45,"column":48}},"8":{"start":{"line":46,"column":0},"end":{"line":46,"column":45}}},"branchMap":{"1":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":1},"end":{"line":38,"column":1}},{"start":{"line":38,"column":1},"end":{"line":38,"column":1}}]}},"code":["Prism.languages.markup = {","\t'comment': /<!--[\\w\\W]*?-->/,","\t'prolog': /<\\?[\\w\\W]+?\\?>/,","\t'doctype': /<!DOCTYPE[\\w\\W]+?>/i,","\t'cdata': /<!\\[CDATA\\[[\\w\\W]*?]]>/i,","\t'tag': {","\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\\\1|\\\\?(?!\\1)[\\w\\W])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,","\t\tinside: {","\t\t\t'tag': {","\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,","\t\t\t\tinside: {","\t\t\t\t\t'punctuation': /^<\\/?/,","\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/","\t\t\t\t}","\t\t\t},","\t\t\t'attr-value': {","\t\t\t\tpattern: /=(?:('|\")[\\w\\W]*?(\\1)|[^\\s>]+)/i,","\t\t\t\tinside: {","\t\t\t\t\t'punctuation': /[=>\"']/","\t\t\t\t}","\t\t\t},","\t\t\t'punctuation': /\\/?>/,","\t\t\t'attr-name': {","\t\t\t\tpattern: /[^\\s>\\/]+/,","\t\t\t\tinside: {","\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/","\t\t\t\t}","\t\t\t}","","\t\t}","\t},","\t'entity': /&#?[\\da-z]{1,8};/i","};","","// Plugin to make entity title show the real entity, idea by Roman Komarov","Prism.hooks.add('wrap', function(env) {","","\tif (env.type === 'entity') {","\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');","\t}","});","","Prism.languages.xml = Prism.languages.markup;","Prism.languages.html = Prism.languages.markup;","Prism.languages.mathml = Prism.languages.markup;","Prism.languages.svg = Prism.languages.markup;",""],"l":{"1":1,"36":1,"38":0,"39":0,"43":1,"44":1,"45":1,"46":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-matlab.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-matlab.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":14,"column":2}}},"branchMap":{},"code":["Prism.languages.matlab = {","\t// We put string before comment, because of printf() patterns that contain \"%\"","\t'string': /\\B'(?:''|[^'\\n])*'/,","\t'comment': [","\t\t/%\\{[\\s\\S]*?\\}%/,","\t\t/%.+/","\t],","\t// FIXME We could handle imaginary numbers as a whole","\t'number': /\\b-?(?:\\d*\\.?\\d+(?:[eE][+-]?\\d+)?(?:[ij])?|[ij])\\b/,","\t'keyword': /\\b(?:break|case|catch|continue|else|elseif|end|for|function|if|inf|NaN|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,","\t'function': /(?!\\d)\\w+(?=\\s*\\()/,","\t'operator': /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,","\t'punctuation': /\\.{3}|[.,;\\[\\](){}!]/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-mel.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-mel.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":38,"column":2}},"2":{"start":{"line":39,"column":0},"end":{"line":39,"column":80}}},"branchMap":{},"code":["Prism.languages.mel = {","\t'comment': /\\/\\/.*/,","\t'code': {","\t\tpattern: /`(?:\\\\.|[^\\\\`\\r\\n])*`/,","\t\talias: 'italic',","\t\tinside: {","\t\t\t'delimiter': {","\t\t\t\tpattern: /^`|`$/,","\t\t\t\talias: 'punctuation'","\t\t\t}","\t\t\t// See rest below","\t\t}","\t},","\t'string': /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,","\t'variable': /\\$\\w+/,","\t'number': /(?:\\b|-)(?:0x[\\da-fA-F]+|\\d+\\.?\\d*)/,","\t'flag': {","\t\tpattern: /-[^\\d\\W]\\w*/,","\t\talias: 'operator'","\t},","\t'keyword': /\\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\\b/,","\t'function': /\\w+(?=\\()|\\b(?:about|abs|addAttr|addAttributeEditorNodeHelp|addDynamic|addNewShelfTab|addPP|addPanelCategory|addPrefixToName|advanceToNextDrivenKey|affectedNet|affects|aimConstraint|air|alias|aliasAttr|align|alignCtx|alignCurve|alignSurface|allViewFit|ambientLight|angle|angleBetween|animCone|animCurveEditor|animDisplay|animView|annotate|appendStringArray|applicationName|applyAttrPreset|applyTake|arcLenDimContext|arcLengthDimension|arclen|arrayMapper|art3dPaintCtx|artAttrCtx|artAttrPaintVertexCtx|artAttrSkinPaintCtx|artAttrTool|artBuildPaintMenu|artFluidAttrCtx|artPuttyCtx|artSelectCtx|artSetPaintCtx|artUserPaintCtx|assignCommand|assignInputDevice|assignViewportFactories|attachCurve|attachDeviceAttr|attachSurface|attrColorSliderGrp|attrCompatibility|attrControlGrp|attrEnumOptionMenu|attrEnumOptionMenuGrp|attrFieldGrp|attrFieldSliderGrp|attrNavigationControlGrp|attrPresetEditWin|attributeExists|attributeInfo|attributeMenu|attributeQuery|autoKeyframe|autoPlace|bakeClip|bakeFluidShading|bakePartialHistory|bakeResults|bakeSimulation|basename|basenameEx|batchRender|bessel|bevel|bevelPlus|binMembership|bindSkin|blend2|blendShape|blendShapeEditor|blendShapePanel|blendTwoAttr|blindDataType|boneLattice|boundary|boxDollyCtx|boxZoomCtx|bufferCurve|buildBookmarkMenu|buildKeyframeMenu|button|buttonManip|CBG|cacheFile|cacheFileCombine|cacheFileMerge|cacheFileTrack|camera|cameraView|canCreateManip|canvas|capitalizeString|catch|catchQuiet|ceil|changeSubdivComponentDisplayLevel|changeSubdivRegion|channelBox|character|characterMap|characterOutlineEditor|characterize|chdir|checkBox|checkBoxGrp|checkDefaultRenderGlobals|choice|circle|circularFillet|clamp|clear|clearCache|clip|clipEditor|clipEditorCurrentTimeCtx|clipSchedule|clipSchedulerOutliner|clipTrimBefore|closeCurve|closeSurface|cluster|cmdFileOutput|cmdScrollFieldExecuter|cmdScrollFieldReporter|cmdShell|coarsenSubdivSelectionList|collision|color|colorAtPoint|colorEditor|colorIndex|colorIndexSliderGrp|colorSliderButtonGrp|colorSliderGrp|columnLayout|commandEcho|commandLine|commandPort|compactHairSystem|componentEditor|compositingInterop|computePolysetVolume|condition|cone|confirmDialog|connectAttr|connectControl|connectDynamic|connectJoint|connectionInfo|constrain|constrainValue|constructionHistory|container|containsMultibyte|contextInfo|control|convertFromOldLayers|convertIffToPsd|convertLightmap|convertSolidTx|convertTessellation|convertUnit|copyArray|copyFlexor|copyKey|copySkinWeights|cos|cpButton|cpCache|cpClothSet|cpCollision|cpConstraint|cpConvClothToMesh|cpForces|cpGetSolverAttr|cpPanel|cpProperty|cpRigidCollisionFilter|cpSeam|cpSetEdit|cpSetSolverAttr|cpSolver|cpSolverTypes|cpTool|cpUpdateClothUVs|createDisplayLayer|createDrawCtx|createEditor|createLayeredPsdFile|createMotionField|createNewShelf|createNode|createRenderLayer|createSubdivRegion|cross|crossProduct|ctxAbort|ctxCompletion|ctxEditMode|ctxTraverse|currentCtx|currentTime|currentTimeCtx|currentUnit|curve|curveAddPtCtx|curveCVCtx|curveEPCtx|curveEditorCtx|curveIntersect|curveMoveEPCtx|curveOnSurface|curveSketchCtx|cutKey|cycleCheck|cylinder|dagPose|date|defaultLightListCheckBox|defaultNavigation|defineDataServer|defineVirtualDevice|deformer|deg_to_rad|delete|deleteAttr|deleteShadingGroupsAndMaterials|deleteShelfTab|deleteUI|deleteUnusedBrushes|delrandstr|detachCurve|detachDeviceAttr|detachSurface|deviceEditor|devicePanel|dgInfo|dgdirty|dgeval|dgtimer|dimWhen|directKeyCtx|directionalLight|dirmap|dirname|disable|disconnectAttr|disconnectJoint|diskCache|displacementToPoly|displayAffected|displayColor|displayCull|displayLevelOfDetail|displayPref|displayRGBColor|displaySmoothness|displayStats|displayString|displaySurface|distanceDimContext|distanceDimension|doBlur|dolly|dollyCtx|dopeSheetEditor|dot|dotProduct|doubleProfileBirailSurface|drag|dragAttrContext|draggerContext|dropoffLocator|duplicate|duplicateCurve|duplicateSurface|dynCache|dynControl|dynExport|dynExpression|dynGlobals|dynPaintEditor|dynParticleCtx|dynPref|dynRelEdPanel|dynRelEditor|dynamicLoad|editAttrLimits|editDisplayLayerGlobals|editDisplayLayerMembers|editRenderLayerAdjustment|editRenderLayerGlobals|editRenderLayerMembers|editor|editorTemplate|effector|emit|emitter|enableDevice|encodeString|endString|endsWith|env|equivalent|equivalentTol|erf|error|eval|evalDeferred|evalEcho|event|exactWorldBoundingBox|exclusiveLightCheckBox|exec|executeForEachObject|exists|exp|expression|expressionEditorListen|extendCurve|extendSurface|extrude|fcheck|fclose|feof|fflush|fgetline|fgetword|file|fileBrowserDialog|fileDialog|fileExtension|fileInfo|filetest|filletCurve|filter|filterCurve|filterExpand|filterStudioImport|findAllIntersections|findAnimCurves|findKeyframe|findMenuItem|findRelatedSkinCluster|finder|firstParentOf|fitBspline|flexor|floatEq|floatField|floatFieldGrp|floatScrollBar|floatSlider|floatSlider2|floatSliderButtonGrp|floatSliderGrp|floor|flow|fluidCacheInfo|fluidEmitter|fluidVoxelInfo|flushUndo|fmod|fontDialog|fopen|formLayout|format|fprint|frameLayout|fread|freeFormFillet|frewind|fromNativePath|fwrite|gamma|gauss|geometryConstraint|getApplicationVersionAsFloat|getAttr|getClassification|getDefaultBrush|getFileList|getFluidAttr|getInputDeviceRange|getMayaPanelTypes|getModifiers|getPanel|getParticleAttr|getPluginResource|getenv|getpid|glRender|glRenderEditor|globalStitch|gmatch|goal|gotoBindPose|grabColor|gradientControl|gradientControlNoAttr|graphDollyCtx|graphSelectContext|graphTrackCtx|gravity|grid|gridLayout|group|groupObjectsByName|HfAddAttractorToAS|HfAssignAS|HfBuildEqualMap|HfBuildFurFiles|HfBuildFurImages|HfCancelAFR|HfConnectASToHF|HfCreateAttractor|HfDeleteAS|HfEditAS|HfPerformCreateAS|HfRemoveAttractorFromAS|HfSelectAttached|HfSelectAttractors|HfUnAssignAS|hardenPointCurve|hardware|hardwareRenderPanel|headsUpDisplay|headsUpMessage|help|helpLine|hermite|hide|hilite|hitTest|hotBox|hotkey|hotkeyCheck|hsv_to_rgb|hudButton|hudSlider|hudSliderButton|hwReflectionMap|hwRender|hwRenderLoad|hyperGraph|hyperPanel|hyperShade|hypot|iconTextButton|iconTextCheckBox|iconTextRadioButton|iconTextRadioCollection|iconTextScrollList|iconTextStaticLabel|ikHandle|ikHandleCtx|ikHandleDisplayScale|ikSolver|ikSplineHandleCtx|ikSystem|ikSystemInfo|ikfkDisplayMethod|illustratorCurves|image|imfPlugins|inheritTransform|insertJoint|insertJointCtx|insertKeyCtx|insertKnotCurve|insertKnotSurface|instance|instanceable|instancer|intField|intFieldGrp|intScrollBar|intSlider|intSliderGrp|interToUI|internalVar|intersect|iprEngine|isAnimCurve|isConnected|isDirty|isParentOf|isSameObject|isTrue|isValidObjectName|isValidString|isValidUiName|isolateSelect|itemFilter|itemFilterAttr|itemFilterRender|itemFilterType|joint|jointCluster|jointCtx|jointDisplayScale|jointLattice|keyTangent|keyframe|keyframeOutliner|keyframeRegionCurrentTimeCtx|keyframeRegionDirectKeyCtx|keyframeRegionDollyCtx|keyframeRegionInsertKeyCtx|keyframeRegionMoveKeyCtx|keyframeRegionScaleKeyCtx|keyframeRegionSelectKeyCtx|keyframeRegionSetKeyCtx|keyframeRegionTrackCtx|keyframeStats|lassoContext|lattice|latticeDeformKeyCtx|launch|launchImageEditor|layerButton|layeredShaderPort|layeredTexturePort|layout|layoutDialog|lightList|lightListEditor|lightListPanel|lightlink|lineIntersection|linearPrecision|linstep|listAnimatable|listAttr|listCameras|listConnections|listDeviceAttachments|listHistory|listInputDeviceAxes|listInputDeviceButtons|listInputDevices|listMenuAnnotation|listNodeTypes|listPanelCategories|listRelatives|listSets|listTransforms|listUnselected|listerEditor|loadFluid|loadNewShelf|loadPlugin|loadPluginLanguageResources|loadPrefObjects|localizedPanelLabel|lockNode|loft|log|longNameOf|lookThru|ls|lsThroughFilter|lsType|lsUI|Mayatomr|mag|makeIdentity|makeLive|makePaintable|makeRoll|makeSingleSurface|makeTubeOn|makebot|manipMoveContext|manipMoveLimitsCtx|manipOptions|manipRotateContext|manipRotateLimitsCtx|manipScaleContext|manipScaleLimitsCtx|marker|match|max|memory|menu|menuBarLayout|menuEditor|menuItem|menuItemToShelf|menuSet|menuSetPref|messageLine|min|minimizeApp|mirrorJoint|modelCurrentTimeCtx|modelEditor|modelPanel|mouse|movIn|movOut|move|moveIKtoFK|moveKeyCtx|moveVertexAlongDirection|multiProfileBirailSurface|mute|nParticle|nameCommand|nameField|namespace|namespaceInfo|newPanelItems|newton|nodeCast|nodeIconButton|nodeOutliner|nodePreset|nodeType|noise|nonLinear|normalConstraint|normalize|nurbsBoolean|nurbsCopyUVSet|nurbsCube|nurbsEditUV|nurbsPlane|nurbsSelect|nurbsSquare|nurbsToPoly|nurbsToPolygonsPref|nurbsToSubdiv|nurbsToSubdivPref|nurbsUVSet|nurbsViewDirectionVector|objExists|objectCenter|objectLayer|objectType|objectTypeUI|obsoleteProc|oceanNurbsPreviewPlane|offsetCurve|offsetCurveOnSurface|offsetSurface|openGLExtension|openMayaPref|optionMenu|optionMenuGrp|optionVar|orbit|orbitCtx|orientConstraint|outlinerEditor|outlinerPanel|overrideModifier|paintEffectsDisplay|pairBlend|palettePort|paneLayout|panel|panelConfiguration|panelHistory|paramDimContext|paramDimension|paramLocator|parent|parentConstraint|particle|particleExists|particleInstancer|particleRenderInfo|partition|pasteKey|pathAnimation|pause|pclose|percent|performanceOptions|pfxstrokes|pickWalk|picture|pixelMove|planarSrf|plane|play|playbackOptions|playblast|plugAttr|plugNode|pluginInfo|pluginResourceUtil|pointConstraint|pointCurveConstraint|pointLight|pointMatrixMult|pointOnCurve|pointOnSurface|pointPosition|poleVectorConstraint|polyAppend|polyAppendFacetCtx|polyAppendVertex|polyAutoProjection|polyAverageNormal|polyAverageVertex|polyBevel|polyBlendColor|polyBlindData|polyBoolOp|polyBridgeEdge|polyCacheMonitor|polyCheck|polyChipOff|polyClipboard|polyCloseBorder|polyCollapseEdge|polyCollapseFacet|polyColorBlindData|polyColorDel|polyColorPerVertex|polyColorSet|polyCompare|polyCone|polyCopyUV|polyCrease|polyCreaseCtx|polyCreateFacet|polyCreateFacetCtx|polyCube|polyCut|polyCutCtx|polyCylinder|polyCylindricalProjection|polyDelEdge|polyDelFacet|polyDelVertex|polyDuplicateAndConnect|polyDuplicateEdge|polyEditUV|polyEditUVShell|polyEvaluate|polyExtrudeEdge|polyExtrudeFacet|polyExtrudeVertex|polyFlipEdge|polyFlipUV|polyForceUV|polyGeoSampler|polyHelix|polyInfo|polyInstallAction|polyLayoutUV|polyListComponentConversion|polyMapCut|polyMapDel|polyMapSew|polyMapSewMove|polyMergeEdge|polyMergeEdgeCtx|polyMergeFacet|polyMergeFacetCtx|polyMergeUV|polyMergeVertex|polyMirrorFace|polyMoveEdge|polyMoveFacet|polyMoveFacetUV|polyMoveUV|polyMoveVertex|polyNormal|polyNormalPerVertex|polyNormalizeUV|polyOptUvs|polyOptions|polyOutput|polyPipe|polyPlanarProjection|polyPlane|polyPlatonicSolid|polyPoke|polyPrimitive|polyPrism|polyProjection|polyPyramid|polyQuad|polyQueryBlindData|polyReduce|polySelect|polySelectConstraint|polySelectConstraintMonitor|polySelectCtx|polySelectEditCtx|polySeparate|polySetToFaceNormal|polySewEdge|polyShortestPathCtx|polySmooth|polySoftEdge|polySphere|polySphericalProjection|polySplit|polySplitCtx|polySplitEdge|polySplitRing|polySplitVertex|polyStraightenUVBorder|polySubdivideEdge|polySubdivideFacet|polyToSubdiv|polyTorus|polyTransfer|polyTriangulate|polyUVSet|polyUnite|polyWedgeFace|popen|popupMenu|pose|pow|preloadRefEd|print|progressBar|progressWindow|projFileViewer|projectCurve|projectTangent|projectionContext|projectionManip|promptDialog|propModCtx|propMove|psdChannelOutliner|psdEditTextureFile|psdExport|psdTextureFile|putenv|pwd|python|querySubdiv|quit|rad_to_deg|radial|radioButton|radioButtonGrp|radioCollection|radioMenuItemCollection|rampColorPort|rand|randomizeFollicles|randstate|rangeControl|readTake|rebuildCurve|rebuildSurface|recordAttr|recordDevice|redo|reference|referenceEdit|referenceQuery|refineSubdivSelectionList|refresh|refreshAE|registerPluginResource|rehash|reloadImage|removeJoint|removeMultiInstance|removePanelCategory|rename|renameAttr|renameSelectionList|renameUI|render|renderGlobalsNode|renderInfo|renderLayerButton|renderLayerParent|renderLayerPostProcess|renderLayerUnparent|renderManip|renderPartition|renderQualityNode|renderSettings|renderThumbnailUpdate|renderWindowEditor|renderWindowSelectContext|renderer|reorder|reorderDeformers|requires|reroot|resampleFluid|resetAE|resetPfxToPolyCamera|resetTool|resolutionNode|retarget|reverseCurve|reverseSurface|revolve|rgb_to_hsv|rigidBody|rigidSolver|roll|rollCtx|rootOf|rot|rotate|rotationInterpolation|roundConstantRadius|rowColumnLayout|rowLayout|runTimeCommand|runup|sampleImage|saveAllShelves|saveAttrPreset|saveFluid|saveImage|saveInitialState|saveMenu|savePrefObjects|savePrefs|saveShelf|saveToolSettings|scale|scaleBrushBrightness|scaleComponents|scaleConstraint|scaleKey|scaleKeyCtx|sceneEditor|sceneUIReplacement|scmh|scriptCtx|scriptEditorInfo|scriptJob|scriptNode|scriptTable|scriptToShelf|scriptedPanel|scriptedPanelType|scrollField|scrollLayout|sculpt|searchPathArray|seed|selLoadSettings|select|selectContext|selectCurveCV|selectKey|selectKeyCtx|selectKeyframeRegionCtx|selectMode|selectPref|selectPriority|selectType|selectedNodes|selectionConnection|separator|setAttr|setAttrEnumResource|setAttrMapping|setAttrNiceNameResource|setConstraintRestPosition|setDefaultShadingGroup|setDrivenKeyframe|setDynamic|setEditCtx|setEditor|setFluidAttr|setFocus|setInfinity|setInputDeviceMapping|setKeyCtx|setKeyPath|setKeyframe|setKeyframeBlendshapeTargetWts|setMenuMode|setNodeNiceNameResource|setNodeTypeFlag|setParent|setParticleAttr|setPfxToPolyCamera|setPluginResource|setProject|setStampDensity|setStartupMessage|setState|setToolTo|setUITemplate|setXformManip|sets|shadingConnection|shadingGeometryRelCtx|shadingLightRelCtx|shadingNetworkCompare|shadingNode|shapeCompare|shelfButton|shelfLayout|shelfTabLayout|shellField|shortNameOf|showHelp|showHidden|showManipCtx|showSelectionInTitle|showShadingGroupAttrEditor|showWindow|sign|simplify|sin|singleProfileBirailSurface|size|sizeBytes|skinCluster|skinPercent|smoothCurve|smoothTangentSurface|smoothstep|snap2to2|snapKey|snapMode|snapTogetherCtx|snapshot|soft|softMod|softModCtx|sort|sound|soundControl|source|spaceLocator|sphere|sphrand|spotLight|spotLightPreviewPort|spreadSheetEditor|spring|sqrt|squareSurface|srtContext|stackTrace|startString|startsWith|stitchAndExplodeShell|stitchSurface|stitchSurfacePoints|strcmp|stringArrayCatenate|stringArrayContains|stringArrayCount|stringArrayInsertAtIndex|stringArrayIntersector|stringArrayRemove|stringArrayRemoveAtIndex|stringArrayRemoveDuplicates|stringArrayRemoveExact|stringArrayToString|stringToStringArray|strip|stripPrefixFromName|stroke|subdAutoProjection|subdCleanTopology|subdCollapse|subdDuplicateAndConnect|subdEditUV|subdListComponentConversion|subdMapCut|subdMapSewMove|subdMatchTopology|subdMirror|subdToBlind|subdToPoly|subdTransferUVsToCache|subdiv|subdivCrease|subdivDisplaySmoothness|substitute|substituteAllString|substituteGeometry|substring|surface|surfaceSampler|surfaceShaderList|swatchDisplayPort|switchTable|symbolButton|symbolCheckBox|sysFile|system|tabLayout|tan|tangentConstraint|texLatticeDeformContext|texManipContext|texMoveContext|texMoveUVShellContext|texRotateContext|texScaleContext|texSelectContext|texSelectShortestPathCtx|texSmudgeUVContext|texWinToolCtx|text|textCurves|textField|textFieldButtonGrp|textFieldGrp|textManip|textScrollList|textToShelf|textureDisplacePlane|textureHairColor|texturePlacementContext|textureWindow|threadCount|threePointArcCtx|timeControl|timePort|timerX|toNativePath|toggle|toggleAxis|toggleWindowVisibility|tokenize|tokenizeList|tolerance|tolower|toolButton|toolCollection|toolDropped|toolHasOptions|toolPropertyWindow|torus|toupper|trace|track|trackCtx|transferAttributes|transformCompare|transformLimits|translator|trim|trunc|truncateFluidCache|truncateHairCache|tumble|tumbleCtx|turbulence|twoPointArcCtx|uiRes|uiTemplate|unassignInputDevice|undo|undoInfo|ungroup|uniform|unit|unloadPlugin|untangleUV|untitledFileName|untrim|upAxis|updateAE|userCtx|uvLink|uvSnapshot|validateShelfName|vectorize|view2dToolCtx|viewCamera|viewClipPlane|viewFit|viewHeadOn|viewLookAt|viewManip|viewPlace|viewSet|visor|volumeAxis|vortex|waitCursor|warning|webBrowser|webBrowserPrefs|whatIs|window|windowPref|wire|wireContext|workspace|wrinkle|wrinkleContext|writeTake|xbmLangPathList|xform)\\b/,","\t","\t'operator': [","\t\t/\\+[+=]?|-[-=]?|&&|\\|\\||[<>]=|[*\\/!=]=?|[%^]/,","\t\t{","\t\t\t// We don't want to match <<","\t\t\tpattern: /(^|[^<])<(?!<)/,","\t\t\tlookbehind: true","\t\t},","\t\t{","\t\t\t// We don't want to match >>","\t\t\tpattern: /(^|[^>])>(?!>)/,","\t\t\tlookbehind: true","\t\t}","\t],","\t'punctuation': /<<|>>|[.,:;?\\[\\](){}]/","};","Prism.languages.mel['code'].inside.rest = Prism.util.clone(Prism.languages.mel);"],"l":{"1":1,"39":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-mizar.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-mizar.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":12,"column":2}}},"branchMap":{},"code":["Prism.languages.mizar = {","\t'comment': /::.+/,","\t'keyword': /@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|equals|end|environ|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:y|ies)|when|where|with|wrt)\\b/,","\t'parameter': {","\t\tpattern: /\\$(?:10|\\d)/,","\t\talias: 'variable'","\t},","\t'variable': /\\w+(?=:)/,","\t'number': /(?:\\b|-)\\d+\\b/,","\t'operator': /\\.\\.\\.|->|&|\\.?=/,","\t'punctuation': /\\(#|#\\)|[,:;\\[\\](){}]/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-monkey.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-monkey.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":25,"column":2}}},"branchMap":{},"code":["Prism.languages.monkey = {","\t'string': /\"[^\"\\r\\n]*\"/,","\t'comment': [","\t\t/^#Rem\\s+[\\s\\S]*?^#End/im,","\t\t/'.+/,","\t],","\t'preprocessor': {","\t\tpattern: /(^[ \\t]*)#.+/m,","\t\tlookbehind: true,","\t\talias: 'comment'","\t},","\t'function': /\\w+(?=\\()/,","\t'type-char': {","\t\tpattern: /(\\w)[?%#$]/,","\t\tlookbehind: true,","\t\talias: 'variable'","\t},","\t'number': {","\t\tpattern: /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+((?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,","\t\tlookbehind: true","\t},","\t'keyword': /\\b(?:Void|Strict|Public|Private|Property|Bool|Int|Float|String|Array|Object|Continue|Exit|Import|Extern|New|Self|Super|Try|Catch|Eachin|True|False|Extends|Abstract|Final|Select|Case|Default|Const|Local|Global|Field|Method|Function|Class|End|If|Then|Else|ElseIf|EndIf|While|Wend|Repeat|Until|Forever|For|To|Step|Next|Return|Module|Interface|Implements|Inline|Throw|Null)\\b/i,","\t'operator': /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,","\t'punctuation': /[.,:;()\\[\\]]/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-nasm.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-nasm.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":24,"column":2}}},"branchMap":{},"code":["Prism.languages.nasm = {","\t'comment': /;.*$/m,","\t'string': /(\"|'|`)(\\\\?.)*?\\1/m,","\t'label': {","\t\tpattern: /(^\\s*)[A-Za-z._?$][\\w.?$@~#]*:/m,","\t\tlookbehind: true,","\t\talias: 'function'","\t},","\t'keyword': [","\t\t/\\[?BITS (16|32|64)\\]?/m,","\t\t{","\t\t\tpattern: /(^\\s*)section\\s*[a-zA-Z\\.]+:?/im,","\t\t\tlookbehind: true","\t\t},","\t\t/(?:extern|global)[^;\\r\\n]*/im,","\t\t/(?:CPU|FLOAT|DEFAULT).*$/m","\t],","\t'register': {","\t\tpattern: /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(bp|sp|si|di)|[cdefgs]s)\\b/i,","\t\talias: 'variable'","\t},","\t'number': /(\\b|-|(?=\\$))(0[hx][\\da-f]*\\.?[\\da-f]+(p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|\\d*\\.?\\d+(\\.?e[+-]?\\d+)?[dt]?)\\b/i,","\t'operator': /[\\[\\]*+\\-\\/%<>=&|$!]/","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-nginx.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-nginx.js","s":{"1":2,"2":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":7,"column":3}},"2":{"start":{"line":9,"column":0},"end":{"line":11,"column":3}}},"branchMap":{},"code":["Prism.languages.nginx = Prism.languages.extend('clike', {","        'comment': {","                pattern: /(^|[^\"{\\\\])#.*/,","                lookbehind: true","        },","        'keyword': /\\b(?:CONTENT_|DOCUMENT_|GATEWAY_|HTTP_|HTTPS|if_not_empty|PATH_|QUERY_|REDIRECT_|REMOTE_|REQUEST_|SCGI|SCRIPT_|SERVER_|http|server|events|location|include|accept_mutex|accept_mutex_delay|access_log|add_after_body|add_before_body|add_header|addition_types|aio|alias|allow|ancient_browser|ancient_browser_value|auth|auth_basic|auth_basic_user_file|auth_http|auth_http_header|auth_http_timeout|autoindex|autoindex_exact_size|autoindex_localtime|break|charset|charset_map|charset_types|chunked_transfer_encoding|client_body_buffer_size|client_body_in_file_only|client_body_in_single_buffer|client_body_temp_path|client_body_timeout|client_header_buffer_size|client_header_timeout|client_max_body_size|connection_pool_size|create_full_put_path|daemon|dav_access|dav_methods|debug_connection|debug_points|default_type|deny|devpoll_changes|devpoll_events|directio|directio_alignment|disable_symlinks|empty_gif|env|epoll_events|error_log|error_page|expires|fastcgi_buffer_size|fastcgi_buffers|fastcgi_busy_buffers_size|fastcgi_cache|fastcgi_cache_bypass|fastcgi_cache_key|fastcgi_cache_lock|fastcgi_cache_lock_timeout|fastcgi_cache_methods|fastcgi_cache_min_uses|fastcgi_cache_path|fastcgi_cache_purge|fastcgi_cache_use_stale|fastcgi_cache_valid|fastcgi_connect_timeout|fastcgi_hide_header|fastcgi_ignore_client_abort|fastcgi_ignore_headers|fastcgi_index|fastcgi_intercept_errors|fastcgi_keep_conn|fastcgi_max_temp_file_size|fastcgi_next_upstream|fastcgi_no_cache|fastcgi_param|fastcgi_pass|fastcgi_pass_header|fastcgi_read_timeout|fastcgi_redirect_errors|fastcgi_send_timeout|fastcgi_split_path_info|fastcgi_store|fastcgi_store_access|fastcgi_temp_file_write_size|fastcgi_temp_path|flv|geo|geoip_city|geoip_country|google_perftools_profiles|gzip|gzip_buffers|gzip_comp_level|gzip_disable|gzip_http_version|gzip_min_length|gzip_proxied|gzip_static|gzip_types|gzip_vary|if|if_modified_since|ignore_invalid_headers|image_filter|image_filter_buffer|image_filter_jpeg_quality|image_filter_sharpen|image_filter_transparency|imap_capabilities|imap_client_buffer|include|index|internal|ip_hash|keepalive|keepalive_disable|keepalive_requests|keepalive_timeout|kqueue_changes|kqueue_events|large_client_header_buffers|limit_conn|limit_conn_log_level|limit_conn_zone|limit_except|limit_rate|limit_rate_after|limit_req|limit_req_log_level|limit_req_zone|limit_zone|lingering_close|lingering_time|lingering_timeout|listen|location|lock_file|log_format|log_format_combined|log_not_found|log_subrequest|map|map_hash_bucket_size|map_hash_max_size|master_process|max_ranges|memcached_buffer_size|memcached_connect_timeout|memcached_next_upstream|memcached_pass|memcached_read_timeout|memcached_send_timeout|merge_slashes|min_delete_depth|modern_browser|modern_browser_value|mp4|mp4_buffer_size|mp4_max_buffer_size|msie_padding|msie_refresh|multi_accept|open_file_cache|open_file_cache_errors|open_file_cache_min_uses|open_file_cache_valid|open_log_file_cache|optimize_server_names|override_charset|pcre_jit|perl|perl_modules|perl_require|perl_set|pid|pop3_auth|pop3_capabilities|port_in_redirect|post_action|postpone_output|protocol|proxy|proxy_buffer|proxy_buffer_size|proxy_buffering|proxy_buffers|proxy_busy_buffers_size|proxy_cache|proxy_cache_bypass|proxy_cache_key|proxy_cache_lock|proxy_cache_lock_timeout|proxy_cache_methods|proxy_cache_min_uses|proxy_cache_path|proxy_cache_use_stale|proxy_cache_valid|proxy_connect_timeout|proxy_cookie_domain|proxy_cookie_path|proxy_headers_hash_bucket_size|proxy_headers_hash_max_size|proxy_hide_header|proxy_http_version|proxy_ignore_client_abort|proxy_ignore_headers|proxy_intercept_errors|proxy_max_temp_file_size|proxy_method|proxy_next_upstream|proxy_no_cache|proxy_pass|proxy_pass_error_message|proxy_pass_header|proxy_pass_request_body|proxy_pass_request_headers|proxy_read_timeout|proxy_redirect|proxy_redirect_errors|proxy_send_lowat|proxy_send_timeout|proxy_set_body|proxy_set_header|proxy_ssl_session_reuse|proxy_store|proxy_store_access|proxy_temp_file_write_size|proxy_temp_path|proxy_timeout|proxy_upstream_fail_timeout|proxy_upstream_max_fails|random_index|read_ahead|real_ip_header|recursive_error_pages|request_pool_size|reset_timedout_connection|resolver|resolver_timeout|return|rewrite|root|rtsig_overflow_events|rtsig_overflow_test|rtsig_overflow_threshold|rtsig_signo|satisfy|satisfy_any|secure_link_secret|send_lowat|send_timeout|sendfile|sendfile_max_chunk|server|server_name|server_name_in_redirect|server_names_hash_bucket_size|server_names_hash_max_size|server_tokens|set|set_real_ip_from|smtp_auth|smtp_capabilities|so_keepalive|source_charset|split_clients|ssi|ssi_silent_errors|ssi_types|ssi_value_length|ssl|ssl_certificate|ssl_certificate_key|ssl_ciphers|ssl_client_certificate|ssl_crl|ssl_dhparam|ssl_engine|ssl_prefer_server_ciphers|ssl_protocols|ssl_session_cache|ssl_session_timeout|ssl_verify_client|ssl_verify_depth|starttls|stub_status|sub_filter|sub_filter_once|sub_filter_types|tcp_nodelay|tcp_nopush|timeout|timer_resolution|try_files|types|types_hash_bucket_size|types_hash_max_size|underscores_in_headers|uninitialized_variable_warn|upstream|use|user|userid|userid_domain|userid_expires|userid_name|userid_p3p|userid_path|userid_service|valid_referers|variables_hash_bucket_size|variables_hash_max_size|worker_connections|worker_cpu_affinity|worker_priority|worker_processes|worker_rlimit_core|worker_rlimit_nofile|worker_rlimit_sigpending|working_directory|xclient|xml_entities|xslt_entities|xslt_stylesheet|xslt_types)\\b/i,","});","","Prism.languages.insertBefore('nginx', 'keyword', {","        'variable': /\\$[a-z_]+/i","});"],"l":{"1":2,"9":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-nim.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-nim.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":30,"column":2}}},"branchMap":{},"code":["Prism.languages.nim = {","\t'comment': /#.*/,","\t// Double-quoted strings can be prefixed by an identifier (Generalized raw string literals)","\t// Character literals are handled specifically to prevent issues with numeric type suffixes","\t'string': /(?:(?:\\b(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+)?(?:\"\"\"[\\s\\S]*?\"\"\"(?!\")|\"(?:\\\\[\\s\\S]|\"\"|[^\"\\\\])*\")|'(?:\\\\(?:\\d+|x[\\da-fA-F]{2}|.)|[^'])')/,","\t// The negative look ahead prevents wrong highlighting of the .. operator","\t'number': /\\b(?:0[xXoObB][\\da-fA-F_]+|\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:[eE][+-]?\\d[\\d_]*)?)(?:'?[iuf]\\d*)?/,","\t'keyword': /\\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\\b/,","\t'function': {","\t\tpattern: /(?:(?!\\d)(?:\\w|\\\\x[8-9a-fA-F][0-9a-fA-F])+|`[^`\\r\\n]+`)\\*?(?:\\[[^\\]]+\\])?(?=\\s*\\()/,","\t\tinside: {","\t\t\t'operator': /\\*$/","\t\t}","\t},","\t// We don't want to highlight operators inside backticks","\t'ignore': {","\t\tpattern: /`[^`\\r\\n]+`/,","\t\tinside: {","\t\t\t'punctuation': /`/","\t\t}","\t},","\t'operator': {","\t\t// Look behind and look ahead prevent wrong highlighting of punctuations [. .] {. .} (. .)","\t\t// but allow the slice operator .. to take precedence over them","\t\t// One can define his own operators in Nim so all combination of operators might be an operator.","\t\tpattern: /(^|[({\\[](?=\\.\\.)|(?![({\\[]\\.).)(?:(?:[=+\\-*\\/<>@$~&%|!?^:\\\\]|\\.\\.|\\.(?![)}\\]]))+|\\b(?:and|div|of|or|in|is|isnot|mod|not|notin|shl|shr|xor)\\b)/m,","\t\tlookbehind: true","\t},","\t'punctuation': /[({\\[]\\.|\\.[)}\\]]|[`(){}\\[\\],:]/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-nix.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-nix.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":37,"column":2}},"2":{"start":{"line":39,"column":0},"end":{"line":39,"column":100}}},"branchMap":{},"code":["Prism.languages.nix = {","\t'comment': /\\/\\*[\\s\\S]*?\\*\\/|#.*/,","\t'string': {","\t\tpattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|''(?:(?!'')[\\s\\S]|''(?:'|\\\\|\\$\\{))*''/,","\t\tinside: {","\t\t\t'interpolation': {","\t\t\t\t// The lookbehind ensures the ${} is not preceded by \\ or ''","\t\t\t\tpattern: /(^|(?:^|(?!'').)[^\\\\])\\$\\{(?:[^}]|\\{[^}]*\\})*}/,","\t\t\t\tlookbehind: true,","\t\t\t\tinside: {","\t\t\t\t\t'antiquotation': {","\t\t\t\t\t\tpattern: /^\\$(?=\\{)/,","\t\t\t\t\t\talias: 'variable'","\t\t\t\t\t}","\t\t\t\t\t// See rest below","\t\t\t\t}","\t\t\t}","\t\t}","\t},","\t'url': [","\t\t/\\b(?:[a-z]{3,7}:\\/\\/)[\\w\\-+%~\\/.:#=?&]+/,","\t\t{","\t\t\tpattern: /([^\\/])(?:[\\w\\-+%~.:#=?&]*(?!\\/\\/)[\\w\\-+%~\\/.:#=?&])?(?!\\/\\/)\\/[\\w\\-+%~\\/.:#=?&]*/,","\t\t\tlookbehind: true","\t\t}","\t],","\t'antiquotation': {","\t\tpattern: /\\$(?=\\{)/,","\t\talias: 'variable'","\t},","\t'number': /\\b\\d+\\b/,","\t'keyword': /\\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\\b/,","\t'function': /\\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:url|Tarball)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\\b|\\bfoldl'\\B/,","\t'boolean': /\\b(?:true|false)\\b/,","\t'operator': /[=!<>]=?|\\+\\+?|\\|\\||&&|\\/\\/|->?|[?@]/,","\t'punctuation': /[{}()[\\].,:;]/","};","","Prism.languages.nix.string.inside.interpolation.inside.rest = Prism.util.clone(Prism.languages.nix);"],"l":{"1":1,"39":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-nsis.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-nsis.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":6,"column":1},"end":{"line":26,"column":2}}},"branchMap":{},"code":["/**"," * Original by Jan T. Sott (http://github.com/idleberg)"," *"," * Includes all commands and plug-ins shipped with NSIS 3.0"," */"," Prism.languages.nsis = {","\t'comment': {","\t\tpattern: /(^|[^\\\\])(\\/\\*[\\w\\W]*?\\*\\/|[#;].*)/,","\t\tlookbehind: true","\t},","\t'string': /(\"|')(\\\\?.)*?\\1/,","\t'keyword': {","\t\tpattern: /(^\\s*)(Abort|Add(BrandingImage|Size)|AdvSplash|Allow(RootDirInstall|SkipFiles)|AutoCloseWindow|Banner|BG(Font|Gradient|Image)|BrandingText|BringToFront|Call(InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|CRCCheck|Create(Directory|Font|ShortCut)|Delete(INISec|INIStr|RegKey|RegValue)?|Detail(Print|sButtonText)|Dialer|Dir(Text|Var|Verify)|EnableWindow|Enum(RegKey|RegValue)|Exch|Exec(Shell|Wait)?|ExpandEnvStrings|File(BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|WriteUTF16LE|Seek|Write|WriteByte|WriteWord)?|Find(Close|First|Next|Window)|FlushINI|Get(CurInstType|CurrentAddress|DlgItem|DLLVersion(Local)?|ErrorLevel|FileTime(Local)?|FullPathName|Function(Address|End)?|InstDirError|LabelAddress|TempFileName)|Goto|HideWindow|Icon|If(Abort|Errors|FileExists|RebootFlag|Silent)|InitPluginsDir|Install(ButtonText|Colors|Dir(RegKey)?)|InstProgressFlags|Inst(Type(GetText|SetText)?)|Int(CmpU?|Fmt|Op)|IsWindow|Lang(DLL|String)|License(BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(Set|Text)|Manifest(DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|Name|Nop|ns(Dialogs|Exec)|NSISdl|OutFile|Page(Callbacks)?|Pop|Push|Quit|Read(EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|RMDir|SearchPath|Section(End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(AutoClose|BrandingImage|Compress|Compressor(DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|PluginUnload|RebootFlag|RegView|ShellVarContext|Silent)|Show(InstDetails|UninstDetails|Window)|Silent(Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(CmpS?|Cpy|Len)|SubCaption|System|Unicode|Uninstall(ButtonText|Caption|Icon|SubCaption|Text)|UninstPage|UnRegDLL|UserInfo|Var|VI(AddVersionKey|FileVersion|ProductVersion)|VPatch|WindowIcon|Write(INIStr|RegBin|RegDWORD|RegExpandStr|RegStr|Uninstaller)|XPStyle)\\b/m,","\t\tlookbehind: true","\t},","\t'property': /\\b(admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user|ARCHIVE|FILE_(ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK(CR|CU|DD|LM|PD|U)|HKEY_(CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY)\\b/,","\t'constant': /\\${[\\w\\.:-]+}|\\$\\([\\w\\.:-]+\\)/i,","\t'variable': /\\$\\w+/i,","\t'number': /\\b-?(0x[\\dA-Fa-f]+|\\d*\\.?\\d+([Ee]-?\\d+)?)\\b/,","\t'operator': /--?|\\+\\+?|<=?|>=?|==?=?|&&?|\\|?\\||[?*\\/~^%]/,","\t'punctuation': /[{}[\\];(),.:]/,","\t'important': {","\t\tpattern: /(^\\s*)!(addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversionsystem|ifdef|ifmacrodef|ifmacrondef|ifndef|if|include|insertmacro|macroend|macro|makensis|packhdr|searchparse|searchreplace|tempfile|undef|verbose|warning)\\b/mi,","\t\tlookbehind: true","\t}","};",""],"l":{"6":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-objectivec.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-objectivec.js","s":{"1":2},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":5,"column":3}}},"branchMap":{},"code":["Prism.languages.objectivec = Prism.languages.extend('c', {","\t'keyword': /\\b(asm|typeof|inline|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|union|unsigned|void|volatile|while|in|self|super)\\b|(@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,","\t'string': /(\"|')(\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|@\"(\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,","\t'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/","});",""],"l":{"1":2}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-ocaml.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-ocaml.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":21,"column":2}}},"branchMap":{},"code":["Prism.languages.ocaml = {","\t'comment': /\\(\\*[\\s\\S]*?\\*\\)/,","\t'string': [","\t\t/\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,","\t\t/(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i","\t],","\t'number': /\\b-?(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,","\t'type': {","\t\tpattern: /\\B['`][a-z\\d_]*/i,","\t\talias: 'variable'","\t},","\t'directive': {","\t\tpattern: /\\B#[a-z\\d_]+/i,","\t\talias: 'function'","\t},","\t'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|object|of|open|prefix|private|rec|then|sig|struct|to|try|type|val|value|virtual|where|while|with)\\b/,","\t'boolean': /\\b(?:false|true)\\b/,","\t// Custom operators are allowed","\t'operator': /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&\\*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lxor|lsl|lsr|mod|nor|or)\\b/,","\t'punctuation': /[(){}\\[\\]|_.,:;]/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-oz.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-oz.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":21,"column":2}}},"branchMap":{},"code":["Prism.languages.oz = {","\t'comment': /\\/\\*[\\s\\S]*?\\*\\/|%.*/,","\t'string': /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,","\t'atom': {","\t\tpattern: /'(?:[^'\\\\]|\\\\.)*'/,","\t\talias: 'builtin'","\t},","\t'keyword': /[$_]|\\[\\]|\\b(?:at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\\b/,","\t'function': [","\t\t/[a-z][A-Za-z\\d]*(?=\\()/,","\t\t{","\t\t\tpattern: /(\\{)[A-Z][A-Za-z\\d]*/,","\t\t\tlookbehind: true","\t\t}","\t],","\t'number': /\\b(?:0[bx][\\da-f]+|\\d+\\.?\\d*(?:e~?\\d+)?\\b)|&(?:[^\\\\]|\\\\(?:\\d{3}|.))/i,","\t'variable': /\\b[A-Z][A-Za-z\\d]*|`(?:[^`\\\\]|\\\\.)+`/,","\t'attr-name': /\\w+(?=:)/,","\t'operator': /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\\\=:?|!!?|[|#+\\-*\\/,~^@]|\\b(?:andthen|div|mod|orelse)\\b/,","\t'punctuation': /[\\[\\](){}.:;?]/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-parigp.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-parigp.js","s":{"1":1,"2":1,"3":1,"4":23,"5":1},"b":{},"f":{"1":1,"2":23},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":13},"end":{"line":7,"column":25}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":26},"end":{"line":14,"column":45}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":27,"column":2}},"2":{"start":{"line":8,"column":2},"end":{"line":13,"column":4}},"3":{"start":{"line":14,"column":2},"end":{"line":16,"column":15}},"4":{"start":{"line":15,"column":3},"end":{"line":15,"column":39}},"5":{"start":{"line":17,"column":2},"end":{"line":17,"column":46}}},"branchMap":{},"code":["Prism.languages.parigp = {","\t'comment': /\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,","\t'string': /\"(?:[^\"\\\\]|\\\\.)*\"/,","\t// PARI/GP does not care about white spaces at all","\t// so let's process the keywords to build an appropriate regexp","\t// (e.g. \"b *r *e *a *k\", etc.)","\t'keyword': (function () {","\t\tvar keywords = [","\t\t\t'breakpoint', 'break', 'dbg_down', 'dbg_err', 'dbg_up', 'dbg_x',","\t\t\t'forcomposite', 'fordiv', 'forell', 'forpart', 'forprime',","\t\t\t'forstep', 'forsubgroup', 'forvec', 'for', 'iferr', 'if',","\t\t\t'local', 'my', 'next', 'return', 'until', 'while'","\t\t];","\t\tkeywords = keywords.map(function (keyword) {","\t\t\treturn keyword.split('').join(' *');","\t\t}).join('|');","\t\treturn RegExp('\\\\b(?:' + keywords + ')\\\\b');","\t}()),","\t'function': /\\w[\\w ]*?(?= *\\()/,","\t'number': {","\t\t// The lookbehind and the negative lookahead prevent from breaking the .. operator","\t\tpattern: /((?:\\. *\\. *)?)(?:\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *[+-]? *\\d(?: *\\d)*)?/i,","\t\tlookbehind: true","\t},","\t'operator': /\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?:(?: *<)?(?: *=)?| *>)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,","\t'punctuation': /[\\[\\]{}().,:;|]/","};"],"l":{"1":1,"8":1,"14":1,"15":23,"17":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-parser.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-parser.js","s":{"1":1,"2":1,"3":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":29,"column":3}},"2":{"start":{"line":30,"column":0},"end":{"line":55,"column":3}},"3":{"start":{"line":56,"column":0},"end":{"line":66,"column":55}}},"branchMap":{},"code":["Prism.languages.parser = Prism.languages.extend('markup', {","\t'keyword': {","\t\tpattern: /(^|[^^])(?:\\^(?:case|eval|for|if|switch|throw)\\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\\b)/,","\t\tlookbehind: true","\t},","\t'variable': {","\t\tpattern: /(^|[^^])\\B\\$(?:\\w+|(?=[.\\{]))(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,","\t\tlookbehind: true,","\t\tinside: {","\t\t\t'punctuation': /\\.|:+/","\t\t}","\t},","\t'function': {","\t\tpattern: /(^|[^^])\\B[@^]\\w+(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,","\t\tlookbehind: true,","\t\tinside: {","\t\t\t'keyword': {","\t\t\t\tpattern: /(^@)(?:GET_|SET_)/,","\t\t\t\tlookbehind: true","\t\t\t},","\t\t\t'punctuation': /\\.|:+/","\t\t}","\t},","\t'escape': {","\t\tpattern: /\\^(?:[$^;@()\\[\\]{}\"':]|#[a-f\\d]*)/i,","\t\talias: 'builtin'","\t},","\t'punctuation': /[\\[\\](){};]/","});","Prism.languages.insertBefore('parser', 'keyword', {","\t'parser-comment': {","\t\tpattern: /(\\s)#.*/,","\t\tlookbehind: true,","\t\talias: 'comment'","\t},","\t'expression': {","\t\t// Allow for 3 levels of depth","\t\tpattern: /(^|[^^])\\((?:[^()]|\\((?:[^()]|\\((?:[^()])*\\))*\\))*\\)/,","\t\tlookbehind: true,","\t\tinside: {","\t\t\t'string': {","\t\t\t\tpattern: /(^|[^^])([\"'])(?:(?!\\2)[^^]|\\^[\\s\\S])*\\2/,","\t\t\t\tlookbehind: true","\t\t\t},","\t\t\t'keyword': Prism.languages.parser.keyword,","\t\t\t'variable': Prism.languages.parser.variable,","\t\t\t'function': Prism.languages.parser.function,","\t\t\t'boolean': /\\b(?:true|false)\\b/,","\t\t\t'number': /\\b(?:0x[a-f\\d]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?)\\b/i,","\t\t\t'escape': Prism.languages.parser.escape,","\t\t\t'operator': /[~+*\\/\\\\%]|!(?:\\|\\|?|=)?|&&?|\\|\\|?|==|<[<=]?|>[>=]?|-[fd]?|\\b(?:def|eq|ge|gt|in|is|le|lt|ne)\\b/,","\t\t\t'punctuation': Prism.languages.parser.punctuation","\t\t}","\t}","});","Prism.languages.insertBefore('inside', 'punctuation', {","\t'expression': Prism.languages.parser.expression,","\t'keyword': Prism.languages.parser.keyword,","\t'variable': Prism.languages.parser.variable,","\t'function': Prism.languages.parser.function,","\t'escape': Prism.languages.parser.escape,","\t'parser-punctuation': {","\t\tpattern: Prism.languages.parser.punctuation,","\t\talias: 'punctuation'","\t}","}, Prism.languages.parser['tag'].inside['attr-value']);"],"l":{"1":1,"30":1,"56":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-pascal.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-pascal.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":50,"column":2}}},"branchMap":{},"code":["// Based on Free Pascal","","/* TODO","\tSupport inline asm ?","*/","","Prism.languages.pascal = {","\t'comment': [","\t\t/\\(\\*[\\s\\S]+?\\*\\)/,","\t\t/\\{[\\s\\S]+?\\}/,","\t\t/\\/\\/.*/","\t],","\t'string': /(?:'(?:''|[^'\\r\\n])*'|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,","\t'keyword': [","\t\t{","\t\t\t// Turbo Pascal","\t\t\tpattern: /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,","\t\t\tlookbehind: true","\t\t},","\t\t{","\t\t\t// Free Pascal","\t\t\tpattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,","\t\t\tlookbehind: true","\t\t},","\t\t{","\t\t\t// Object Pascal","\t\t\tpattern: /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,","\t\t\tlookbehind: true","\t\t},","\t\t{","\t\t\t// Modifiers","\t\t\tpattern: /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,","\t\t\tlookbehind: true","\t\t}","\t],","\t'number': [","\t\t// Hexadecimal, octal and binary","\t\t/[+-]?(?:[&%]\\d+|\\$[a-f\\d]+)/i,","\t\t// Decimal","\t\t/([+-]|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i","\t],","\t'operator': [","\t\t/\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/i,","\t\t{","\t\t\tpattern: /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,","\t\t\tlookbehind: true","\t\t}","\t],","\t'punctuation': /\\(\\.|\\.\\)|[()\\[\\]:;,.]/","};"],"l":{"7":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-perl.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-perl.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":140,"column":2}}},"branchMap":{},"code":["Prism.languages.perl = {","\t'comment': [","\t\t{","\t\t\t// POD","\t\t\tpattern: /(^\\s*)=\\w+[\\s\\S]*?=cut.*/m,","\t\t\tlookbehind: true","\t\t},","\t\t{","\t\t\tpattern: /(^|[^\\\\$])#.*/,","\t\t\tlookbehind: true","\t\t}","\t],","\t// TODO Could be nice to handle Heredoc too.","\t'string': [","\t\t// q/.../","\t\t/\\b(?:q|qq|qx|qw)\\s*([^a-zA-Z0-9\\s\\{\\(\\[<])(?:[^\\\\]|\\\\[\\s\\S])*?\\1/,","\t","\t\t// q a...a","\t\t/\\b(?:q|qq|qx|qw)\\s+([a-zA-Z0-9])(?:[^\\\\]|\\\\[\\s\\S])*?\\1/,","\t","\t\t// q(...)","\t\t/\\b(?:q|qq|qx|qw)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,","\t","\t\t// q{...}","\t\t/\\b(?:q|qq|qx|qw)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}/,","\t","\t\t// q[...]","\t\t/\\b(?:q|qq|qx|qw)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]/,","\t","\t\t// q<...>","\t\t/\\b(?:q|qq|qx|qw)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,","","\t\t// \"...\", `...`","\t\t/(\"|`)(?:[^\\\\]|\\\\[\\s\\S])*?\\1/,","","\t\t// '...'","\t\t// FIXME Multi-line single-quoted strings are not supported as they would break variables containing '","\t\t/'(?:[^'\\\\\\r\\n]|\\\\.)*'/","\t],","\t'regex': [","\t\t// m/.../","\t\t/\\b(?:m|qr)\\s*([^a-zA-Z0-9\\s\\{\\(\\[<])(?:[^\\\\]|\\\\[\\s\\S])*?\\1[msixpodualngc]*/,","\t","\t\t// m a...a","\t\t/\\b(?:m|qr)\\s+([a-zA-Z0-9])(?:[^\\\\]|\\\\.)*?\\1[msixpodualngc]*/,","\t","\t\t// m(...)","\t\t/\\b(?:m|qr)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngc]*/,","\t","\t\t// m{...}","\t\t/\\b(?:m|qr)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngc]*/,","\t","\t\t// m[...]","\t\t/\\b(?:m|qr)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngc]*/,","\t","\t\t// m<...>","\t\t/\\b(?:m|qr)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngc]*/,","","\t\t// The lookbehinds prevent -s from breaking","\t\t// FIXME We don't handle change of separator like s(...)[...]","\t\t// s/.../.../","\t\t{","\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s*([^a-zA-Z0-9\\s\\{\\(\\[<])(?:[^\\\\]|\\\\[\\s\\S])*?\\2(?:[^\\\\]|\\\\[\\s\\S])*?\\2[msixpodualngcer]*/,","\t\t\tlookbehind: true","\t\t},","\t","\t\t// s a...a...a","\t\t{","\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s+([a-zA-Z0-9])(?:[^\\\\]|\\\\[\\s\\S])*?\\2(?:[^\\\\]|\\\\[\\s\\S])*?\\2[msixpodualngcer]*/,","\t\t\tlookbehind: true","\t\t},","\t","\t\t// s(...)(...)","\t\t{","\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngcer]*/,","\t\t\tlookbehind: true","\t\t},","\t","\t\t// s{...}{...}","\t\t{","\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngcer]*/,","\t\t\tlookbehind: true","\t\t},","\t","\t\t// s[...][...]","\t\t{","\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngcer]*/,","\t\t\tlookbehind: true","\t\t},","\t","\t\t// s<...><...>","\t\t{","\t\t\tpattern: /(^|[^-]\\b)(?:s|tr|y)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngcer]*/,","\t\t\tlookbehind: true","\t\t},","\t","\t\t// /.../","\t\t// The look-ahead tries to prevent two divisions on","\t\t// the same line from being highlighted as regex.","\t\t// This does not support multi-line regex.","\t\t/\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(lt|gt|le|ge|eq|ne|cmp|not|and|or|xor|x)\\b))/","\t],","","\t// FIXME Not sure about the handling of ::, ', and #","\t'variable': [","\t\t// ${^POSTMATCH}","\t\t/[&*$@%]\\{\\^[A-Z]+\\}/,","\t\t// $^V","\t\t/[&*$@%]\\^[A-Z_]/,","\t\t// ${...}","\t\t/[&*$@%]#?(?=\\{)/,","\t\t// $foo","\t\t/[&*$@%]#?((::)*'?(?!\\d)[\\w$]+)+(::)*/i,","\t\t// $1","\t\t/[&*$@%]\\d+/,","\t\t// $_, @_, %!","\t\t// The negative lookahead prevents from breaking the %= operator","\t\t/(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/","\t],","\t'filehandle': {","\t\t// <>, <FOO>, _","\t\tpattern: /<(?![<=])\\S*>|\\b_\\b/,","\t\talias: 'symbol'","\t},","\t'vstring': {","\t\t// v1.2, 1.2.3","\t\tpattern: /v\\d+(\\.\\d+)*|\\d+(\\.\\d+){2,}/,","\t\talias: 'string'","\t},","\t'function': {","\t\tpattern: /sub [a-z0-9_]+/i,","\t\tinside: {","\t\t\tkeyword: /sub/","\t\t}","\t},","\t'keyword': /\\b(any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,","\t'number': /\\b-?(0x[\\dA-Fa-f](_?[\\dA-Fa-f])*|0b[01](_?[01])*|(\\d(_?\\d)*)?\\.?\\d(_?\\d)*([Ee][+-]?\\d+)?)\\b/,","\t'operator': /-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(lt|gt|le|ge|eq|ne|cmp|not|and|or|xor)\\b/,","\t'punctuation': /[{}[\\];(),:]/","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-php-extras.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-php-extras.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":11,"column":3}}},"branchMap":{},"code":["Prism.languages.insertBefore('php', 'variable', {","\t'this': /\\$this\\b/,","\t'global': /\\$(?:_(?:SERVER|GET|POST|FILES|REQUEST|SESSION|ENV|COOKIE)|GLOBALS|HTTP_RAW_POST_DATA|argc|argv|php_errormsg|http_response_header)/,","\t'scope': {","\t\tpattern: /\\b[\\w\\\\]+::/,","\t\tinside: {","\t\t\tkeyword: /(static|self|parent)/,","\t\t\tpunctuation: /(::|\\\\)/","\t\t}","\t}","});"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-php.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-php.js","s":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":59,"loc":{"start":{"line":59,"column":37},"end":{"line":59,"column":51}}},"2":{"name":"(anonymous_2)","line":67,"loc":{"start":{"line":67,"column":65},"end":{"line":67,"column":81}}},"3":{"name":"(anonymous_3)","line":75,"loc":{"start":{"line":75,"column":34},"end":{"line":75,"column":48}}},"4":{"name":"(anonymous_4)","line":83,"loc":{"start":{"line":83,"column":36},"end":{"line":83,"column":50}}},"5":{"name":"(anonymous_5)","line":97,"loc":{"start":{"line":97,"column":25},"end":{"line":97,"column":39}}}},"statementMap":{"1":{"start":{"line":14,"column":0},"end":{"line":22,"column":3}},"2":{"start":{"line":26,"column":0},"end":{"line":32,"column":3}},"3":{"start":{"line":34,"column":0},"end":{"line":44,"column":3}},"4":{"start":{"line":47,"column":0},"end":{"line":52,"column":3}},"5":{"start":{"line":55,"column":0},"end":{"line":111,"column":1}},"6":{"start":{"line":59,"column":1},"end":{"line":72,"column":4}},"7":{"start":{"line":60,"column":2},"end":{"line":62,"column":3}},"8":{"start":{"line":61,"column":3},"end":{"line":61,"column":10}},"9":{"start":{"line":64,"column":2},"end":{"line":64,"column":22}},"10":{"start":{"line":66,"column":2},"end":{"line":66,"column":28}},"11":{"start":{"line":67,"column":2},"end":{"line":71,"column":5}},"12":{"start":{"line":68,"column":3},"end":{"line":68,"column":30}},"13":{"start":{"line":70,"column":3},"end":{"line":70,"column":51}},"14":{"start":{"line":75,"column":1},"end":{"line":80,"column":4}},"15":{"start":{"line":76,"column":2},"end":{"line":79,"column":3}},"16":{"start":{"line":77,"column":3},"end":{"line":77,"column":29}},"17":{"start":{"line":78,"column":3},"end":{"line":78,"column":25}},"18":{"start":{"line":83,"column":1},"end":{"line":94,"column":4}},"19":{"start":{"line":84,"column":2},"end":{"line":86,"column":3}},"20":{"start":{"line":85,"column":3},"end":{"line":85,"column":10}},"21":{"start":{"line":88,"column":2},"end":{"line":91,"column":3}},"22":{"start":{"line":90,"column":3},"end":{"line":90,"column":144}},"23":{"start":{"line":93,"column":2},"end":{"line":93,"column":46}},"24":{"start":{"line":97,"column":1},"end":{"line":101,"column":4}},"25":{"start":{"line":98,"column":2},"end":{"line":100,"column":3}},"26":{"start":{"line":99,"column":3},"end":{"line":99,"column":104}},"27":{"start":{"line":104,"column":1},"end":{"line":110,"column":4}}},"branchMap":{"1":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":0},"end":{"line":55,"column":0}},{"start":{"line":55,"column":0},"end":{"line":55,"column":0}}]},"2":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":2},"end":{"line":60,"column":2}},{"start":{"line":60,"column":2},"end":{"line":60,"column":2}}]},"3":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":2},"end":{"line":76,"column":2}},{"start":{"line":76,"column":2},"end":{"line":76,"column":2}}]},"4":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":2},"end":{"line":84,"column":2}},{"start":{"line":84,"column":2},"end":{"line":84,"column":2}}]},"5":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":2},"end":{"line":98,"column":2}},{"start":{"line":98,"column":2},"end":{"line":98,"column":2}}]},"6":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":6},"end":{"line":98,"column":28}},{"start":{"line":98,"column":32},"end":{"line":98,"column":53}}]}},"code":["/**"," * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/"," * Modified by Miles Johnson: http://milesj.me"," *"," * Supports the following:"," * \t\t- Extends clike syntax"," * \t\t- Support for PHP 5.3+ (namespaces, traits, generators, etc)"," * \t\t- Smarter constant and function matching"," *"," * Adds the following new token classes:"," * \t\tconstant, delimiter, variable, function, package"," */","","Prism.languages.php = Prism.languages.extend('clike', {","\t'keyword': /\\b(and|or|xor|array|as|break|case|cfunction|class|const|continue|declare|default|die|do|else|elseif|enddeclare|endfor|endforeach|endif|endswitch|endwhile|extends|for|foreach|function|include|include_once|global|if|new|return|static|switch|use|require|require_once|var|while|abstract|interface|public|implements|private|protected|parent|throw|null|echo|print|trait|namespace|final|yield|goto|instanceof|finally|try|catch)\\b/i,","\t'constant': /\\b[A-Z0-9_]{2,}\\b/,","\t'comment': {","\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\w\\W]*?\\*\\/|\\/\\/.*)/,","\t\tlookbehind: true,","\t\tgreedy: true","\t}","});","","// Shell-like comments are matched after strings, because they are less","// common than strings containing hashes...","Prism.languages.insertBefore('php', 'class-name', {","\t'shell-comment': {","\t\tpattern: /(^|[^\\\\])#.*/,","\t\tlookbehind: true,","\t\talias: 'comment'","\t}","});","","Prism.languages.insertBefore('php', 'keyword', {","\t'delimiter': /\\?>|<\\?(?:php)?/i,","\t'variable': /\\$\\w+\\b/i,","\t'package': {","\t\tpattern: /(\\\\|namespace\\s+|use\\s+)[\\w\\\\]+/,","\t\tlookbehind: true,","\t\tinside: {","\t\t\tpunctuation: /\\\\/","\t\t}","\t}","});","","// Must be defined after the function pattern","Prism.languages.insertBefore('php', 'operator', {","\t'property': {","\t\tpattern: /(->)[\\w]+/,","\t\tlookbehind: true","\t}","});","","// Add HTML support of the markup language exists","if (Prism.languages.markup) {","","\t// Tokenize all inline PHP blocks that are wrapped in <?php ?>","\t// This allows for easy PHP + markup highlighting","\tPrism.hooks.add('before-highlight', function(env) {","\t\tif (env.language !== 'php') {","\t\t\treturn;","\t\t}","","\t\tenv.tokenStack = [];","","\t\tenv.backupCode = env.code;","\t\tenv.code = env.code.replace(/(?:<\\?php|<\\?)[\\w\\W]*?(?:\\?>)/ig, function(match) {","\t\t\tenv.tokenStack.push(match);","","\t\t\treturn '{{{PHP' + env.tokenStack.length + '}}}';","\t\t});","\t});","","\t// Restore env.code for other plugins (e.g. line-numbers)","\tPrism.hooks.add('before-insert', function(env) {","\t\tif (env.language === 'php') {","\t\t\tenv.code = env.backupCode;","\t\t\tdelete env.backupCode;","\t\t}","\t});","","\t// Re-insert the tokens after highlighting","\tPrism.hooks.add('after-highlight', function(env) {","\t\tif (env.language !== 'php') {","\t\t\treturn;","\t\t}","","\t\tfor (var i = 0, t; t = env.tokenStack[i]; i++) {","\t\t\t// The replace prevents $$, $&, $`, $', $n, $nn from being interpreted as special patterns","\t\t\tenv.highlightedCode = env.highlightedCode.replace('{{{PHP' + (i + 1) + '}}}', Prism.highlight(t, env.grammar, 'php').replace(/\\$/g, '$$$$'));","\t\t}","","\t\tenv.element.innerHTML = env.highlightedCode;","\t});","","\t// Wrap tokens in classes that are missing them","\tPrism.hooks.add('wrap', function(env) {","\t\tif (env.language === 'php' && env.type === 'markup') {","\t\t\tenv.content = env.content.replace(/(\\{\\{\\{PHP[0-9]+\\}\\}\\})/g, \"<span class=\\\"token php\\\">$1</span>\");","\t\t}","\t});","","\t// Add the rules before all others","\tPrism.languages.insertBefore('php', 'comment', {","\t\t'markup': {","\t\t\tpattern: /<[^?]\\/?(.*?)>/,","\t\t\tinside: Prism.languages.markup","\t\t},","\t\t'php': /\\{\\{\\{PHP[0-9]+\\}\\}\\}/","\t});","}",""],"l":{"14":2,"26":0,"34":0,"47":0,"55":0,"59":0,"60":0,"61":0,"64":0,"66":0,"67":0,"68":0,"70":0,"75":0,"76":0,"77":0,"78":0,"83":0,"84":0,"85":0,"88":0,"90":0,"93":0,"97":0,"98":0,"99":0,"104":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-powershell.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-powershell.js","s":{"1":1,"2":1,"3":1,"4":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":47,"column":2}},"2":{"start":{"line":50,"column":0},"end":{"line":50,"column":89}},"3":{"start":{"line":51,"column":0},"end":{"line":51,"column":91}},"4":{"start":{"line":52,"column":0},"end":{"line":52,"column":107}}},"branchMap":{},"code":["Prism.languages.powershell = {","\t'comment': [","\t\t{","\t\t\tpattern: /(^|[^`])<#[\\w\\W]*?#>/,","\t\t\tlookbehind: true","\t\t},","\t\t{","\t\t\tpattern: /(^|[^`])#.*/,","\t\t\tlookbehind: true","\t\t}","\t],","\t'string': [","\t\t{","\t\t\tpattern: /\"(`?[\\w\\W])*?\"/,","\t\t\tgreedy: true,","\t\t\tinside: {","\t\t\t\t'function': {","\t\t\t\t\tpattern: /[^`]\\$\\(.*?\\)/,","\t\t\t\t\t// Populated at end of file","\t\t\t\t\tinside: {}","\t\t\t\t}","\t\t\t}","\t\t},","\t\t{","\t\t\tpattern: /'([^']|'')*'/,","\t\t\tgreedy: true","\t\t}","\t],","\t// Matches name spaces as well as casts, attribute decorators. Force starting with letter to avoid matching array indices","\t'namespace': /\\[[a-z][\\w\\W]*?\\]/i,","\t'boolean': /\\$(true|false)\\b/i,","\t'variable': /\\$\\w+\\b/i,","\t// Cmdlets and aliases. Aliases should come last, otherwise \"write\" gets preferred over \"write-host\" for example","\t// Get-Command | ?{ $_.ModuleName -match \"Microsoft.PowerShell.(Util|Core|Management)\" }","\t// Get-Alias | ?{ $_.ReferencedCommand.Module.Name -match \"Microsoft.PowerShell.(Util|Core|Management)\" }","\t'function': [","\t\t/\\b(Add-(Computer|Content|History|Member|PSSnapin|Type)|Checkpoint-Computer|Clear-(Content|EventLog|History|Item|ItemProperty|Variable)|Compare-Object|Complete-Transaction|Connect-PSSession|ConvertFrom-(Csv|Json|StringData)|Convert-Path|ConvertTo-(Csv|Html|Json|Xml)|Copy-(Item|ItemProperty)|Debug-Process|Disable-(ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Disconnect-PSSession|Enable-(ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)|Enter-PSSession|Exit-PSSession|Export-(Alias|Clixml|Console|Csv|FormatData|ModuleMember|PSSession)|ForEach-Object|Format-(Custom|List|Table|Wide)|Get-(Alias|ChildItem|Command|ComputerRestorePoint|Content|ControlPanelItem|Culture|Date|Event|EventLog|EventSubscriber|FormatData|Help|History|Host|HotFix|Item|ItemProperty|Job|Location|Member|Module|Process|PSBreakpoint|PSCallStack|PSDrive|PSProvider|PSSession|PSSessionConfiguration|PSSnapin|Random|Service|TraceSource|Transaction|TypeData|UICulture|Unique|Variable|WmiObject)|Group-Object|Import-(Alias|Clixml|Csv|LocalizedData|Module|PSSession)|Invoke-(Command|Expression|History|Item|RestMethod|WebRequest|WmiMethod)|Join-Path|Limit-EventLog|Measure-(Command|Object)|Move-(Item|ItemProperty)|New-(Alias|Event|EventLog|Item|ItemProperty|Module|ModuleManifest|Object|PSDrive|PSSession|PSSessionConfigurationFile|PSSessionOption|PSTransportOption|Service|TimeSpan|Variable|WebServiceProxy)|Out-(Default|File|GridView|Host|Null|Printer|String)|Pop-Location|Push-Location|Read-Host|Receive-(Job|PSSession)|Register-(EngineEvent|ObjectEvent|PSSessionConfiguration|WmiEvent)|Remove-(Computer|Event|EventLog|Item|ItemProperty|Job|Module|PSBreakpoint|PSDrive|PSSession|PSSnapin|TypeData|Variable|WmiObject)|Rename-(Computer|Item|ItemProperty)|Reset-ComputerMachinePassword|Resolve-Path|Restart-(Computer|Service)|Restore-Computer|Resume-(Job|Service)|Save-Help|Select-(Object|String|Xml)|Send-MailMessage|Set-(Alias|Content|Date|Item|ItemProperty|Location|PSBreakpoint|PSDebug|PSSessionConfiguration|Service|StrictMode|TraceSource|Variable|WmiInstance)|Show-(Command|ControlPanelItem|EventLog)|Sort-Object|Split-Path|Start-(Job|Process|Service|Sleep|Transaction)|Stop-(Computer|Job|Process|Service)|Suspend-(Job|Service)|Tee-Object|Test-(ComputerSecureChannel|Connection|ModuleManifest|Path|PSSessionConfigurationFile)|Trace-Command|Unblock-File|Undo-Transaction|Unregister-(Event|PSSessionConfiguration)|Update-(FormatData|Help|List|TypeData)|Use-Transaction|Wait-(Event|Job|Process)|Where-Object|Write-(Debug|Error|EventLog|Host|Output|Progress|Verbose|Warning))\\b/i,","\t\t/\\b(ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\\b/i","\t],","\t// per http://technet.microsoft.com/en-us/library/hh847744.aspx","\t'keyword': /\\b(Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\\b/i,","\t'operator': {","\t\tpattern: /(\\W?)(!|-(eq|ne|gt|ge|lt|le|sh[lr]|not|b?(and|x?or)|(Not)?(Like|Match|Contains|In)|Replace|Join|is(Not)?|as)\\b|-[-=]?|\\+[+=]?|[*\\/%]=?)/i,","\t\tlookbehind: true","\t},","\t'punctuation': /[|{}[\\];(),.]/","};","","// Variable interpolation inside strings, and nested expressions","Prism.languages.powershell.string[0].inside.boolean = Prism.languages.powershell.boolean;","Prism.languages.powershell.string[0].inside.variable = Prism.languages.powershell.variable;","Prism.languages.powershell.string[0].inside.function.inside = Prism.util.clone(Prism.languages.powershell);",""],"l":{"1":1,"50":1,"51":1,"52":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-processing.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-processing.js","s":{"1":2,"2":0,"3":0,"4":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":4,"column":3}},"2":{"start":{"line":5,"column":0},"end":{"line":12,"column":3}},"3":{"start":{"line":15,"column":0},"end":{"line":15,"column":72}},"4":{"start":{"line":18,"column":0},"end":{"line":18,"column":60}}},"branchMap":{},"code":["Prism.languages.processing = Prism.languages.extend('clike', {","\t'keyword': /\\b(?:break|catch|case|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,","\t'operator': /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/","});","Prism.languages.insertBefore('processing', 'number', {","\t// Special case: XML is a type","\t'constant': /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,","\t'type': {","\t\tpattern: /\\b(?:boolean|byte|char|color|double|float|int|XML|[A-Z][A-Za-z\\d_]*)\\b/,","\t\talias: 'variable'","\t}","});","","// Spaces are allowed between function name and parenthesis","Prism.languages.processing['function'].pattern = /[a-z0-9_]+(?=\\s*\\()/i;","","// Class-names is not styled by default","Prism.languages.processing['class-name'].alias = 'variable';"],"l":{"1":2,"5":0,"15":0,"18":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-prolog.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-prolog.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":17,"column":2}}},"branchMap":{},"code":["Prism.languages.prolog = {","\t// Syntax depends on the implementation","\t'comment': [","\t\t/%.+/,","\t\t/\\/\\*[\\s\\S]*?\\*\\//","\t],","\t// Depending on the implementation, strings may allow escaped newlines and quote-escape","\t'string': /([\"'])(?:\\1\\1|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,","\t'builtin': /\\b(?:fx|fy|xf[xy]?|yfx?)\\b/,","\t'variable': /\\b[A-Z_]\\w*/,","\t// FIXME: Should we list all null-ary predicates (not followed by a parenthesis) like halt, trace, etc.?","\t'function': /\\b[a-z]\\w*(?:(?=\\()|\\/\\d+)/,","\t'number': /\\b\\d+\\.?\\d*/,","\t// Custom operators are allowed","\t'operator': /[:\\\\=><\\-?*@\\/;+^|!$.]+|\\b(?:is|mod|not|xor)\\b/,","\t'punctuation': /[(){}\\[\\],]/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-properties.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-properties.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":9,"column":2}}},"branchMap":{},"code":["Prism.languages.properties = {","\t'comment': /^[ \\t]*[#!].*$/m,","\t'attr-value': {","\t\tpattern: /(^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?: *[=:] *| ))(?:\\\\(?:\\r\\n|[\\s\\S])|.)+/m,","\t\tlookbehind: true","\t},","\t'attr-name': /^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+?(?= *[ =:]| )/m,","\t'punctuation': /[=:]/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-protobuf.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-protobuf.js","s":{"1":2},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":8,"column":3}}},"branchMap":{},"code":["Prism.languages.protobuf = Prism.languages.extend('clike', {","\tkeyword: /\\b(package|import|message|enum)\\b/,","\tbuiltin: /\\b(required|repeated|optional|reserved)\\b/,","\tprimitive: {","\t\tpattern: /\\b(double|float|int32|int64|uint32|uint64|sint32|sint64|fixed32|fixed64|sfixed32|sfixed64|bool|string|bytes)\\b/,","\t\talias: 'symbol'","\t}","});",""],"l":{"1":2}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-puppet.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-puppet.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1},"b":{},"f":{"1":1},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":18}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":131,"column":10}},"2":{"start":{"line":2,"column":1},"end":{"line":96,"column":3}},"3":{"start":{"line":98,"column":1},"end":{"line":128,"column":3}},"4":{"start":{"line":129,"column":1},"end":{"line":129,"column":75}},"5":{"start":{"line":130,"column":1},"end":{"line":130,"column":95}}},"branchMap":{},"code":["(function (Prism) {","\tPrism.languages.puppet = {","\t\t'heredoc': [","\t\t\t// Matches the content of a quoted heredoc string (subject to interpolation)","\t\t\t{","\t\t\t\tpattern: /(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,","\t\t\t\tlookbehind: true,","\t\t\t\talias: 'string',","\t\t\t\tinside: {","\t\t\t\t\t// Matches the end tag","\t\t\t\t\t'punctuation': /(?=\\S).*\\S(?= *$)/","\t\t\t\t\t// See interpolation below","\t\t\t\t}","\t\t\t},","\t\t\t// Matches the content of an unquoted heredoc string (no interpolation)","\t\t\t{","\t\t\t\tpattern: /(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,","\t\t\t\tlookbehind: true,","\t\t\t\talias: 'string',","\t\t\t\tinside: {","\t\t\t\t\t// Matches the end tag","\t\t\t\t\t'punctuation': /(?=\\S).*\\S(?= *$)/","\t\t\t\t}","\t\t\t},","\t\t\t// Matches the start tag of heredoc strings","\t\t\t{","\t\t\t\tpattern: /@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,","\t\t\t\talias: 'string',","\t\t\t\tinside: {","\t\t\t\t\t'punctuation': {","\t\t\t\t\t\tpattern: /(\\().+?(?=\\))/,","\t\t\t\t\t\tlookbehind: true","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t],","\t\t'multiline-comment': {","\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,","\t\t\tlookbehind: true,","\t\t\talias: 'comment'","\t\t},","\t\t'regex': {","\t\t\t// Must be prefixed with the keyword \"node\" or a non-word char","\t\t\tpattern: /((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,","\t\t\tlookbehind: true,","\t\t\tinside: {","\t\t\t\t// Extended regexes must have the x flag. They can contain single-line comments.","\t\t\t\t'extended-regex': {","\t\t\t\t\tpattern: /^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,","\t\t\t\t\tinside: {","\t\t\t\t\t\t'comment': /#.*/","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t},","\t\t'comment': {","\t\t\tpattern: /(^|[^\\\\])#.*/,","\t\t\tlookbehind: true","\t\t},","\t\t'string': {","\t\t\t// Allow for one nested level of double quotes inside interpolation","\t\t\tpattern: /([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,","\t\t\tinside: {","\t\t\t\t'double-quoted': {","\t\t\t\t\tpattern: /^\"[\\s\\S]*\"$/,","\t\t\t\t\tinside: {","\t\t\t\t\t\t// See interpolation below","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t},","\t\t'variable': {","\t\t\tpattern: /\\$(?:::)?\\w+(?:::\\w+)*/,","\t\t\tinside: {","\t\t\t\t'punctuation': /::/","\t\t\t}","\t\t},","\t\t'attr-name': /(?:\\w+|\\*)(?=\\s*=>)/,","\t\t'function': [","\t\t\t{","\t\t\t\tpattern: /(\\.)(?!\\d)\\w+/,","\t\t\t\tlookbehind: true","\t\t\t},","\t\t\t/\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/","\t\t],","\t\t'number': /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,","\t\t'boolean': /\\b(?:true|false)\\b/,","\t\t// Includes words reserved for future use","\t\t'keyword': /\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,","\t\t'datatype': {","\t\t\tpattern: /\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,","\t\t\talias: 'symbol'","\t\t},","\t\t'operator': /=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,","\t\t'punctuation': /[\\[\\]{}().,;]|:+/","\t};","","\tvar interpolation = [","\t\t{","\t\t\t// Allow for one nested level of braces inside interpolation","\t\t\tpattern: /(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,","\t\t\tlookbehind: true,","\t\t\tinside: {","\t\t\t\t'short-variable': {","\t\t\t\t\t// Negative look-ahead prevent wrong highlighting of functions","\t\t\t\t\tpattern: /(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,","\t\t\t\t\tlookbehind: true,","\t\t\t\t\talias: 'variable',","\t\t\t\t\tinside: {","\t\t\t\t\t\t'punctuation': /::/","\t\t\t\t\t}","\t\t\t\t},","\t\t\t\t'delimiter': {","\t\t\t\t\tpattern: /^\\$/,","\t\t\t\t\talias: 'variable'","\t\t\t\t},","\t\t\t\trest: Prism.util.clone(Prism.languages.puppet)","\t\t\t}","\t\t},","\t\t{","\t\t\tpattern: /(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,","\t\t\tlookbehind: true,","\t\t\talias: 'variable',","\t\t\tinside: {","\t\t\t\t'punctuation': /::/","\t\t\t}","\t\t}","\t];","\tPrism.languages.puppet['heredoc'][0].inside.interpolation = interpolation;","\tPrism.languages.puppet['string'].inside['double-quoted'].inside.interpolation = interpolation;","}(Prism));"],"l":{"1":1,"2":1,"98":1,"129":1,"130":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-pure.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-pure.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":5,"7":5,"8":1,"9":1,"10":5,"11":1,"12":1,"13":1,"14":1,"15":1,"16":0},"b":{"1":[1,4],"2":[1,4],"3":[0,1]},"f":{"1":1,"2":5},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":18}}},"2":{"name":"(anonymous_2)","line":55,"loc":{"start":{"line":55,"column":25},"end":{"line":55,"column":41}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":77,"column":10}},"2":{"start":{"line":2,"column":1},"end":{"line":44,"column":3}},"3":{"start":{"line":46,"column":1},"end":{"line":52,"column":3}},"4":{"start":{"line":53,"column":1},"end":{"line":53,"column":67}},"5":{"start":{"line":55,"column":1},"end":{"line":70,"column":4}},"6":{"start":{"line":56,"column":2},"end":{"line":56,"column":19}},"7":{"start":{"line":57,"column":2},"end":{"line":60,"column":3}},"8":{"start":{"line":58,"column":3},"end":{"line":58,"column":22}},"9":{"start":{"line":59,"column":3},"end":{"line":59,"column":20}},"10":{"start":{"line":61,"column":2},"end":{"line":69,"column":3}},"11":{"start":{"line":62,"column":3},"end":{"line":62,"column":14}},"12":{"start":{"line":63,"column":3},"end":{"line":66,"column":5}},"13":{"start":{"line":67,"column":3},"end":{"line":67,"column":84}},"14":{"start":{"line":68,"column":3},"end":{"line":68,"column":58}},"15":{"start":{"line":73,"column":1},"end":{"line":75,"column":2}},"16":{"start":{"line":74,"column":2},"end":{"line":74,"column":88}}},"branchMap":{"1":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":2},"end":{"line":57,"column":2}},{"start":{"line":57,"column":2},"end":{"line":57,"column":2}}]},"2":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"3":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":1},"end":{"line":73,"column":1}},{"start":{"line":73,"column":1},"end":{"line":73,"column":1}}]}},"code":["(function (Prism) {","\tPrism.languages.pure = {","\t\t'inline-lang': {","\t\t\tpattern: /%<[\\s\\S]+?%>/,","\t\t\tinside: {","\t\t\t\t'lang': {","\t\t\t\t\tpattern: /(^%< *)-\\*-.+?-\\*-/,","\t\t\t\t\tlookbehind: true,","\t\t\t\t\talias: 'comment'","\t\t\t\t},","\t\t\t\t'delimiter': {","\t\t\t\t\tpattern: /^%<.*|%>$/,","\t\t\t\t\talias: 'punctuation'","\t\t\t\t}","\t\t\t}","\t\t},","\t\t'comment': [","\t\t\t{","\t\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\//,","\t\t\t\tlookbehind: true","\t\t\t},","\t\t\t{","\t\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,","\t\t\t\tlookbehind: true","\t\t\t},","\t\t\t/#!.+/","\t\t],","\t\t'string': /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,","\t\t'number': {","\t\t\t// The look-behind prevents wrong highlighting of the .. operator","\t\t\tpattern: /((?:\\.\\.)?)(?:\\b(?:inf|nan)\\b|\\b0x[\\da-f]+|(?:\\b(?:0b)?\\d+(?:\\.\\d)?|\\B\\.\\d)\\d*(?:e[+-]?\\d+)?L?)/i,","\t\t\tlookbehind: true","\t\t},","\t\t'keyword': /\\b(?:ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|NULL|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\\b/,","\t\t'function': /\\b(?:abs|add_(?:(?:fundef|interface|macdef|typedef)(?:_at)?|addr|constdef|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_(?:matrix|pointer)|byte_c?string(?:_pointer)?|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|short|sentry|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\\b/,","\t\t'special': {","\t\t\tpattern: /\\b__[a-z]+__\\b/i,","\t\t\talias: 'builtin'","\t\t},","\t\t// Any combination of operator chars can be an operator","\t\t'operator': /(?=\\b_|[^_])[!\"#$%&'*+,\\-.\\/:<=>?@\\\\^_`|~\\u00a1-\\u00bf\\u00d7-\\u00f7\\u20d0-\\u2bff]+|\\b(?:and|div|mod|not|or)\\b/,","\t\t// FIXME: How can we prevent | and , to be highlighted as operator when they are used alone?","\t\t'punctuation': /[(){}\\[\\];,|]/","\t};","","\tvar inlineLanguages = [","\t\t'c',","\t\t{ lang: 'c++', alias: 'cpp' },","\t\t'fortran',","\t\t'ats',","\t\t'dsp'","\t];","\tvar inlineLanguageRe = '%< *-\\\\*- *{lang}\\\\d* *-\\\\*-[\\\\s\\\\S]+?%>';","","\tinlineLanguages.forEach(function (lang) {","\t\tvar alias = lang;","\t\tif (typeof lang !== 'string') {","\t\t\talias = lang.alias;","\t\t\tlang = lang.lang;","\t\t}","\t\tif (Prism.languages[alias]) {","\t\t\tvar o = {};","\t\t\to['inline-lang-' + alias] = {","\t\t\t\tpattern: RegExp(inlineLanguageRe.replace('{lang}', lang.replace(/([.+*?\\/\\\\(){}\\[\\]])/g,'\\\\$1')), 'i'),","\t\t\t\tinside: Prism.util.clone(Prism.languages.pure['inline-lang'].inside)","\t\t\t};","\t\t\to['inline-lang-' + alias].inside.rest = Prism.util.clone(Prism.languages[alias]);","\t\t\tPrism.languages.insertBefore('pure', 'inline-lang', o);","\t\t}","\t});","","\t// C is the default inline language","\tif (Prism.languages.c) {","\t\tPrism.languages.pure['inline-lang'].inside.rest = Prism.util.clone(Prism.languages.c);","\t}","","}(Prism));"],"l":{"1":1,"2":1,"46":1,"53":1,"55":1,"56":5,"57":5,"58":1,"59":1,"61":5,"62":1,"63":1,"67":1,"68":1,"73":1,"74":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-python.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-python.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":27,"column":2}}},"branchMap":{},"code":["Prism.languages.python= {","\t'triple-quoted-string': {","\t\tpattern: /\"\"\"[\\s\\S]+?\"\"\"|'''[\\s\\S]+?'''/,","\t\talias: 'string'","\t},","\t'comment': {","\t\tpattern: /(^|[^\\\\])#.*/,","\t\tlookbehind: true","\t},","\t'string': {","\t\tpattern: /(\"|')(?:\\\\\\\\|\\\\?[^\\\\\\r\\n])*?\\1/,","\t\tgreedy: true","\t},","\t'function' : {","\t\tpattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_][a-zA-Z0-9_]*(?=\\()/g,","\t\tlookbehind: true","\t},","\t'class-name': {","\t\tpattern: /(\\bclass\\s+)[a-z0-9_]+/i,","\t\tlookbehind: true","\t},","\t'keyword' : /\\b(?:as|assert|async|await|break|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|pass|print|raise|return|try|while|with|yield)\\b/,","\t'boolean' : /\\b(?:True|False)\\b/,","\t'number' : /\\b-?(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*\\.?\\d*|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,","\t'operator' : /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:or|and|not)\\b/,","\t'punctuation' : /[{}[\\];(),.:]/","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-q.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-q.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":44,"column":2}}},"branchMap":{},"code":["Prism.languages.q = {","\t'string': /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,","\t'comment': [","\t\t// From http://code.kx.com/wiki/Reference/Slash:","\t\t// When / is following a space (or a right parenthesis, bracket, or brace), it is ignored with the rest of the line.","\t\t{","","\t\t\tpattern: /([\\t )\\]}])\\/.*/,","\t\t\tlookbehind: true","\t\t},","\t\t// From http://code.kx.com/wiki/Reference/Slash:","\t\t// A line which has / as its first character and contains at least one other non-whitespace character is a whole-line comment and is ignored entirely.","\t\t// A / on a line by itself begins a multiline comment which is terminated by the next \\ on a line by itself.","\t\t// If a / is not matched by a \\, the multiline comment is unterminated and continues to end of file.","\t\t// The / and \\ must be the first char on the line, but may be followed by any amount of whitespace.","\t\t{","\t\t\tpattern: /(^|\\r?\\n|\\r)\\/[\\t ]*(?:(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r))*?(?:\\\\(?=[\\t ]*(?:\\r?\\n|\\r))|$)|\\S.*)/,","\t\t\tlookbehind: true","\t\t},","\t\t// From http://code.kx.com/wiki/Reference/Slash:","\t\t// A \\ on a line by itself with no preceding matching / will comment to end of file.","\t\t/^\\\\[\\t ]*(?:\\r?\\n|\\r)[\\s\\S]+/m,","","\t\t/^#!.+/m","\t],","\t'symbol': /`(?::\\S+|[\\w.]*)/,","\t'datetime': {","\t\tpattern: /0N[mdzuvt]|0W[dtz]|\\d{4}\\.\\d\\d(?:m|\\.\\d\\d(?:T(?:\\d\\d(?::\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?)?)?)?[dz]?)|\\d\\d:\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?[uvt]?/,","\t\talias: 'number'","\t},","\t// The negative look-ahead prevents bad highlighting","\t// of verbs 0: and 1:","\t'number': /\\b-?(?![01]:)(?:0[wn]|0W[hj]?|0N[hje]?|0x[\\da-fA-F]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?[hjfeb]?)/,","\t'keyword': /\\\\\\w+\\b|\\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\\b/,","\t'adverb': {","\t\tpattern: /['\\/\\\\]:?|\\beach\\b/,","\t\talias: 'function'","\t},","\t'verb': {","\t\tpattern: /(?:\\B\\.\\B|\\b[01]:|<[=>]?|>=?|[:+\\-*%,!?_~=|$&#@^]):?/,","\t\talias: 'operator'","\t},","\t'punctuation': /[(){}\\[\\];.]/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-qore.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-qore.js","s":{"1":2},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":17,"column":3}}},"branchMap":{},"code":["Prism.languages.qore = Prism.languages.extend('clike', {","\t'comment': {","\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\w\\W]*?\\*\\/|(?:\\/\\/|#).*)/,","\t\tlookbehind: true","\t},","\t// Overridden to allow unescaped multi-line strings","\t'string': /(\"|')(\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\])*\\1/,","\t'variable': /\\$(?!\\d)\\w+\\b/,","\t'keyword': /\\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:int|float|number|bool|string|date|list)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/,","\t'number': /\\b(?:0b[01]+|0x[\\da-f]*\\.?[\\da-fp\\-]+|\\d*\\.?\\d+e?\\d*[df]|\\d*\\.?\\d+)\\b/i,","\t'boolean': /\\b(?:true|false)\\b/i,","\t'operator': {","\t\tpattern: /(^|[^\\.])(?:\\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\\|[|=]?|[*\\/%^]=?|[~?])/,","\t\tlookbehind: true","\t},","\t'function': /\\$?\\b(?!\\d)\\w+(?=\\()/","});"],"l":{"1":2}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-reason.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-reason.js","s":{"1":2,"2":0,"3":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":14,"column":3}},"2":{"start":{"line":15,"column":0},"end":{"line":29,"column":3}},"3":{"start":{"line":32,"column":0},"end":{"line":32,"column":39}}},"branchMap":{},"code":["Prism.languages.reason = Prism.languages.extend('clike', {","\t'comment': {","\t\tpattern: /(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\//,","\t\tlookbehind: true","\t},","\t'string': {","\t\tpattern: /\"(\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,","\t\tgreedy: true","\t},","\t// 'class-name' must be matched *after* 'constructor' defined below","\t'class-name': /\\b[A-Z]\\w*/,","\t'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,","\t'operator': /\\.{3}|:[:=]|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:mod|land|lor|lxor|lsl|lsr|asr)\\b/","});","Prism.languages.insertBefore('reason', 'class-name', {","\t'character': {","\t\tpattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'])'/,","\t\talias: 'string'","\t},","\t'constructor': {","\t\t// Negative look-ahead prevents from matching things like String.capitalize","\t\tpattern: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,","\t\talias: 'variable'","\t},","\t'label': {","\t\tpattern: /\\b[a-z]\\w*(?=::)/,","\t\talias: 'symbol'","\t}","});","","// We can't match functions property, so let's not even try.","delete Prism.languages.reason.function;"],"l":{"1":2,"15":0,"32":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-rest.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-rest.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":205,"column":2}}},"branchMap":{},"code":["Prism.languages.rest = {","\t'table': [","\t\t{","\t\t\tpattern: /(\\s*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1(?:[+|].+)+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/,","\t\t\tlookbehind: true,","\t\t\tinside: {","\t\t\t\t'punctuation': /\\||(?:\\+[=-]+)+\\+/","\t\t\t}","\t\t},","\t\t{","\t\t\tpattern: /(\\s*)(?:=+ +)+=+((?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1(?:=+ +)+=+(?=(?:\\r?\\n|\\r){2}|\\s*$)/,","\t\t\tlookbehind: true,","\t\t\tinside: {","\t\t\t\t'punctuation': /[=-]+/","\t\t\t}","\t\t}","\t],","","\t// Directive-like patterns","","\t'substitution-def': {","\t\tpattern: /(^\\s*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,","\t\tlookbehind: true,","\t\tinside: {","\t\t\t'substitution': {","\t\t\t\tpattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,","\t\t\t\talias: 'attr-value',","\t\t\t\tinside: {","\t\t\t\t\t'punctuation': /^\\||\\|$/","\t\t\t\t}","\t\t\t},","\t\t\t'directive': {","\t\t\t\tpattern: /( +)[^:]+::/,","\t\t\t\tlookbehind: true,","\t\t\t\talias: 'function',","\t\t\t\tinside: {","\t\t\t\t\t'punctuation': /::$/","\t\t\t\t}","\t\t\t}","\t\t}","\t},","\t'link-target': [","\t\t{","\t\t\tpattern: /(^\\s*\\.\\. )\\[[^\\]]+\\]/m,","\t\t\tlookbehind: true,","\t\t\talias: 'string',","\t\t\tinside: {","\t\t\t\t'punctuation': /^\\[|\\]$/","\t\t\t}","\t\t},","\t\t{","\t\t\tpattern: /(^\\s*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,","\t\t\tlookbehind: true,","\t\t\talias: 'string',","\t\t\tinside: {","\t\t\t\t'punctuation': /^_|:$/","\t\t\t}","\t\t}","\t],","\t'directive': {","\t\tpattern: /(^\\s*\\.\\. )[^:]+::/m,","\t\tlookbehind: true,","\t\talias: 'function',","\t\tinside: {","\t\t\t'punctuation': /::$/","\t\t}","\t},","\t'comment': {","\t\t// The two alternatives try to prevent highlighting of blank comments","\t\tpattern: /(^\\s*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,","\t\tlookbehind: true","\t},","","\t'title': [","\t\t// Overlined and underlined","\t\t{","\t\t\tpattern: /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,","\t\t\tinside: {","\t\t\t\t'punctuation': /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,","\t\t\t\t'important': /.+/","\t\t\t}","\t\t},","","\t\t// Underlined only","\t\t{","\t\t\tpattern: /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,","\t\t\tlookbehind: true,","\t\t\tinside: {","\t\t\t\t'punctuation': /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,","\t\t\t\t'important': /.+/","\t\t\t}","\t\t}","\t],","\t'hr': {","\t\tpattern: /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,","\t\tlookbehind: true,","\t\talias: 'punctuation'","\t},","\t'field': {","\t\tpattern: /(^\\s*):[^:\\r\\n]+:(?= )/m,","\t\tlookbehind: true,","\t\talias: 'attr-name'","\t},","\t'command-line-option': {","\t\tpattern: /(^\\s*)(?:[+-][a-z\\d]|(?:\\-\\-|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][a-z\\d_-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:\\-\\-|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][a-z\\d_-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,","\t\tlookbehind: true,","\t\talias: 'symbol'","\t},","\t'literal-block': {","\t\tpattern: /::(?:\\r?\\n|\\r){2}([ \\t]+).+(?:(?:\\r?\\n|\\r)\\1.+)*/,","\t\tinside: {","\t\t\t'literal-block-punctuation': {","\t\t\t\tpattern: /^::/,","\t\t\t\talias: 'punctuation'","\t\t\t}","\t\t}","\t},","\t'quoted-literal-block': {","\t\tpattern: /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,","\t\tinside: {","\t\t\t'literal-block-punctuation': {","\t\t\t\tpattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,","\t\t\t\talias: 'punctuation'","\t\t\t}","\t\t}","\t},","\t'list-bullet': {","\t\tpattern: /(^\\s*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,","\t\tlookbehind: true,","\t\talias: 'punctuation'","\t},","\t'doctest-block': {","\t\tpattern: /(^\\s*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,","\t\tlookbehind: true,","\t\tinside: {","\t\t\t'punctuation': /^>>>/","\t\t}","\t},","","\t'inline': [","\t\t{","\t\t\tpattern: /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s).*?[^\\s]\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,","\t\t\tlookbehind: true,","\t\t\tinside: {","\t\t\t\t'bold': {","\t\t\t\t\tpattern: /(^\\*\\*).+(?=\\*\\*$)/,","\t\t\t\t\tlookbehind: true","\t\t\t\t},","\t\t\t\t'italic': {","\t\t\t\t\tpattern: /(^\\*).+(?=\\*$)/,","\t\t\t\t\tlookbehind: true","\t\t\t\t},","\t\t\t\t'inline-literal': {","\t\t\t\t\tpattern: /(^``).+(?=``$)/,","\t\t\t\t\tlookbehind: true,","\t\t\t\t\talias: 'symbol'","\t\t\t\t},","\t\t\t\t'role': {","\t\t\t\t\tpattern: /^:[^:]+:|:[^:]+:$/,","\t\t\t\t\talias: 'function',","\t\t\t\t\tinside: {","\t\t\t\t\t\t'punctuation': /^:|:$/","\t\t\t\t\t}","\t\t\t\t},","\t\t\t\t'interpreted-text': {","\t\t\t\t\tpattern: /(^`).+(?=`$)/,","\t\t\t\t\tlookbehind: true,","\t\t\t\t\talias: 'attr-value'","\t\t\t\t},","\t\t\t\t'substitution': {","\t\t\t\t\tpattern: /(^\\|).+(?=\\|$)/,","\t\t\t\t\tlookbehind: true,","\t\t\t\t\talias: 'attr-value'","\t\t\t\t},","\t\t\t\t'punctuation': /\\*\\*?|``?|\\|/","\t\t\t}","\t\t}","\t],","","\t'link': [","\t\t{","\t\t\tpattern: /\\[[^\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,","\t\t\talias: 'string',","\t\t\tinside: {","\t\t\t\t'punctuation': /^\\[|\\]_$/","\t\t\t}","\t\t},","\t\t{","\t\t\tpattern: /(?:\\b[a-z\\d](?:[_.:+]?[a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,","\t\t\talias: 'string',","\t\t\tinside: {","\t\t\t\t'punctuation': /^_?`|`$|`?_?_$/","\t\t\t}","\t\t}","\t],","","\t// Line block start,","\t// quote attribution,","\t// explicit markup start,","\t// and anonymous hyperlink target shortcut (__)","\t'punctuation': {","\t\tpattern: /(^\\s*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,","\t\tlookbehind: true","\t}","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-rip.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-rip.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":28,"column":2}}},"branchMap":{},"code":["Prism.languages.rip = {","\t'comment': /#.*/,","","\t'keyword': /(?:=>|->)|\\b(?:class|if|else|switch|case|return|exit|try|catch|finally|raise)\\b/,","","\t'builtin': /@|\\bSystem\\b/,","","\t'boolean': /\\b(?:true|false)\\b/,","","\t'date': /\\b\\d{4}-\\d{2}-\\d{2}\\b/,","\t'time': /\\b\\d{2}:\\d{2}:\\d{2}\\b/,","\t'datetime': /\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\b/,","","\t'character': /\\B`[^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]\\b/,","","\t'regex': {","\t\tpattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/(?=\\s*($|[\\r\\n,.;})]))/,","\t\tlookbehind: true","\t},","","\t'symbol': /:[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/,","\t'string': /(\"|')(\\\\?.)*?\\1/,","\t'number': /[+-]?(?:(?:\\d+\\.\\d+)|(?:\\d+))/,","","\t'punctuation': /(?:\\.{2,3})|[`,.:;=\\/\\\\()<>\\[\\]{}]/,","","\t'reference': /[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-r.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-r.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":19,"column":2}}},"branchMap":{},"code":["Prism.languages.r = {","\t'comment': /#.*/,","\t'string': /(['\"])(?:\\\\?.)*?\\1/,","\t'percent-operator': {","\t\t// Includes user-defined operators","\t\t// and %%, %*%, %/%, %in%, %o%, %x%","\t\tpattern: /%[^%\\s]*%/,","\t\talias: 'operator'","\t},","\t'boolean': /\\b(?:TRUE|FALSE)\\b/,","\t'ellipsis': /\\.\\.(?:\\.|\\d+)/,","\t'number': [","\t\t/\\b(?:NaN|Inf)\\b/,","\t\t/\\b(?:0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\d*\\.?\\d+)(?:[EePp][+-]?\\d+)?[iL]?\\b/","\t],","\t'keyword': /\\b(?:if|else|repeat|while|function|for|in|next|break|NULL|NA|NA_integer_|NA_real_|NA_complex_|NA_character_)\\b/,","\t'operator': /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,","\t'punctuation': /[(){}\\[\\],;]/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-roboconf.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-roboconf.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":27,"column":2}}},"branchMap":{},"code":["Prism.languages.roboconf = {","\t'comment': /#.*/,","\t'keyword': {","\t\t'pattern': /(^|\\s)(?:(?:facet|instance of)(?=[ \\t]+[\\w-]+[ \\t]*\\{)|(?:external|import)\\b)/,","\t\tlookbehind: true","\t},","\t'component': {","\t\tpattern: /[\\w-]+(?=[ \\t]*\\{)/,","\t\talias: 'variable'","\t},","\t'property': /[\\w.-]+(?=[ \\t]*:)/,","\t'value': {","\t\tpattern: /(=[ \\t]*)[^,;]+/,","\t\tlookbehind: true,","\t\talias: 'attr-value'","\t},","\t'optional': {","\t\tpattern: /\\(optional\\)/,","\t\talias: 'builtin'","\t},","\t'wildcard': {","\t\tpattern: /(\\.)\\*/,","\t\tlookbehind: true,","\t\talias: 'operator'","\t},","\t'punctuation': /[{},.;:=]/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-ruby.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-ruby.js","s":{"1":2,"2":2,"3":0,"4":0,"5":0,"6":0},"b":{},"f":{"1":2},"fnMap":{"1":{"name":"(anonymous_1)","line":7,"loc":{"start":{"line":7,"column":1},"end":{"line":7,"column":17}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":116,"column":10}},"2":{"start":{"line":8,"column":1},"end":{"line":11,"column":4}},"3":{"start":{"line":13,"column":1},"end":{"line":22,"column":3}},"4":{"start":{"line":24,"column":1},"end":{"line":64,"column":4}},"5":{"start":{"line":66,"column":1},"end":{"line":69,"column":4}},"6":{"start":{"line":71,"column":1},"end":{"line":115,"column":3}}},"branchMap":{},"code":["/**"," * Original by Samuel Flores"," *"," * Adds the following new token classes:"," * \t\tconstant, builtin, variable, symbol, regex"," */","(function(Prism) {","\tPrism.languages.ruby = Prism.languages.extend('clike', {","\t\t'comment': /#(?!\\{[^\\r\\n]*?\\}).*/,","\t\t'keyword': /\\b(alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\\b/","\t});","","\tvar interpolation = {","\t\tpattern: /#\\{[^}]+\\}/,","\t\tinside: {","\t\t\t'delimiter': {","\t\t\t\tpattern: /^#\\{|\\}$/,","\t\t\t\talias: 'tag'","\t\t\t},","\t\t\trest: Prism.util.clone(Prism.languages.ruby)","\t\t}","\t};","","\tPrism.languages.insertBefore('ruby', 'keyword', {","\t\t'regex': [","\t\t\t{","\t\t\t\tpattern: /%r([^a-zA-Z0-9\\s\\{\\(\\[<])(?:[^\\\\]|\\\\[\\s\\S])*?\\1[gim]{0,3}/,","\t\t\t\tinside: {","\t\t\t\t\t'interpolation': interpolation","\t\t\t\t}","\t\t\t},","\t\t\t{","\t\t\t\tpattern: /%r\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/,","\t\t\t\tinside: {","\t\t\t\t\t'interpolation': interpolation","\t\t\t\t}","\t\t\t},","\t\t\t{","\t\t\t\t// Here we need to specifically allow interpolation","\t\t\t\tpattern: /%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/,","\t\t\t\tinside: {","\t\t\t\t\t'interpolation': interpolation","\t\t\t\t}","\t\t\t},","\t\t\t{","\t\t\t\tpattern: /%r\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/,","\t\t\t\tinside: {","\t\t\t\t\t'interpolation': interpolation","\t\t\t\t}","\t\t\t},","\t\t\t{","\t\t\t\tpattern: /%r<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/,","\t\t\t\tinside: {","\t\t\t\t\t'interpolation': interpolation","\t\t\t\t}","\t\t\t},","\t\t\t{","\t\t\t\tpattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,","\t\t\t\tlookbehind: true","\t\t\t}","\t\t],","\t\t'variable': /[@$]+[a-zA-Z_][a-zA-Z_0-9]*(?:[?!]|\\b)/,","\t\t'symbol': /:[a-zA-Z_][a-zA-Z_0-9]*(?:[?!]|\\b)/","\t});","","\tPrism.languages.insertBefore('ruby', 'number', {","\t\t'builtin': /\\b(Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|File|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,","\t\t'constant': /\\b[A-Z][a-zA-Z_0-9]*(?:[?!]|\\b)/","\t});","","\tPrism.languages.ruby.string = [","\t\t{","\t\t\tpattern: /%[qQiIwWxs]?([^a-zA-Z0-9\\s\\{\\(\\[<])(?:[^\\\\]|\\\\[\\s\\S])*?\\1/,","\t\t\tgreedy: true,","\t\t\tinside: {","\t\t\t\t'interpolation': interpolation","\t\t\t}","\t\t},","\t\t{","\t\t\tpattern: /%[qQiIwWxs]?\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,","\t\t\tgreedy: true,","\t\t\tinside: {","\t\t\t\t'interpolation': interpolation","\t\t\t}","\t\t},","\t\t{","\t\t\t// Here we need to specifically allow interpolation","\t\t\tpattern: /%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/,","\t\t\tgreedy: true,","\t\t\tinside: {","\t\t\t\t'interpolation': interpolation","\t\t\t}","\t\t},","\t\t{","\t\t\tpattern: /%[qQiIwWxs]?\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/,","\t\t\tgreedy: true,","\t\t\tinside: {","\t\t\t\t'interpolation': interpolation","\t\t\t}","\t\t},","\t\t{","\t\t\tpattern: /%[qQiIwWxs]?<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,","\t\t\tgreedy: true,","\t\t\tinside: {","\t\t\t\t'interpolation': interpolation","\t\t\t}","\t\t},","\t\t{","\t\t\tpattern: /(\"|')(#\\{[^}]+\\}|\\\\(?:\\r?\\n|\\r)|\\\\?.)*?\\1/,","\t\t\tgreedy: true,","\t\t\tinside: {","\t\t\t\t'interpolation': interpolation","\t\t\t}","\t\t}","\t];","}(Prism));"],"l":{"7":2,"8":2,"13":0,"24":0,"66":0,"71":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-rust.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-rust.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":53,"column":2}}},"branchMap":{},"code":["/* TODO","\tAdd support for Markdown notation inside doc comments","\tAdd support for nested block comments...","\tMatch closure params even when not followed by dash or brace","\tAdd better support for macro definition","*/","","Prism.languages.rust = {","\t'comment': [","\t\t{","\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\//,","\t\t\tlookbehind: true","\t\t},","\t\t{","\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,","\t\t\tlookbehind: true","\t\t}","\t],","\t'string': [","\t\t/b?r(#*)\"(?:\\\\?.)*?\"\\1/,","\t\t/b?(\"|')(?:\\\\?.)*?\\1/","\t],","\t'keyword': /\\b(?:abstract|alignof|as|be|box|break|const|continue|crate|do|else|enum|extern|false|final|fn|for|if|impl|in|let|loop|match|mod|move|mut|offsetof|once|override|priv|pub|pure|ref|return|sizeof|static|self|struct|super|true|trait|type|typeof|unsafe|unsized|use|virtual|where|while|yield)\\b/,","","\t'attribute': {","\t\tpattern: /#!?\\[.+?\\]/,","\t\talias: 'attr-name'","\t},","","\t'function': [","\t\t/[a-z0-9_]+(?=\\s*\\()/i,","\t\t// Macros can use parens or brackets","\t\t/[a-z0-9_]+!(?=\\s*\\(|\\[)/i","\t],","\t'macro-rules': {","\t\tpattern: /[a-z0-9_]+!/i,","\t\talias: 'function'","\t},","","\t// Hex, oct, bin, dec numbers with visual separators and type suffix","\t'number': /\\b-?(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(\\d(_?\\d)*)?\\.?\\d(_?\\d)*([Ee][+-]?\\d+)?)(?:_?(?:[iu](?:8|16|32|64)?|f32|f64))?\\b/,","","\t// Closure params should not be confused with bitwise OR |","\t'closure-params': {","\t\tpattern: /\\|[^|]*\\|(?=\\s*[{-])/,","\t\tinside: {","\t\t\t'punctuation': /[\\|:,]/,","\t\t\t'operator': /[&*]/","\t\t}","\t},","\t'punctuation': /[{}[\\];(),:]|\\.+|->/,","\t'operator': /[-+*\\/%!^=]=?|@|&[&=]?|\\|[|=]?|<<?=?|>>?=?/","};"],"l":{"8":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-sas.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-sas.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":31,"column":2}}},"branchMap":{},"code":["Prism.languages.sas = {","\t'datalines': {","\t\tpattern: /^\\s*(?:(?:data)?lines|cards);[\\s\\S]+?(?:\\r?\\n|\\r);/im,","\t\talias: 'string',","\t\tinside: {","\t\t\t'keyword': {","\t\t\t\tpattern: /^(\\s*)(?:(?:data)?lines|cards)/i,","\t\t\t\tlookbehind: true","\t\t\t},","\t\t\t'punctuation': /;/","\t\t}","\t},","\t'comment': [","\t\t{","\t\t\tpattern: /(^\\s*|;\\s*)\\*.*;/m,","\t\t\tlookbehind: true","\t\t},","\t\t/\\/\\*[\\s\\S]+?\\*\\//","\t],","\t'datetime': {","\t\t// '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt","\t\tpattern: /'[^']+'(?:dt?|t)\\b/i,","\t\talias: 'number'","\t},","\t'string': /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,","\t'keyword': /\\b(?:data|else|format|if|input|proc\\s\\w+|quit|run|then)\\b/i,","\t// Decimal (1.2e23), hexadecimal (0c1x)","\t'number': /(?:\\B-|\\b)(?:[\\da-f]+x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)/i,","\t'operator': /\\*\\*?|\\|\\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\\/=&]|[~¬^]=?|\\b(?:eq|ne|gt|lt|ge|le|in|not)\\b/i,","\t'punctuation': /[$%@.(){}\\[\\];,\\\\]/","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-sass.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-sass.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1},"b":{},"f":{"1":1},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":17}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":73,"column":10}},"2":{"start":{"line":2,"column":1},"end":{"line":8,"column":4}},"3":{"start":{"line":10,"column":1},"end":{"line":19,"column":4}},"4":{"start":{"line":20,"column":1},"end":{"line":20,"column":36}},"5":{"start":{"line":23,"column":1},"end":{"line":23,"column":50}},"6":{"start":{"line":24,"column":1},"end":{"line":30,"column":3}},"7":{"start":{"line":32,"column":1},"end":{"line":59,"column":4}},"8":{"start":{"line":60,"column":1},"end":{"line":60,"column":38}},"9":{"start":{"line":61,"column":1},"end":{"line":61,"column":39}},"10":{"start":{"line":65,"column":1},"end":{"line":65,"column":38}},"11":{"start":{"line":66,"column":1},"end":{"line":71,"column":4}}},"branchMap":{},"code":["(function(Prism) {","\tPrism.languages.sass = Prism.languages.extend('css', {","\t\t// Sass comments don't need to be closed, only indented","\t\t'comment': {","\t\t\tpattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t]+.+)*/m,","\t\t\tlookbehind: true","\t\t}","\t});","","\tPrism.languages.insertBefore('sass', 'atrule', {","\t\t// We want to consume the whole line","\t\t'atrule-line': {","\t\t\t// Includes support for = and + shortcuts","\t\t\tpattern: /^(?:[ \\t]*)[@+=].+/m,","\t\t\tinside: {","\t\t\t\t'atrule': /(?:@[\\w-]+|[+=])/m","\t\t\t}","\t\t}","\t});","\tdelete Prism.languages.sass.atrule;","","","\tvar variable = /((\\$[-_\\w]+)|(#\\{\\$[-_\\w]+\\}))/i;","\tvar operator = [","\t\t/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|or|not)\\b/,","\t\t{","\t\t\tpattern: /(\\s+)-(?=\\s)/,","\t\t\tlookbehind: true","\t\t}","\t];","","\tPrism.languages.insertBefore('sass', 'property', {","\t\t// We want to consume the whole line","\t\t'variable-line': {","\t\t\tpattern: /^[ \\t]*\\$.+/m,","\t\t\tinside: {","\t\t\t\t'punctuation': /:/,","\t\t\t\t'variable': variable,","\t\t\t\t'operator': operator","\t\t\t}","\t\t},","\t\t// We want to consume the whole line","\t\t'property-line': {","\t\t\tpattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s]+.*)/m,","\t\t\tinside: {","\t\t\t\t'property': [","\t\t\t\t\t/[^:\\s]+(?=\\s*:)/,","\t\t\t\t\t{","\t\t\t\t\t\tpattern: /(:)[^:\\s]+/,","\t\t\t\t\t\tlookbehind: true","\t\t\t\t\t}","\t\t\t\t],","\t\t\t\t'punctuation': /:/,","\t\t\t\t'variable': variable,","\t\t\t\t'operator': operator,","\t\t\t\t'important': Prism.languages.sass.important","\t\t\t}","\t\t}","\t});","\tdelete Prism.languages.sass.property;","\tdelete Prism.languages.sass.important;","","\t// Now that whole lines for other patterns are consumed,","\t// what's left should be selectors","\tdelete Prism.languages.sass.selector;","\tPrism.languages.insertBefore('sass', 'punctuation', {","\t\t'selector': {","\t\t\tpattern: /([ \\t]*)\\S(?:,?[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,?[^,\\r\\n]+)*)*/,","\t\t\tlookbehind: true","\t\t}","\t});","","}(Prism));"],"l":{"1":1,"2":1,"10":1,"20":1,"23":1,"24":1,"32":1,"60":1,"61":1,"65":1,"66":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-scala.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-scala.js","s":{"1":2,"2":0,"3":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":16,"column":3}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":43}},"3":{"start":{"line":18,"column":0},"end":{"line":18,"column":41}}},"branchMap":{},"code":["Prism.languages.scala = Prism.languages.extend('java', {","\t'keyword': /<-|=>|\\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\\b/,","\t'string': [","\t\t{","\t\t\tpattern: /\"\"\"[\\W\\w]*?\"\"\"/,","\t\t\tgreedy: true","\t\t},","\t\t{","\t\t\tpattern: /(\"|')(?:\\\\\\\\|\\\\?[^\\\\\\r\\n])*?\\1/,","\t\t\tgreedy: true","\t\t},","\t],","\t'builtin': /\\b(?:String|Int|Long|Short|Byte|Boolean|Double|Float|Char|Any|AnyRef|AnyVal|Unit|Nothing)\\b/,","\t'number': /\\b(?:0x[\\da-f]*\\.?[\\da-f]+|\\d*\\.?\\d+e?\\d*[dfl]?)\\b/i,","\t'symbol': /'[^\\d\\s\\\\]\\w*/","});","delete Prism.languages.scala['class-name'];","delete Prism.languages.scala['function'];",""],"l":{"1":2,"17":0,"18":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-scheme.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-scheme.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":26,"column":2}}},"branchMap":{},"code":["Prism.languages.scheme = {","\t'comment' : /;.*/,","\t'string' :  /\"(?:[^\"\\\\\\r\\n]|\\\\.)*?\"|'[^('\\s]*/,","\t'keyword' : {","\t\tpattern : /(\\()(?:define(?:-syntax|-library|-values)?|(?:case-)?lambda|let(?:\\*|rec)?(?:-values)?|else|if|cond|begin|delay(?:-force)?|parameterize|guard|set!|(?:quasi-)?quote|syntax-rules)/,","\t\tlookbehind : true","\t},","\t'builtin' : {","\t\tpattern :  /(\\()(?:(?:cons|car|cdr|list|call-with-current-continuation|call\\/cc|append|abs|apply|eval)\\b|null\\?|pair\\?|boolean\\?|eof-object\\?|char\\?|procedure\\?|number\\?|port\\?|string\\?|vector\\?|symbol\\?|bytevector\\?)/,","\t\tlookbehind : true","\t},","\t'number' : {","\t\tpattern: /(\\s|\\))[-+]?[0-9]*\\.?[0-9]+(?:\\s*[-+]\\s*[0-9]*\\.?[0-9]+i)?\\b/,","\t\tlookbehind: true","\t},","\t'boolean' : /#[tf]/,","\t'operator': {","\t\tpattern: /(\\()(?:[-+*%\\/]|[<>]=?|=>?)/,","\t\tlookbehind: true","\t},","\t'function' : {","\t\tpattern : /(\\()[^\\s()]*(?=\\s)/,","\t\tlookbehind : true","\t},","\t'punctuation' : /[()]/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-scss.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-scss.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":34,"column":3}},"2":{"start":{"line":36,"column":0},"end":{"line":44,"column":3}},"3":{"start":{"line":46,"column":0},"end":{"line":51,"column":2}},"4":{"start":{"line":53,"column":0},"end":{"line":56,"column":3}},"5":{"start":{"line":58,"column":0},"end":{"line":73,"column":3}},"6":{"start":{"line":75,"column":0},"end":{"line":75,"column":84}}},"branchMap":{},"code":["Prism.languages.scss = Prism.languages.extend('css', {","\t'comment': {","\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\w\\W]*?\\*\\/|\\/\\/.*)/,","\t\tlookbehind: true","\t},","\t'atrule': {","\t\tpattern: /@[\\w-]+(?:\\([^()]+\\)|[^(])*?(?=\\s+[{;])/,","\t\tinside: {","\t\t\t'rule': /@[\\w-]+/","\t\t\t// See rest below","\t\t}","\t},","\t// url, compassified","\t'url': /(?:[-a-z]+-)*url(?=\\()/i,","\t// CSS selector regex is not appropriate for Sass","\t// since there can be lot more things (var, @ directive, nesting..)","\t// a selector must start at the end of a property or after a brace (end of other rules or nesting)","\t// it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable","\t// the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var","\t// can \"pass\" as a selector- e.g: proper#{$erty})","\t// this one was hard to do, so please be careful if you edit this one :)","\t'selector': {","\t\t// Initial look-ahead is used to prevent matching of blank selectors","\t\tpattern: /(?=\\S)[^@;\\{\\}\\(\\)]?([^@;\\{\\}\\(\\)]|&|#\\{\\$[-_\\w]+\\})+(?=\\s*\\{(\\}|\\s|[^\\}]+(:|\\{)[^\\}]+))/m,","\t\tinside: {","\t\t\t'parent': {","\t\t\t\tpattern: /&/,","\t\t\t\talias: 'important'","\t\t\t},","\t\t\t'placeholder': /%[-_\\w]+/,","\t\t\t'variable': /\\$[-_\\w]+|#\\{\\$[-_\\w]+\\}/","\t\t}","\t}","});","","Prism.languages.insertBefore('scss', 'atrule', {","\t'keyword': [","\t\t/@(?:if|else(?: if)?|for|each|while|import|extend|debug|warn|mixin|include|function|return|content)/i,","\t\t{","\t\t\tpattern: /( +)(?:from|through)(?= )/,","\t\t\tlookbehind: true","\t\t}","\t]","});","","Prism.languages.scss.property = {","\tpattern: /(?:[\\w-]|\\$[-_\\w]+|#\\{\\$[-_\\w]+\\})+(?=\\s*:)/i,","\tinside: {","\t\t'variable': /\\$[-_\\w]+|#\\{\\$[-_\\w]+\\}/","\t}","};","","Prism.languages.insertBefore('scss', 'important', {","\t// var and interpolated vars","\t'variable': /\\$[-_\\w]+|#\\{\\$[-_\\w]+\\}/","});","","Prism.languages.insertBefore('scss', 'function', {","\t'placeholder': {","\t\tpattern: /%[-_\\w]+/,","\t\talias: 'selector'","\t},","\t'statement': {","\t\tpattern: /\\B!(?:default|optional)\\b/i,","\t\talias: 'keyword'","\t},","\t'boolean': /\\b(?:true|false)\\b/,","\t'null': /\\bnull\\b/,","\t'operator': {","\t\tpattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|or|not)(?=\\s)/,","\t\tlookbehind: true","\t}","});","","Prism.languages.scss['atrule'].inside.rest = Prism.util.clone(Prism.languages.scss);"],"l":{"1":1,"36":1,"46":1,"53":1,"58":1,"75":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-smalltalk.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-smalltalk.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":31,"column":2}}},"branchMap":{},"code":["Prism.languages.smalltalk = {","\t'comment': /\"(?:\"\"|[^\"])+\"/,","\t'string': /'(?:''|[^'])+'/,","\t'symbol': /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,","\t'block-arguments': {","\t\tpattern: /(\\[\\s*):[^\\[|]*?\\|/,","\t\tlookbehind: true,","\t\tinside: {","\t\t\t'variable': /:[\\da-z]+/i,","\t\t\t'punctuation': /\\|/","\t\t}","\t},","\t'temporary-variables': {","\t\tpattern: /\\|[^|]+\\|/,","\t\tinside: {","\t\t\t'variable': /[\\da-z]+/i,","\t\t\t'punctuation': /\\|/","\t\t}","\t},","\t'keyword': /\\b(?:nil|true|false|self|super|new)\\b/,","\t'character': {","\t\tpattern: /\\$./,","\t\talias: 'string'","\t},","\t'number': [","\t\t/\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/,","\t\t/(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e-?\\d+)?/","\t],","\t'operator': /[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,","\t'punctuation': /[.;:?\\[\\](){}]/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-smarty.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-smarty.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":6,"loc":{"start":{"line":6,"column":1},"end":{"line":6,"column":17}}},"2":{"name":"(anonymous_2)","line":77,"loc":{"start":{"line":77,"column":37},"end":{"line":77,"column":51}}},"3":{"name":"(anonymous_3)","line":85,"loc":{"start":{"line":85,"column":46},"end":{"line":85,"column":62}}},"4":{"name":"(anonymous_4)","line":105,"loc":{"start":{"line":105,"column":34},"end":{"line":105,"column":48}}},"5":{"name":"(anonymous_5)","line":114,"loc":{"start":{"line":114,"column":36},"end":{"line":114,"column":50}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":127,"column":10}},"2":{"start":{"line":8,"column":1},"end":{"line":8,"column":55}},"3":{"start":{"line":9,"column":1},"end":{"line":9,"column":41}},"4":{"start":{"line":10,"column":1},"end":{"line":10,"column":40}},"5":{"start":{"line":11,"column":1},"end":{"line":11,"column":34}},"6":{"start":{"line":13,"column":1},"end":{"line":65,"column":4}},"7":{"start":{"line":69,"column":1},"end":{"line":74,"column":4}},"8":{"start":{"line":77,"column":1},"end":{"line":102,"column":4}},"9":{"start":{"line":78,"column":2},"end":{"line":80,"column":3}},"10":{"start":{"line":79,"column":3},"end":{"line":79,"column":10}},"11":{"start":{"line":82,"column":2},"end":{"line":82,"column":22}},"12":{"start":{"line":84,"column":2},"end":{"line":84,"column":28}},"13":{"start":{"line":85,"column":2},"end":{"line":101,"column":5}},"14":{"start":{"line":88,"column":3},"end":{"line":90,"column":4}},"15":{"start":{"line":89,"column":4},"end":{"line":89,"column":33}},"16":{"start":{"line":92,"column":3},"end":{"line":99,"column":4}},"17":{"start":{"line":93,"column":4},"end":{"line":95,"column":5}},"18":{"start":{"line":94,"column":5},"end":{"line":94,"column":33}},"19":{"start":{"line":96,"column":4},"end":{"line":96,"column":31}},"20":{"start":{"line":98,"column":4},"end":{"line":98,"column":55}},"21":{"start":{"line":100,"column":3},"end":{"line":100,"column":16}},"22":{"start":{"line":105,"column":1},"end":{"line":110,"column":4}},"23":{"start":{"line":106,"column":2},"end":{"line":109,"column":3}},"24":{"start":{"line":107,"column":3},"end":{"line":107,"column":29}},"25":{"start":{"line":108,"column":3},"end":{"line":108,"column":25}},"26":{"start":{"line":114,"column":1},"end":{"line":125,"column":4}},"27":{"start":{"line":115,"column":2},"end":{"line":117,"column":3}},"28":{"start":{"line":116,"column":3},"end":{"line":116,"column":10}},"29":{"start":{"line":119,"column":2},"end":{"line":122,"column":3}},"30":{"start":{"line":121,"column":3},"end":{"line":121,"column":150}},"31":{"start":{"line":124,"column":2},"end":{"line":124,"column":46}}},"branchMap":{"1":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":2},"end":{"line":78,"column":2}},{"start":{"line":78,"column":2},"end":{"line":78,"column":2}}]},"2":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":3},"end":{"line":88,"column":3}},{"start":{"line":88,"column":3},"end":{"line":88,"column":3}}]},"3":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":3},"end":{"line":92,"column":3}},{"start":{"line":92,"column":3},"end":{"line":92,"column":3}}]},"4":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":93,"column":4}},{"start":{"line":93,"column":4},"end":{"line":93,"column":4}}]},"5":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":2},"end":{"line":106,"column":2}},{"start":{"line":106,"column":2},"end":{"line":106,"column":2}}]},"6":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":2},"end":{"line":115,"column":2}},{"start":{"line":115,"column":2},"end":{"line":115,"column":2}}]}},"code":["/* TODO","\tAdd support for variables inside double quoted strings","\tAdd support for {php}","*/","","(function(Prism) {","","\tvar smarty_pattern = /\\{\\*[\\w\\W]+?\\*\\}|\\{[\\w\\W]+?\\}/g;","\tvar smarty_litteral_start = '{literal}';","\tvar smarty_litteral_end = '{/literal}';","\tvar smarty_litteral_mode = false;","\t","\tPrism.languages.smarty = Prism.languages.extend('markup', {","\t\t'smarty': {","\t\t\tpattern: smarty_pattern,","\t\t\tinside: {","\t\t\t\t'delimiter': {","\t\t\t\t\tpattern: /^\\{|\\}$/i,","\t\t\t\t\talias: 'punctuation'","\t\t\t\t},","\t\t\t\t'string': /([\"'])(?:\\\\?.)*?\\1/,","\t\t\t\t'number': /\\b-?(?:0x[\\dA-Fa-f]+|\\d*\\.?\\d+(?:[Ee][-+]?\\d+)?)\\b/,","\t\t\t\t'variable': [","\t\t\t\t\t/\\$(?!\\d)\\w+/,","\t\t\t\t\t/#(?!\\d)\\w+#/,","\t\t\t\t\t{","\t\t\t\t\t\tpattern: /(\\.|->)(?!\\d)\\w+/,","\t\t\t\t\t\tlookbehind: true","\t\t\t\t\t},","\t\t\t\t\t{","\t\t\t\t\t\tpattern: /(\\[)(?!\\d)\\w+(?=\\])/,","\t\t\t\t\t\tlookbehind: true","\t\t\t\t\t}","\t\t\t\t],","\t\t\t\t'function': [","\t\t\t\t\t{","\t\t\t\t\t\tpattern: /(\\|\\s*)@?(?!\\d)\\w+/,","\t\t\t\t\t\tlookbehind: true","\t\t\t\t\t},","\t\t\t\t\t/^\\/?(?!\\d)\\w+/,","\t\t\t\t\t/(?!\\d)\\w+(?=\\()/","\t\t\t\t],","\t\t\t\t'attr-name': {","\t\t\t\t\t// Value is made optional because it may have already been tokenized","\t\t\t\t\tpattern: /\\w+\\s*=\\s*(?:(?!\\d)\\w+)?/,","\t\t\t\t\tinside: {","\t\t\t\t\t\t\"variable\": {","\t\t\t\t\t\t\tpattern: /(=\\s*)(?!\\d)\\w+/,","\t\t\t\t\t\t\tlookbehind: true","\t\t\t\t\t\t},","\t\t\t\t\t\t\"operator\": /=/","\t\t\t\t\t}","\t\t\t\t},","\t\t\t\t'punctuation': [","\t\t\t\t\t/[\\[\\]().,:`]|\\->/","\t\t\t\t],","\t\t\t\t'operator': [","\t\t\t\t\t/[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/,","\t\t\t\t\t/\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/,","\t\t\t\t\t/\\b(?:eq|neq?|gt|lt|gt?e|lt?e|not|mod|or|and)\\b/","\t\t\t\t],","\t\t\t\t'keyword': /\\b(?:false|off|on|no|true|yes)\\b/","\t\t\t}","\t\t}","\t});","","\t// Comments are inserted at top so that they can","\t// surround markup","\tPrism.languages.insertBefore('smarty', 'tag', {","\t\t'smarty-comment': {","\t\t\tpattern: /\\{\\*[\\w\\W]*?\\*\\}/,","\t\t\talias: ['smarty','comment']","\t\t}","\t});","","\t// Tokenize all inline Smarty expressions","\tPrism.hooks.add('before-highlight', function(env) {","\t\tif (env.language !== 'smarty') {","\t\t\treturn;","\t\t}","","\t\tenv.tokenStack = [];","","\t\tenv.backupCode = env.code;","\t\tenv.code = env.code.replace(smarty_pattern, function(match) {","","\t\t\t// Smarty tags inside {literal} block are ignored","\t\t\tif(match === smarty_litteral_end) {","\t\t\t\tsmarty_litteral_mode = false;","\t\t\t}","","\t\t\tif(!smarty_litteral_mode) {","\t\t\t\tif(match === smarty_litteral_start) {","\t\t\t\t\tsmarty_litteral_mode = true;","\t\t\t\t}","\t\t\t\tenv.tokenStack.push(match);","","\t\t\t\treturn '___SMARTY' + env.tokenStack.length + '___';","\t\t\t}","\t\t\treturn match;","\t\t});","\t});","","\t// Restore env.code for other plugins (e.g. line-numbers)","\tPrism.hooks.add('before-insert', function(env) {","\t\tif (env.language === 'smarty') {","\t\t\tenv.code = env.backupCode;","\t\t\tdelete env.backupCode;","\t\t}","\t});","","\t// Re-insert the tokens after highlighting","\t// and highlight them with defined grammar","\tPrism.hooks.add('after-highlight', function(env) {","\t\tif (env.language !== 'smarty') {","\t\t\treturn;","\t\t}","","\t\tfor (var i = 0, t; t = env.tokenStack[i]; i++) {","\t\t\t// The replace prevents $$, $&, $`, $', $n, $nn from being interpreted as special patterns","\t\t\tenv.highlightedCode = env.highlightedCode.replace('___SMARTY' + (i + 1) + '___', Prism.highlight(t, env.grammar, 'smarty').replace(/\\$/g, '$$$$'));","\t\t}","","\t\tenv.element.innerHTML = env.highlightedCode;","\t});","","}(Prism));"],"l":{"6":1,"8":1,"9":1,"10":1,"11":1,"13":1,"69":1,"77":1,"78":0,"79":0,"82":0,"84":0,"85":0,"88":0,"89":0,"92":0,"93":0,"94":0,"96":0,"98":0,"100":0,"105":1,"106":0,"107":0,"108":0,"114":1,"115":0,"116":0,"119":0,"121":0,"124":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-sql.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-sql.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":17,"column":2}}},"branchMap":{},"code":["Prism.languages.sql= {","\t'comment': {","\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\w\\W]*?\\*\\/|(?:--|\\/\\/|#).*)/,","\t\tlookbehind: true","\t},","\t'string' : {","\t\tpattern: /(^|[^@\\\\])(\"|')(?:\\\\?[\\s\\S])*?\\2/,","\t\tlookbehind: true","\t},","\t'variable': /@[\\w.$]+|@(\"|'|`)(?:\\\\?[\\s\\S])+?\\1/,","\t'function': /\\b(?:COUNT|SUM|AVG|MIN|MAX|FIRST|LAST|UCASE|LCASE|MID|LEN|ROUND|NOW|FORMAT)(?=\\s*\\()/i, // Should we highlight user defined functions too?","\t'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR VARYING|CHARACTER (?:SET|VARYING)|CHARSET|CHECK|CHECKPOINT|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMN|COLUMNS|COMMENT|COMMIT|COMMITTED|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS|CONTAINSTABLE|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|DATA(?:BASES?)?|DATE(?:TIME)?|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITER(?:S)?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE(?: PRECISION)?|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE KEY|ELSE|ENABLE|ENCLOSED BY|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPE(?:D BY)?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|IDENTITY(?:_INSERT|COL)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTO|INVOKER|ISOLATION LEVEL|JOIN|KEYS?|KILL|LANGUAGE SQL|LAST|LEFT|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MODIFIES SQL DATA|MODIFY|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL(?: CHAR VARYING| CHARACTER(?: VARYING)?| VARCHAR)?|NATURAL|NCHAR(?: VARCHAR)?|NEXT|NO(?: SQL|CHECK|CYCLE)?|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READ(?:S SQL DATA|TEXT)?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEATABLE|REPLICATION|REQUIRE|RESTORE|RESTRICT|RETURNS?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE MODE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|START(?:ING BY)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED BY|TEXT(?:SIZE)?|THEN|TIMESTAMP|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNPIVOT|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?)\\b/i,","\t'boolean': /\\b(?:TRUE|FALSE|NULL)\\b/i,","\t'number': /\\b-?(?:0x)?\\d*\\.?[\\da-f]+\\b/,","\t'operator': /[-+*\\/=%^~]|&&?|\\|?\\||!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|IN|LIKE|NOT|OR|IS|DIV|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,","\t'punctuation': /[;[\\]()`,.]/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-stylus.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-stylus.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1},"b":{},"f":{"1":1},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":18}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":102,"column":10}},"2":{"start":{"line":2,"column":1},"end":{"line":21,"column":3}},"3":{"start":{"line":23,"column":1},"end":{"line":27,"column":3}},"4":{"start":{"line":28,"column":1},"end":{"line":34,"column":3}},"5":{"start":{"line":36,"column":1},"end":{"line":101,"column":3}}},"branchMap":{},"code":["(function (Prism) {","\tvar inside = {","\t\t'url': /url\\(([\"']?).*?\\1\\)/i,","\t\t'string': /(\"|')(?:[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*?\\1/,","\t\t'interpolation': null, // See below","\t\t'func': null, // See below","\t\t'important': /\\B!(?:important|optional)\\b/i,","\t\t'keyword': {","\t\t\tpattern: /(^|\\s+)(?:(?:if|else|for|return|unless)(?=\\s+|$)|@[\\w-]+)/,","\t\t\tlookbehind: true","\t\t},","\t\t'hexcode': /#[\\da-f]{3,6}/i,","\t\t'number': /\\b\\d+(?:\\.\\d+)?%?/,","\t\t'boolean': /\\b(?:true|false)\\b/,","\t\t'operator': [","\t\t\t// We want non-word chars around \"-\" because it is","\t\t\t// accepted in property names.","\t\t\t/~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.+|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/","\t\t],","\t\t'punctuation': /[{}()\\[\\];:,]/","\t};","","\tinside['interpolation'] = {","\t\tpattern: /\\{[^\\r\\n}:]+\\}/,","\t\talias: 'variable',","\t\tinside: Prism.util.clone(inside)","\t};","\tinside['func'] = {","\t\tpattern: /[\\w-]+\\([^)]*\\).*/,","\t\tinside: {","\t\t\t'function': /^[^(]+/,","\t\t\trest: Prism.util.clone(inside)","\t\t}","\t};","","\tPrism.languages.stylus = {","\t\t'comment': {","\t\t\tpattern: /(^|[^\\\\])(\\/\\*[\\w\\W]*?\\*\\/|\\/\\/.*)/,","\t\t\tlookbehind: true","\t\t},","\t\t'atrule-declaration': {","\t\t\tpattern: /(^\\s*)@.+/m,","\t\t\tlookbehind: true,","\t\t\tinside: {","\t\t\t\t'atrule': /^@[\\w-]+/,","\t\t\t\trest: inside","\t\t\t}","\t\t},","\t\t'variable-declaration': {","\t\t\tpattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:(?:\\{[^}]*\\}|.+)|$)/m,","\t\t\tlookbehind: true,","\t\t\tinside: {","\t\t\t\t'variable': /^\\S+/,","\t\t\t\trest: inside","\t\t\t}","\t\t},","","\t\t'statement': {","\t\t\tpattern: /(^[ \\t]*)(?:if|else|for|return|unless)[ \\t]+.+/m,","\t\t\tlookbehind: true,","\t\t\tinside: {","\t\t\t\tkeyword: /^\\S+/,","\t\t\t\trest: inside","\t\t\t}","\t\t},","","\t\t// A property/value pair cannot end with a comma or a brace","\t\t// It cannot have indented content unless it ended with a semicolon","\t\t'property-declaration': {","\t\t\tpattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)[^{\\r\\n]*(?:;|[^{\\r\\n,](?=$)(?!(\\r?\\n|\\r)(?:\\{|\\2[ \\t]+)))/m,","\t\t\tlookbehind: true,","\t\t\tinside: {","\t\t\t\t'property': {","\t\t\t\t\tpattern: /^[^\\s:]+/,","\t\t\t\t\tinside: {","\t\t\t\t\t\t'interpolation': inside.interpolation","\t\t\t\t\t}","\t\t\t\t},","\t\t\t\trest: inside","\t\t\t}","\t\t},","","","","\t\t// A selector can contain parentheses only as part of a pseudo-element","\t\t// It can span multiple lines.","\t\t// It must end with a comma or an accolade or have indented content.","\t\t'selector': {","\t\t\tpattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\))?|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t]+)))/m,","\t\t\tlookbehind: true,","\t\t\tinside: {","\t\t\t\t'interpolation': inside.interpolation,","\t\t\t\t'punctuation': /[{},]/","\t\t\t}","\t\t},","","\t\t'func': inside.func,","\t\t'string': inside.string,","\t\t'interpolation': inside.interpolation,","\t\t'punctuation': /[{}()\\[\\];:.]/","\t};","}(Prism));"],"l":{"1":1,"2":1,"23":1,"28":1,"36":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-swift.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-swift.js","s":{"1":2,"2":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":2,"column":0},"end":{"line":24,"column":3}},"2":{"start":{"line":25,"column":0},"end":{"line":25,"column":110}}},"branchMap":{},"code":["// issues: nested multiline comments","Prism.languages.swift = Prism.languages.extend('clike', {","\t'string': {","\t\tpattern: /(\"|')(\\\\(?:\\((?:[^()]|\\([^)]+\\))+\\)|\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,","\t\tgreedy: true,","\t\tinside: {","\t\t\t'interpolation': {","\t\t\t\tpattern: /\\\\\\((?:[^()]|\\([^)]+\\))+\\)/,","\t\t\t\tinside: {","\t\t\t\t\tdelimiter: {","\t\t\t\t\t\tpattern: /^\\\\\\(|\\)$/,","\t\t\t\t\t\talias: 'variable'","\t\t\t\t\t}","\t\t\t\t\t// See rest below","\t\t\t\t}","\t\t\t}","\t\t}","\t},","\t'keyword': /\\b(as|associativity|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic(?:Type)?|else|enum|extension|fallthrough|final|for|func|get|guard|if|import|in|infix|init|inout|internal|is|lazy|left|let|mutating|new|none|nonmutating|operator|optional|override|postfix|precedence|prefix|private|Protocol|public|repeat|required|rethrows|return|right|safe|self|Self|set|static|struct|subscript|super|switch|throws?|try|Type|typealias|unowned|unsafe|var|weak|where|while|willSet|__(?:COLUMN__|FILE__|FUNCTION__|LINE__))\\b/,","\t'number': /\\b([\\d_]+(\\.[\\de_]+)?|0x[a-f0-9_]+(\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,","\t'constant': /\\b(nil|[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,","\t'atrule': /@\\b(IB(?:Outlet|Designable|Action|Inspectable)|class_protocol|exported|noreturn|NS(?:Copying|Managed)|objc|UIApplicationMain|auto_closure)\\b/,","\t'builtin': /\\b([A-Z]\\S+|abs|advance|alignof(?:Value)?|assert|contains|count(?:Elements)?|debugPrint(?:ln)?|distance|drop(?:First|Last)|dump|enumerate|equal|filter|find|first|getVaList|indices|isEmpty|join|last|lexicographicalCompare|map|max(?:Element)?|min(?:Element)?|numericCast|overlaps|partition|print(?:ln)?|reduce|reflect|reverse|sizeof(?:Value)?|sort(?:ed)?|split|startsWith|stride(?:of(?:Value)?)?|suffix|swap|toDebugString|toString|transcode|underestimateCount|unsafeBitCast|with(?:ExtendedLifetime|Unsafe(?:MutablePointers?|Pointers?)|VaList))\\b/","});","Prism.languages.swift['string'].inside['interpolation'].inside.rest = Prism.util.clone(Prism.languages.swift);"],"l":{"2":2,"25":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-tcl.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-tcl.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":43,"column":2}}},"branchMap":{},"code":["Prism.languages.tcl = {","\t'comment': {","\t\tpattern: /(^|[^\\\\])#.*/,","\t\tlookbehind: true","\t},","\t'string': /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,","\t'variable': [","\t\t{","\t\t\tpattern: /(\\$)(?:::)?(?:[a-zA-Z0-9]+::)*[a-zA-Z0-9_]+/,","\t\t\tlookbehind: true","\t\t},","\t\t{","\t\t\tpattern: /(\\$){[^}]+}/,","\t\t\tlookbehind: true","\t\t},","\t\t{","\t\t\tpattern: /(^\\s*set[ \\t]+)(?:::)?(?:[a-zA-Z0-9]+::)*[a-zA-Z0-9_]+/m,","\t\t\tlookbehind: true","\t\t}","\t],","\t'function': {","\t\tpattern: /(^\\s*proc[ \\t]+)[^\\s]+/m,","\t\tlookbehind: true","\t},","\t'builtin': [","\t\t{","\t\t\tpattern: /(^\\s*)(?:proc|return|class|error|eval|exit|for|foreach|if|switch|while|break|continue)\\b/m,","\t\t\tlookbehind: true","\t\t},","\t\t/\\b(elseif|else)\\b/","\t],","\t'scope': {","\t\tpattern: /(^\\s*)(global|upvar|variable)\\b/m,","\t\tlookbehind: true,","\t\talias: 'constant'","\t},","\t'keyword': {","\t\tpattern: /(^\\s*|\\[)(after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|Safe_Base|scan|seek|set|socket|source|split|string|subst|Tcl|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|wordBreak(?:After|Before)|test|vars)|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\\b/m,","\t\tlookbehind: true","\t},","\t'operator': /!=?|\\*\\*?|==|&&?|\\|\\|?|<[=<]?|>[=>]?|[-+~\\/%?^]|\\b(?:eq|ne|in|ni)\\b/,","\t'punctuation': /[{}()\\[\\]]/","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-textile.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-textile.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1},"b":{},"f":{"1":1},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":17}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":257,"column":10}},"2":{"start":{"line":4,"column":1},"end":{"line":4,"column":67}},"3":{"start":{"line":5,"column":1},"end":{"line":24,"column":3}},"4":{"start":{"line":27,"column":1},"end":{"line":228,"column":4}},"5":{"start":{"line":230,"column":1},"end":{"line":237,"column":3}},"6":{"start":{"line":240,"column":1},"end":{"line":240,"column":140}},"7":{"start":{"line":243,"column":1},"end":{"line":243,"column":91}},"8":{"start":{"line":244,"column":1},"end":{"line":244,"column":93}},"9":{"start":{"line":245,"column":1},"end":{"line":245,"column":95}},"10":{"start":{"line":246,"column":1},"end":{"line":246,"column":94}},"11":{"start":{"line":247,"column":1},"end":{"line":247,"column":91}},"12":{"start":{"line":250,"column":1},"end":{"line":250,"column":95}},"13":{"start":{"line":251,"column":1},"end":{"line":251,"column":91}},"14":{"start":{"line":252,"column":1},"end":{"line":252,"column":93}},"15":{"start":{"line":253,"column":1},"end":{"line":253,"column":99}},"16":{"start":{"line":254,"column":1},"end":{"line":254,"column":97}},"17":{"start":{"line":255,"column":1},"end":{"line":255,"column":91}}},"branchMap":{},"code":["(function(Prism) {","\t// We don't allow for pipes inside parentheses","\t// to not break table pattern |(. foo |). bar |","\tvar modifierRegex = '(?:\\\\([^|)]+\\\\)|\\\\[[^\\\\]]+\\\\]|\\\\{[^}]+\\\\})+';","\tvar modifierTokens = {","\t\t'css': {","\t\t\tpattern: /\\{[^}]+\\}/,","\t\t\tinside: {","\t\t\t\trest: Prism.languages.css","\t\t\t}","\t\t},","\t\t'class-id': {","\t\t\tpattern: /(\\()[^)]+(?=\\))/,","\t\t\tlookbehind: true,","\t\t\talias: 'attr-value'","\t\t},","\t\t'lang': {","\t\t\tpattern: /(\\[)[^\\]]+(?=\\])/,","\t\t\tlookbehind: true,","\t\t\talias: 'attr-value'","\t\t},","\t\t// Anything else is punctuation (the first pattern is for row/col spans inside tables)","\t\t'punctuation': /[\\\\\\/]\\d+|\\S/","\t};","","","\tPrism.languages.textile = Prism.languages.extend('markup', {","\t\t'phrase': {","\t\t\tpattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,","\t\t\tlookbehind: true,","\t\t\tinside: {","","\t\t\t\t// h1. Header 1","\t\t\t\t'block-tag': {","\t\t\t\t\tpattern: RegExp('^[a-z]\\\\w*(?:' + modifierRegex + '|[<>=()])*\\\\.'),","\t\t\t\t\tinside: {","\t\t\t\t\t\t'modifier': {","\t\t\t\t\t\t\tpattern: RegExp('(^[a-z]\\\\w*)(?:' + modifierRegex + '|[<>=()])+(?=\\\\.)'),","\t\t\t\t\t\t\tlookbehind: true,","\t\t\t\t\t\t\tinside: Prism.util.clone(modifierTokens)","\t\t\t\t\t\t},","\t\t\t\t\t\t'tag': /^[a-z]\\w*/,","\t\t\t\t\t\t'punctuation': /\\.$/","\t\t\t\t\t}","\t\t\t\t},","","\t\t\t\t// # List item","\t\t\t\t// * List item","\t\t\t\t'list': {","\t\t\t\t\tpattern: RegExp('^[*#]+(?:' + modifierRegex + ')?\\\\s+.+', 'm'),","\t\t\t\t\tinside: {","\t\t\t\t\t\t'modifier': {","\t\t\t\t\t\t\tpattern: RegExp('(^[*#]+)' + modifierRegex),","\t\t\t\t\t\t\tlookbehind: true,","\t\t\t\t\t\t\tinside: Prism.util.clone(modifierTokens)","\t\t\t\t\t\t},","\t\t\t\t\t\t'punctuation': /^[*#]+/","\t\t\t\t\t}","\t\t\t\t},","","\t\t\t\t// | cell | cell | cell |","\t\t\t\t'table': {","\t\t\t\t\t// Modifiers can be applied to the row: {color:red}.|1|2|3|","\t\t\t\t\t// or the cell: |{color:red}.1|2|3|","\t\t\t\t\tpattern: RegExp('^(?:(?:' + modifierRegex + '|[<>=()^~])+\\\\.\\\\s*)?(?:\\\\|(?:(?:' + modifierRegex + '|[<>=()^~_]|[\\\\\\\\/]\\\\d+)+\\\\.)?[^|]*)+\\\\|', 'm'),","\t\t\t\t\tinside: {","\t\t\t\t\t\t'modifier': {","\t\t\t\t\t\t\t// Modifiers for rows after the first one are","\t\t\t\t\t\t\t// preceded by a pipe and a line feed","\t\t\t\t\t\t\tpattern: RegExp('(^|\\\\|(?:\\\\r?\\\\n|\\\\r)?)(?:' + modifierRegex + '|[<>=()^~_]|[\\\\\\\\/]\\\\d+)+(?=\\\\.)'),","\t\t\t\t\t\t\tlookbehind: true,","\t\t\t\t\t\t\tinside: Prism.util.clone(modifierTokens)","\t\t\t\t\t\t},","\t\t\t\t\t\t'punctuation': /\\||^\\./","\t\t\t\t\t}","\t\t\t\t},","","\t\t\t\t'inline': {","\t\t\t\t\tpattern: RegExp('(\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])(?:' + modifierRegex + ')?.+?\\\\1'),","\t\t\t\t\tinside: {","\t\t\t\t\t\t// Note: superscripts and subscripts are not handled specifically","","\t\t\t\t\t\t// *bold*, **bold**","\t\t\t\t\t\t'bold': {","\t\t\t\t\t\t\tpattern: RegExp('((^\\\\*\\\\*?)(?:' + modifierRegex + ')?).+?(?=\\\\2)'),","\t\t\t\t\t\t\tlookbehind: true","\t\t\t\t\t\t},","","\t\t\t\t\t\t// _italic_, __italic__","\t\t\t\t\t\t'italic': {","\t\t\t\t\t\t\tpattern: RegExp('((^__?)(?:' + modifierRegex + ')?).+?(?=\\\\2)'),","\t\t\t\t\t\t\tlookbehind: true","\t\t\t\t\t\t},","","\t\t\t\t\t\t// ??cite??","\t\t\t\t\t\t'cite': {","\t\t\t\t\t\t\tpattern: RegExp('(^\\\\?\\\\?(?:' + modifierRegex + ')?).+?(?=\\\\?\\\\?)'),","\t\t\t\t\t\t\tlookbehind: true,","\t\t\t\t\t\t\talias: 'string'","\t\t\t\t\t\t},","","\t\t\t\t\t\t// @code@","\t\t\t\t\t\t'code': {","\t\t\t\t\t\t\tpattern: RegExp('(^@(?:' + modifierRegex + ')?).+?(?=@)'),","\t\t\t\t\t\t\tlookbehind: true,","\t\t\t\t\t\t\talias: 'keyword'","\t\t\t\t\t\t},","","\t\t\t\t\t\t// +inserted+","\t\t\t\t\t\t'inserted': {","\t\t\t\t\t\t\tpattern: RegExp('(^\\\\+(?:' + modifierRegex + ')?).+?(?=\\\\+)'),","\t\t\t\t\t\t\tlookbehind: true","\t\t\t\t\t\t},","","\t\t\t\t\t\t// -deleted-","\t\t\t\t\t\t'deleted': {","\t\t\t\t\t\t\tpattern: RegExp('(^-(?:' + modifierRegex + ')?).+?(?=-)'),","\t\t\t\t\t\t\tlookbehind: true","\t\t\t\t\t\t},","","\t\t\t\t\t\t// %span%","\t\t\t\t\t\t'span': {","\t\t\t\t\t\t\tpattern: RegExp('(^%(?:' + modifierRegex + ')?).+?(?=%)'),","\t\t\t\t\t\t\tlookbehind: true","\t\t\t\t\t\t},","","\t\t\t\t\t\t'modifier': {","\t\t\t\t\t\t\tpattern: RegExp('(^\\\\*\\\\*|__|\\\\?\\\\?|[*_%@+\\\\-^~])' + modifierRegex),","\t\t\t\t\t\t\tlookbehind: true,","\t\t\t\t\t\t\tinside: Prism.util.clone(modifierTokens)","\t\t\t\t\t\t},","\t\t\t\t\t\t'punctuation': /[*_%?@+\\-^~]+/","\t\t\t\t\t}","\t\t\t\t},","","\t\t\t\t// [alias]http://example.com","\t\t\t\t'link-ref': {","\t\t\t\t\tpattern: /^\\[[^\\]]+\\]\\S+$/m,","\t\t\t\t\tinside: {","\t\t\t\t\t\t'string': {","\t\t\t\t\t\t\tpattern: /(\\[)[^\\]]+(?=\\])/,","\t\t\t\t\t\t\tlookbehind: true","\t\t\t\t\t\t},","\t\t\t\t\t\t'url': {","\t\t\t\t\t\t\tpattern: /(\\])\\S+$/,","\t\t\t\t\t\t\tlookbehind: true","\t\t\t\t\t\t},","\t\t\t\t\t\t'punctuation': /[\\[\\]]/","\t\t\t\t\t}","\t\t\t\t},","","\t\t\t\t// \"text\":http://example.com","\t\t\t\t// \"text\":link-ref","\t\t\t\t'link': {","\t\t\t\t\tpattern: RegExp('\"(?:' + modifierRegex + ')?[^\"]+\":.+?(?=[^\\\\w/]?(?:\\\\s|$))'),","\t\t\t\t\tinside: {","\t\t\t\t\t\t'text': {","\t\t\t\t\t\t\tpattern: RegExp('(^\"(?:' + modifierRegex + ')?)[^\"]+(?=\")'),","\t\t\t\t\t\t\tlookbehind: true","\t\t\t\t\t\t},","\t\t\t\t\t\t'modifier': {","\t\t\t\t\t\t\tpattern: RegExp('(^\")' + modifierRegex),","\t\t\t\t\t\t\tlookbehind: true,","\t\t\t\t\t\t\tinside: Prism.util.clone(modifierTokens)","\t\t\t\t\t\t},","\t\t\t\t\t\t'url': {","\t\t\t\t\t\t\tpattern: /(:).+/,","\t\t\t\t\t\t\tlookbehind: true","\t\t\t\t\t\t},","\t\t\t\t\t\t'punctuation': /[\":]/","\t\t\t\t\t}","\t\t\t\t},","","\t\t\t\t// !image.jpg!","\t\t\t\t// !image.jpg(Title)!:http://example.com","\t\t\t\t'image': {","\t\t\t\t\tpattern: RegExp('!(?:' + modifierRegex + '|[<>=()])*[^!\\\\s()]+(?:\\\\([^)]+\\\\))?!(?::.+?(?=[^\\\\w/]?(?:\\\\s|$)))?'),","\t\t\t\t\tinside: {","\t\t\t\t\t\t'source': {","\t\t\t\t\t\t\tpattern: RegExp('(^!(?:' + modifierRegex + '|[<>=()])*)[^!\\\\s()]+(?:\\\\([^)]+\\\\))?(?=!)'),","\t\t\t\t\t\t\tlookbehind: true,","\t\t\t\t\t\t\talias: 'url'","\t\t\t\t\t\t},","\t\t\t\t\t\t'modifier': {","\t\t\t\t\t\t\tpattern: RegExp('(^!)(?:' + modifierRegex + '|[<>=()])+'),","\t\t\t\t\t\t\tlookbehind: true,","\t\t\t\t\t\t\tinside: Prism.util.clone(modifierTokens)","\t\t\t\t\t\t},","\t\t\t\t\t\t'url': {","\t\t\t\t\t\t\tpattern: /(:).+/,","\t\t\t\t\t\t\tlookbehind: true","\t\t\t\t\t\t},","\t\t\t\t\t\t'punctuation': /[!:]/","\t\t\t\t\t}","\t\t\t\t},","","\t\t\t\t// Footnote[1]","\t\t\t\t'footnote': {","\t\t\t\t\tpattern: /\\b\\[\\d+\\]/,","\t\t\t\t\talias: 'comment',","\t\t\t\t\tinside: {","\t\t\t\t\t\t'punctuation': /\\[|\\]/","\t\t\t\t\t}","\t\t\t\t},","","\t\t\t\t// CSS(Cascading Style Sheet)","\t\t\t\t'acronym': {","\t\t\t\t\tpattern: /\\b[A-Z\\d]+\\([^)]+\\)/,","\t\t\t\t\tinside: {","\t\t\t\t\t\t'comment': {","\t\t\t\t\t\t\tpattern: /(\\()[^)]+(?=\\))/,","\t\t\t\t\t\t\tlookbehind: true","\t\t\t\t\t\t},","\t\t\t\t\t\t'punctuation': /[()]/","\t\t\t\t\t}","\t\t\t\t},","","\t\t\t\t// Prism(C)","\t\t\t\t'mark': {","\t\t\t\t\tpattern: /\\b\\((TM|R|C)\\)/,","\t\t\t\t\talias: 'comment',","\t\t\t\t\tinside: {","\t\t\t\t\t\t'punctuation':/[()]/","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t}","\t});","","\tvar nestedPatterns = {","\t\t'inline': Prism.util.clone(Prism.languages.textile['phrase'].inside['inline']),","\t\t'link': Prism.util.clone(Prism.languages.textile['phrase'].inside['link']),","\t\t'image': Prism.util.clone(Prism.languages.textile['phrase'].inside['image']),","\t\t'footnote': Prism.util.clone(Prism.languages.textile['phrase'].inside['footnote']),","\t\t'acronym': Prism.util.clone(Prism.languages.textile['phrase'].inside['acronym']),","\t\t'mark': Prism.util.clone(Prism.languages.textile['phrase'].inside['mark'])","\t};","","\t// Only allow alpha-numeric HTML tags, not XML tags","\tPrism.languages.textile.tag.pattern = /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\\\1|\\\\?(?!\\1)[\\w\\W])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i;","","\t// Allow some nesting","\tPrism.languages.textile['phrase'].inside['inline'].inside['bold'].inside = nestedPatterns;","\tPrism.languages.textile['phrase'].inside['inline'].inside['italic'].inside = nestedPatterns;","\tPrism.languages.textile['phrase'].inside['inline'].inside['inserted'].inside = nestedPatterns;","\tPrism.languages.textile['phrase'].inside['inline'].inside['deleted'].inside = nestedPatterns;","\tPrism.languages.textile['phrase'].inside['inline'].inside['span'].inside = nestedPatterns;","","\t// Allow some styles inside table cells","\tPrism.languages.textile['phrase'].inside['table'].inside['inline'] = nestedPatterns['inline'];","\tPrism.languages.textile['phrase'].inside['table'].inside['link'] = nestedPatterns['link'];","\tPrism.languages.textile['phrase'].inside['table'].inside['image'] = nestedPatterns['image'];","\tPrism.languages.textile['phrase'].inside['table'].inside['footnote'] = nestedPatterns['footnote'];","\tPrism.languages.textile['phrase'].inside['table'].inside['acronym'] = nestedPatterns['acronym'];","\tPrism.languages.textile['phrase'].inside['table'].inside['mark'] = nestedPatterns['mark'];","","}(Prism));"],"l":{"1":1,"4":1,"5":1,"27":1,"230":1,"240":1,"243":1,"244":1,"245":1,"246":1,"247":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-twig.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-twig.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":46,"column":2}}},"branchMap":{},"code":["Prism.languages.twig = {","\t'comment': /\\{#[\\s\\S]*?#\\}/,","\t'tag': {","\t\tpattern: /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}/,","\t\tinside: {","\t\t\t'ld': {","\t\t\t\tpattern: /^(?:\\{\\{\\-?|\\{%\\-?\\s*\\w+)/,","\t\t\t\tinside: {","\t\t\t\t\t'punctuation': /^(?:\\{\\{|\\{%)\\-?/,","\t\t\t\t\t'keyword': /\\w+/","\t\t\t\t}","\t\t\t},","\t\t\t'rd': {","\t\t\t\tpattern: /\\-?(?:%\\}|\\}\\})$/,","\t\t\t\tinside: {","\t\t\t\t\t'punctuation': /.*/","\t\t\t\t}","\t\t\t},","\t\t\t'string': {","\t\t\t\tpattern: /(\"|')(?:\\\\?.)*?\\1/,","\t\t\t\tinside: {","\t\t\t\t\t'punctuation': /^['\"]|['\"]$/","\t\t\t\t}","\t\t\t},","\t\t\t'keyword': /\\b(?:even|if|odd)\\b/,","\t\t\t'boolean': /\\b(?:true|false|null)\\b/,","\t\t\t'number': /\\b-?(?:0x[\\dA-Fa-f]+|\\d*\\.?\\d+([Ee][-+]?\\d+)?)\\b/,","\t\t\t'operator': [","\t\t\t\t{","\t\t\t\t\tpattern: /(\\s)(?:and|b\\-and|b\\-xor|b\\-or|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,","\t\t\t\t\tlookbehind: true","\t\t\t\t},","\t\t\t\t/[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/","\t\t\t],","\t\t\t'property': /\\b[a-zA-Z_][a-zA-Z0-9_]*\\b/,","\t\t\t'punctuation': /[()\\[\\]{}:.,]/","\t\t}","\t},","","\t// The rest can be parsed as HTML","\t'other': {","\t\t// We want non-blank matches","\t\tpattern: /\\S(?:[\\s\\S]*\\S)?/,","\t\tinside: Prism.languages.markup","\t}","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-typescript.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-typescript.js","s":{"1":2,"2":0},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3,"column":3}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":48}}},"branchMap":{},"code":["Prism.languages.typescript = Prism.languages.extend('javascript', {","\t'keyword': /\\b(break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|package|private|protected|public|return|set|static|super|switch|this|throw|true|try|typeof|var|void|while|with|yield|module|declare|constructor|string|Function|any|number|boolean|Array|enum)\\b/","});","","Prism.languages.ts = Prism.languages.typescript;"],"l":{"1":2,"5":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-verilog.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-verilog.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":17,"column":2}}},"branchMap":{},"code":["Prism.languages.verilog = {","  'comment': /\\/\\/.*|\\/\\*[\\w\\W]*?\\*\\//,","  'string': /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,","  // support for any kernel function (ex: $display())","  'property': /\\B\\$\\w+\\b/,","  // support for user defined constants (ex: `define)","  'constant': /\\B`\\w+\\b/,","  'function': /[a-z\\d_]+(?=\\()/i,","  // support for verilog and system verilog keywords","  'keyword': /\\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|class|case|casex|casez|cell|chandle|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endspecify|endsequence|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_onevent|pulsestyle_ondetect|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\\b/,","  // bold highlighting for all verilog and system verilog logic blocks","  'important': /\\b(?:always_latch|always_comb|always_ff|always)\\b ?@?/,","  // support for time ticks, vectors, and real numbers","  'number': /\\B##?\\d+|(?:\\b\\d+)?'[odbh] ?[\\da-fzx_?]+|\\b\\d*[._]?\\d+(?:e[-+]?\\d+)?/i,","  'operator': /[-+{}^~%*\\/?=!<>&|]+/,","  'punctuation': /[[\\];(),.:]/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-vhdl.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-vhdl.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":23,"column":2}}},"branchMap":{},"code":["Prism.languages.vhdl = {","\t'comment': /--.+/,","\t// support for all logic vectors","\t'vhdl-vectors': {","\t\t'pattern': /\\b[oxb]\"[\\da-f_]+\"|\"[01uxzwlh-]+\"/i,","\t\t'alias': 'number'","\t},","\t// support for operator overloading included","\t'quoted-function': {","\t\tpattern: /\"\\S+?\"(?=\\()/,","\t\talias: 'function'","\t},","\t'string': /\"(?:[^\\\\\\r\\n]|\\\\?(?:\\r\\n|[\\s\\S]))*?\"/,","\t'constant': /\\b(?:use|library)\\b/i,","\t// support for predefined attributes included","\t'keyword': /\\b(?:'active|'ascending|'base|'delayed|'driving|'driving_value|'event|'high|'image|'instance_name|'last_active|'last_event|'last_value|'left|'leftof|'length|'low|'path_name|'pos|'pred|'quiet|'range|'reverse_range|'right|'rightof|'simple_name|'stable|'succ|'transaction|'val|'value|access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with)\\b/i,","\t'boolean': /\\b(?:true|false)\\b/i,","\t'function': /[a-z0-9_]+(?=\\()/i,","\t// decimal, based, physical, and exponential numbers supported","\t'number': /'[01uxzwlh-]'|\\b(?:\\d+#[\\da-f_.]+#|\\d[\\d_.]*)(?:e[-+]?\\d+)?/i,","\t'operator': /[<>]=?|:=|[-+*/&=]|\\b(?:abs|not|mod|rem|sll|srl|sla|sra|rol|ror|and|or|nand|xnor|xor|nor)\\b/i,","\t'punctuation': /[{}[\\];(),.:]/","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-vim.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-vim.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":10,"column":2}}},"branchMap":{},"code":["Prism.languages.vim = {","\t'string': /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,","\t'comment': /\".*/,","\t'function': /\\w+(?=\\()/,","\t'keyword': /\\b(?:ab|abbreviate|abc|abclear|abo|aboveleft|al|all|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|ar|args|argu|argument|as|ascii|bad|badd|ba|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bN|bNext|bo|botright|bp|bprevious|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|br|brewind|bro|browse|bufdo|b|buffer|buffers|bun|bunload|bw|bwipeout|ca|cabbrev|cabc|cabclear|caddb|caddbuffer|cad|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cgetb|cgetbuffer|cgete|cgetexpr|cg|cgetfile|c|change|changes|chd|chdir|che|checkpath|checkt|checktime|cla|clast|cl|clist|clo|close|cmapc|cmapclear|cnew|cnewer|cn|cnext|cN|cNext|cnf|cnfile|cNfcNfile|cnorea|cnoreabbrev|col|colder|colo|colorscheme|comc|comclear|comp|compiler|conf|confirm|con|continue|cope|copen|co|copy|cpf|cpfile|cp|cprevious|cq|cquit|cr|crewind|cuna|cunabbrev|cu|cunmap|cw|cwindow|debugg|debuggreedy|delc|delcommand|d|delete|delf|delfunction|delm|delmarks|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|di|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|earlier|echoe|echoerr|echom|echomsg|echon|e|edit|el|else|elsei|elseif|em|emenu|endfo|endfor|endf|endfunction|endfun|en|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fina|finally|fin|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|folddoc|folddoclosed|foldd|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|ha|hardcopy|h|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iuna|iunabbrev|iu|iunmap|j|join|ju|jumps|k|keepalt|keepj|keepjumps|kee|keepmarks|laddb|laddbuffer|lad|laddexpr|laddf|laddfile|lan|language|la|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|let|left|lefta|leftabove|lex|lexpr|lf|lfile|lfir|lfirst|lgetb|lgetbuffer|lgete|lgetexpr|lg|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|l|list|ll|lla|llast|lli|llist|lmak|lmake|lm|lmap|lmapc|lmapclear|lnew|lnewer|lne|lnext|lN|lNext|lnf|lnfile|lNf|lNfile|ln|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lpf|lpfile|lp|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|mak|make|ma|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkvie|mkview|mkv|mkvimrc|mod|mode|m|move|mzf|mzfile|mz|mzscheme|nbkey|new|n|next|N|Next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|omapc|omapclear|on|only|o|open|opt|options|ou|ounmap|pc|pclose|ped|pedit|pe|perl|perld|perldo|po|pop|popu|popu|popup|pp|ppop|pre|preserve|prev|previous|p|print|P|Print|profd|profdel|prof|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptN|ptNext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|pyf|pyfile|py|python|qa|qall|q|quit|quita|quitall|r|read|rec|recover|redi|redir|red|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|rub|ruby|rubyd|rubydo|rubyf|rubyfile|ru|runtime|rv|rviminfo|sal|sall|san|sandbox|sa|sargument|sav|saveas|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbN|sbNext|sbp|sbprevious|sbr|sbrewind|sb|sbuffer|scripte|scriptencoding|scrip|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sla|slast|sl|sleep|sm|smagic|sm|smap|smapc|smapclear|sme|smenu|sn|snext|sN|sNext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|sor|sort|so|source|spelld|spelldump|spe|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|sp|split|spr|sprevious|sre|srewind|sta|stag|startg|startgreplace|star|startinsert|startr|startreplace|stj|stjump|st|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tab|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabnew|tabn|tabnext|tabN|tabNext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|ta|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tm|tmenu|tn|tnext|tN|tNext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tu|tunmenu|una|unabbreviate|u|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|verb|verbose|ve|version|vert|vertical|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|vi|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|wa|wall|wh|while|winc|wincmd|windo|winp|winpos|win|winsize|wn|wnext|wN|wNext|wp|wprevious|wq|wqa|wqall|w|write|ws|wsverb|wv|wviminfo|X|xa|xall|x|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|XMLent|XMLns|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,","\t'builtin': /\\b(?:autocmd|acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|t_AB|t_AF|t_al|t_AL|t_bc|t_cd|t_ce|t_Ce|t_cl|t_cm|t_Co|t_cs|t_Cs|t_CS|t_CV|t_da|t_db|t_dl|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_fs|t_IE|t_IS|t_k1|t_K1|t_k2|t_k3|t_K3|t_k4|t_K4|t_k5|t_K5|t_k6|t_K6|t_k7|t_K7|t_k8|t_K8|t_k9|t_K9|t_KA|t_kb|t_kB|t_KB|t_KC|t_kd|t_kD|t_KD|t_ke|t_KE|t_KF|t_KG|t_kh|t_KH|t_kI|t_KI|t_KJ|t_KK|t_kl|t_KL|t_kN|t_kP|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_RI|t_RV|t_Sb|t_se|t_Sf|t_SI|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_WP|t_WS|t_xs|t_ZH|t_ZR)\\b/,","\t'number': /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,","\t'operator': /\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,","\t'punctuation': /[{}[\\](),;:]/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-wiki.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-wiki.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":68,"column":3}},"2":{"start":{"line":70,"column":0},"end":{"line":81,"column":3}}},"branchMap":{},"code":["Prism.languages.wiki = Prism.languages.extend('markup', {","\t'block-comment': {","\t\tpattern: /(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\//,","\t\tlookbehind: true,","\t\talias: 'comment'","\t},","\t'heading': {","\t\tpattern: /^(=+).+?\\1/m,","\t\tinside: {","\t\t\t'punctuation': /^=+|=+$/,","\t\t\t'important': /.+/","\t\t}","\t},","\t'emphasis': {","\t\t// TODO Multi-line","\t\tpattern: /('{2,5}).+?\\1/,","\t\tinside: {","\t\t\t'bold italic': {","\t\t\t\tpattern: /(''''').+?(?=\\1)/,","\t\t\t\tlookbehind: true","\t\t\t},","\t\t\t'bold': {","\t\t\t\tpattern: /(''')[^'](?:.*?[^'])?(?=\\1)/,","\t\t\t\tlookbehind: true","\t\t\t},","\t\t\t'italic': {","\t\t\t\tpattern: /('')[^'](?:.*?[^'])?(?=\\1)/,","\t\t\t\tlookbehind: true","\t\t\t},","\t\t\t'punctuation': /^''+|''+$/","\t\t}","\t},","\t'hr': {","\t\tpattern: /^-{4,}/m,","\t\talias: 'punctuation'","\t},","\t'url': [","\t\t/ISBN +(?:97[89][ -]?)?(?:\\d[ -]?){9}[\\dx]\\b|(?:RFC|PMID) +\\d+/i,","\t\t/\\[\\[.+?\\]\\]|\\[.+?\\]/","\t],","\t'variable': [","\t\t/__[A-Z]+__/,","\t\t// FIXME Nested structures should be handled","\t\t// {{formatnum:{{#expr:{{{3}}}}}}}","\t\t/\\{{3}.+?\\}{3}/,","\t\t/\\{\\{.+?}}/","\t],","\t'symbol': [","\t\t/^#redirect/im,","\t\t/~{3,5}/","\t],","\t// Handle table attrs:","\t// {|","\t// ! style=\"text-align:left;\"| Item","\t// |}","\t'table-tag': {","\t\tpattern: /((?:^|[|!])[|!])[^|\\r\\n]+\\|(?!\\|)/m,","\t\tlookbehind: true,","\t\tinside: {","\t\t\t'table-bar': {","\t\t\t\tpattern: /\\|$/,","\t\t\t\talias: 'punctuation'","\t\t\t},","\t\t\trest: Prism.languages.markup['tag'].inside","\t\t}","\t},","\t'punctuation': /^(?:\\{\\||\\|\\}|\\|-|[*#:;!|])|\\|\\||!!/m","});","","Prism.languages.insertBefore('wiki', 'tag', {","\t// Prevent highlighting inside <nowiki>, <source> and <pre> tags","\t'nowiki': {","\t\tpattern: /<(nowiki|pre|source)\\b[\\w\\W]*?>[\\w\\W]*?<\\/\\1>/i,","\t\tinside: {","\t\t\t'tag': {","\t\t\t\tpattern: /<(?:nowiki|pre|source)\\b[\\w\\W]*?>|<\\/(?:nowiki|pre|source)>/i,","\t\t\t\tinside: Prism.languages.markup['tag'].inside","\t\t\t}","\t\t}","\t}","});",""],"l":{"1":1,"70":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-xojo.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-xojo.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":20,"column":2}}},"branchMap":{},"code":["Prism.languages.xojo = {","\t'comment': {","\t\tpattern: /(?:'|\\/\\/|Rem\\b).+/i,","\t\tinside: {","\t\t\t'keyword': /^Rem/i","\t\t}","\t},","\t'string': {","\t\tpattern: /\"(?:\"\"|[^\"])*\"/,","\t\tgreedy: true","\t},","\t'number': [","\t\t/(?:\\b|\\B[.-])(?:\\d+\\.?\\d*)(?:E[+-]?\\d+)?/i,","\t\t/&[bchou][a-z\\d]+/i","\t],","\t'symbol': /#(?:If|Else|ElseIf|Endif|Pragma)\\b/i,","\t'keyword': /\\b(?:AddHandler|App|Array|As(?:signs)?|By(?:Ref|Val)|Break|Call|Case|Catch|Const|Continue|CurrentMethodName|Declare|Dim|Do(?:wnTo)?|Each|Else(?:If)?|End|Exit|Extends|False|Finally|For|Global|If|In|Lib|Loop|Me|Next|Nil|Optional|ParamArray|Raise(?:Event)?|ReDim|Rem|RemoveHandler|Return|Select|Self|Soft|Static|Step|Super|Then|To|True|Try|Ubound|Until|Using|Wend|While)\\b/i,","\t'operator': /<[=>]?|>=?|[+\\-*\\/\\\\^=]|\\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|Xor|WeakAddressOf)\\b/i,","\t'punctuation': /[.,;:()]/","};"],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-yaml.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/components/prism-yaml.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":44,"column":2}}},"branchMap":{},"code":["Prism.languages.yaml = {","\t'scalar': {","\t\tpattern: /([\\-:]\\s*(![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\3[^\\r\\n]+)*)/,","\t\tlookbehind: true,","\t\talias: 'string'","\t},","\t'comment': /#.*/,","\t'key': {","\t\tpattern: /(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,","\t\tlookbehind: true,","\t\talias: 'atrule'","\t},","\t'directive': {","\t\tpattern: /(^[ \\t]*)%.+/m,","\t\tlookbehind: true,","\t\talias: 'important'","\t},","\t'datetime': {","\t\tpattern: /([:\\-,[{]\\s*(![^\\s]+)?[ \\t]*)(\\d{4}-\\d\\d?-\\d\\d?([tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(\\.\\d*)?[ \\t]*(Z|[-+]\\d\\d?(:\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(:\\d{2}(\\.\\d*)?)?)(?=[ \\t]*($|,|]|}))/m,","\t\tlookbehind: true,","\t\talias: 'number'","\t},","\t'boolean': {","\t\tpattern: /([:\\-,[{]\\s*(![^\\s]+)?[ \\t]*)(true|false)[ \\t]*(?=$|,|]|})/im,","\t\tlookbehind: true,","\t\talias: 'important'","\t},","\t'null': {","\t\tpattern: /([:\\-,[{]\\s*(![^\\s]+)?[ \\t]*)(null|~)[ \\t]*(?=$|,|]|})/im,","\t\tlookbehind: true,","\t\talias: 'important'","\t},","\t'string': {","\t\tpattern: /([:\\-,[{]\\s*(![^\\s]+)?[ \\t]*)(\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')(?=[ \\t]*($|,|]|}))/m,","\t\tlookbehind: true","\t},","\t'number': {","\t\tpattern: /([:\\-,[{]\\s*(![^\\s]+)?[ \\t]*)[+\\-]?(0x[\\da-f]+|0o[0-7]+|(\\d+\\.?\\d*|\\.?\\d+)(e[\\+\\-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,","\t\tlookbehind: true","\t},","\t'tag': /![^\\s]+/,","\t'important': /[&*][\\w]+/,","\t'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./","};",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/autolinker/prism-autolinker.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/autolinker/prism-autolinker.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},"b":{"1":[0,1],"2":[1,0,1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":11}}},"2":{"name":"(anonymous_2)","line":18,"loc":{"start":{"line":18,"column":17},"end":{"line":18,"column":36}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":31},"end":{"line":23,"column":57}}},"4":{"name":"(anonymous_4)","line":51,"loc":{"start":{"line":51,"column":36},"end":{"line":51,"column":50}}},"5":{"name":"(anonymous_5)","line":55,"loc":{"start":{"line":55,"column":24},"end":{"line":55,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":76,"column":5}},"2":{"start":{"line":3,"column":0},"end":{"line":8,"column":1}},"3":{"start":{"line":7,"column":1},"end":{"line":7,"column":8}},"4":{"start":{"line":10,"column":0},"end":{"line":15,"column":60}},"5":{"start":{"line":17,"column":0},"end":{"line":49,"column":2}},"6":{"start":{"line":20,"column":2},"end":{"line":22,"column":3}},"7":{"start":{"line":21,"column":3},"end":{"line":21,"column":10}},"8":{"start":{"line":23,"column":2},"end":{"line":45,"column":5}},"9":{"start":{"line":24,"column":3},"end":{"line":44,"column":4}},"10":{"start":{"line":25,"column":4},"end":{"line":29,"column":5}},"11":{"start":{"line":26,"column":5},"end":{"line":28,"column":7}},"12":{"start":{"line":31,"column":4},"end":{"line":31,"column":34}},"13":{"start":{"line":33,"column":4},"end":{"line":35,"column":5}},"14":{"start":{"line":34,"column":5},"end":{"line":34,"column":36}},"15":{"start":{"line":36,"column":4},"end":{"line":41,"column":5}},"16":{"start":{"line":37,"column":5},"end":{"line":37,"column":85}},"17":{"start":{"line":40,"column":5},"end":{"line":40,"column":34}},"18":{"start":{"line":43,"column":4},"end":{"line":43,"column":37}},"19":{"start":{"line":46,"column":2},"end":{"line":46,"column":28}},"20":{"start":{"line":47,"column":2},"end":{"line":47,"column":32}},"21":{"start":{"line":51,"column":0},"end":{"line":53,"column":3}},"22":{"start":{"line":52,"column":1},"end":{"line":52,"column":54}},"23":{"start":{"line":55,"column":0},"end":{"line":74,"column":3}},"24":{"start":{"line":56,"column":1},"end":{"line":73,"column":2}},"25":{"start":{"line":57,"column":2},"end":{"line":57,"column":16}},"26":{"start":{"line":59,"column":2},"end":{"line":59,"column":25}},"27":{"start":{"line":61,"column":2},"end":{"line":70,"column":3}},"28":{"start":{"line":62,"column":3},"end":{"line":62,"column":27}},"29":{"start":{"line":64,"column":7},"end":{"line":70,"column":3}},"30":{"start":{"line":66,"column":3},"end":{"line":66,"column":41}},"31":{"start":{"line":68,"column":3},"end":{"line":68,"column":19}},"32":{"start":{"line":69,"column":3},"end":{"line":69,"column":26}},"33":{"start":{"line":72,"column":2},"end":{"line":72,"column":29}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":0},"end":{"line":3,"column":0}},{"start":{"line":3,"column":0},"end":{"line":3,"column":0}}]},"2":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":1},"end":{"line":4,"column":28}},{"start":{"line":4,"column":32},"end":{"line":4,"column":43}},{"start":{"line":5,"column":1},"end":{"line":5,"column":30}},{"start":{"line":5,"column":34},"end":{"line":5,"column":47}}]},"3":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"4":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":6},"end":{"line":20,"column":14}},{"start":{"line":20,"column":18},"end":{"line":20,"column":37}}]},"5":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":3},"end":{"line":24,"column":3}},{"start":{"line":24,"column":3},"end":{"line":24,"column":3}}]},"6":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":7},"end":{"line":24,"column":36}},{"start":{"line":24,"column":40},"end":{"line":24,"column":72}}]},"7":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":25,"column":4}},{"start":{"line":25,"column":4},"end":{"line":25,"column":4}}]},"8":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":17},"end":{"line":31,"column":27}},{"start":{"line":31,"column":31},"end":{"line":31,"column":33}}]},"9":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"10":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":4}},{"start":{"line":36,"column":4},"end":{"line":36,"column":4}}]},"11":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":1},"end":{"line":56,"column":1}},{"start":{"line":56,"column":1},"end":{"line":56,"column":1}}]},"12":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"13":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":6},"end":{"line":61,"column":30}},{"start":{"line":61,"column":34},"end":{"line":61,"column":62}}]},"14":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":7},"end":{"line":64,"column":7}},{"start":{"line":64,"column":7},"end":{"line":64,"column":7}}]}},"code":["(function(){","","if (","\ttypeof self !== 'undefined' && !self.Prism ||","\ttypeof global !== 'undefined' && !global.Prism",") {","\treturn;","}","","var url = /\\b([a-z]{3,7}:\\/\\/|tel:)[\\w\\-+%~/.:#=?&amp;]+/,","    email = /\\b\\S+@[\\w.]+[a-z]{2}/,","    linkMd = /\\[([^\\]]+)]\\(([^)]+)\\)/,","    ","\t// Tokens that may contain URLs and emails","    candidates = ['comment', 'url', 'attr-value', 'string'];","","Prism.plugins.autolinker = {","\tprocessGrammar: function (grammar) {","\t\t// Abort if grammar has already been processed","\t\tif (!grammar || grammar['url-link']) {","\t\t\treturn;","\t\t}","\t\tPrism.languages.DFS(grammar, function (key, def, type) {","\t\t\tif (candidates.indexOf(type) > -1 && Prism.util.type(def) !== 'Array') {","\t\t\t\tif (!def.pattern) {","\t\t\t\t\tdef = this[key] = {","\t\t\t\t\t\tpattern: def","\t\t\t\t\t};","\t\t\t\t}","","\t\t\t\tdef.inside = def.inside || {};","","\t\t\t\tif (type == 'comment') {","\t\t\t\t\tdef.inside['md-link'] = linkMd;","\t\t\t\t}","\t\t\t\tif (type == 'attr-value') {","\t\t\t\t\tPrism.languages.insertBefore('inside', 'punctuation', { 'url-link': url }, def);","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\tdef.inside['url-link'] = url;","\t\t\t\t}","","\t\t\t\tdef.inside['email-link'] = email;","\t\t\t}","\t\t});","\t\tgrammar['url-link'] = url;","\t\tgrammar['email-link'] = email;","\t}","};","","Prism.hooks.add('before-highlight', function(env) {","\tPrism.plugins.autolinker.processGrammar(env.grammar);","});","","Prism.hooks.add('wrap', function(env) {","\tif (/-link$/.test(env.type)) {","\t\tenv.tag = 'a';","\t\t","\t\tvar href = env.content;","\t\t","\t\tif (env.type == 'email-link' && href.indexOf('mailto:') != 0) {","\t\t\thref = 'mailto:' + href;","\t\t}","\t\telse if (env.type == 'md-link') {","\t\t\t// Markdown","\t\t\tvar match = env.content.match(linkMd);","\t\t\t","\t\t\thref = match[2];","\t\t\tenv.content = match[1];","\t\t}","\t\t","\t\tenv.attributes.href = href;","\t}","});","","})();"],"l":{"1":1,"3":1,"7":0,"10":1,"17":1,"20":0,"21":0,"23":0,"24":0,"25":0,"26":0,"31":0,"33":0,"34":0,"36":0,"37":0,"40":0,"43":0,"46":0,"47":0,"51":1,"52":0,"55":1,"56":0,"57":0,"59":0,"61":0,"62":0,"64":0,"66":0,"68":0,"69":0,"72":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/autoloader/prism-autoloader.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/autoloader/prism-autoloader.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0},"b":{"1":[1,0],"2":[1,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0,0],"31":[0,0],"32":[0,0,0],"33":[0,0],"34":[0,0,0],"35":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":13}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":14},"end":{"line":24,"column":45}}},"3":{"name":"(anonymous_3)","line":28,"loc":{"start":{"line":28,"column":13},"end":{"line":28,"column":24}}},"4":{"name":"(anonymous_4)","line":32,"loc":{"start":{"line":32,"column":14},"end":{"line":32,"column":25}}},"5":{"name":"(anonymous_5)","line":44,"loc":{"start":{"line":44,"column":23},"end":{"line":44,"column":39}}},"6":{"name":"(anonymous_6)","line":56,"loc":{"start":{"line":56,"column":23},"end":{"line":56,"column":44}}},"7":{"name":"(anonymous_7)","line":74,"loc":{"start":{"line":74,"column":22},"end":{"line":74,"column":34}}},"8":{"name":"(anonymous_8)","line":75,"loc":{"start":{"line":75,"column":22},"end":{"line":75,"column":34}}},"9":{"name":"(anonymous_9)","line":87,"loc":{"start":{"line":87,"column":21},"end":{"line":87,"column":54}}},"10":{"name":"(anonymous_10)","line":93,"loc":{"start":{"line":93,"column":10},"end":{"line":93,"column":22}}},"11":{"name":"(anonymous_11)","line":95,"loc":{"start":{"line":95,"column":27},"end":{"line":95,"column":39}}},"12":{"name":"(anonymous_12)","line":98,"loc":{"start":{"line":98,"column":7},"end":{"line":98,"column":19}}},"13":{"name":"(anonymous_13)","line":114,"loc":{"start":{"line":114,"column":20},"end":{"line":114,"column":52}}},"14":{"name":"(anonymous_14)","line":115,"loc":{"start":{"line":115,"column":13},"end":{"line":115,"column":25}}},"15":{"name":"(anonymous_15)","line":147,"loc":{"start":{"line":147,"column":16},"end":{"line":147,"column":28}}},"16":{"name":"(anonymous_16)","line":151,"loc":{"start":{"line":151,"column":7},"end":{"line":151,"column":19}}},"17":{"name":"(anonymous_17)","line":170,"loc":{"start":{"line":170,"column":23},"end":{"line":170,"column":39}}},"18":{"name":"(anonymous_18)","line":172,"loc":{"start":{"line":172,"column":45},"end":{"line":172,"column":58}}},"19":{"name":"(anonymous_19)","line":182,"loc":{"start":{"line":182,"column":21},"end":{"line":182,"column":37}}},"20":{"name":"(anonymous_20)","line":184,"loc":{"start":{"line":184,"column":43},"end":{"line":184,"column":56}}},"21":{"name":"(anonymous_21)","line":190,"loc":{"start":{"line":190,"column":29},"end":{"line":190,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":198,"column":5}},"2":{"start":{"line":2,"column":1},"end":{"line":4,"column":2}},"3":{"start":{"line":3,"column":2},"end":{"line":3,"column":9}},"4":{"start":{"line":7,"column":1},"end":{"line":7,"column":834}},"5":{"start":{"line":9,"column":1},"end":{"line":9,"column":20}},"6":{"start":{"line":11,"column":1},"end":{"line":11,"column":31}},"7":{"start":{"line":13,"column":1},"end":{"line":16,"column":3}},"8":{"start":{"line":24,"column":1},"end":{"line":37,"column":3}},"9":{"start":{"line":25,"column":2},"end":{"line":25,"column":43}},"10":{"start":{"line":26,"column":2},"end":{"line":26,"column":14}},"11":{"start":{"line":27,"column":2},"end":{"line":27,"column":17}},"12":{"start":{"line":28,"column":2},"end":{"line":31,"column":4}},"13":{"start":{"line":29,"column":3},"end":{"line":29,"column":32}},"14":{"start":{"line":30,"column":3},"end":{"line":30,"column":24}},"15":{"start":{"line":32,"column":2},"end":{"line":35,"column":4}},"16":{"start":{"line":33,"column":3},"end":{"line":33,"column":32}},"17":{"start":{"line":34,"column":3},"end":{"line":34,"column":20}},"18":{"start":{"line":36,"column":2},"end":{"line":36,"column":31}},"19":{"start":{"line":44,"column":1},"end":{"line":48,"column":3}},"20":{"start":{"line":45,"column":2},"end":{"line":47,"column":48}},"21":{"start":{"line":56,"column":1},"end":{"line":79,"column":3}},"22":{"start":{"line":57,"column":2},"end":{"line":57,"column":29}},"23":{"start":{"line":58,"column":2},"end":{"line":60,"column":3}},"24":{"start":{"line":59,"column":3},"end":{"line":59,"column":31}},"25":{"start":{"line":63,"column":2},"end":{"line":63,"column":51}},"26":{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},"27":{"start":{"line":65,"column":3},"end":{"line":65,"column":59}},"28":{"start":{"line":68,"column":2},"end":{"line":72,"column":3}},"29":{"start":{"line":69,"column":3},"end":{"line":69,"column":33}},"30":{"start":{"line":71,"column":3},"end":{"line":71,"column":13}},"31":{"start":{"line":74,"column":2},"end":{"line":78,"column":5}},"32":{"start":{"line":75,"column":3},"end":{"line":77,"column":6}},"33":{"start":{"line":76,"column":4},"end":{"line":76,"column":32}},"34":{"start":{"line":87,"column":1},"end":{"line":106,"column":3}},"35":{"start":{"line":88,"column":2},"end":{"line":90,"column":3}},"36":{"start":{"line":89,"column":3},"end":{"line":89,"column":19}},"37":{"start":{"line":91,"column":2},"end":{"line":91,"column":12}},"38":{"start":{"line":92,"column":2},"end":{"line":92,"column":23}},"39":{"start":{"line":93,"column":2},"end":{"line":104,"column":4}},"40":{"start":{"line":94,"column":3},"end":{"line":103,"column":4}},"41":{"start":{"line":95,"column":4},"end":{"line":100,"column":7}},"42":{"start":{"line":96,"column":5},"end":{"line":96,"column":9}},"43":{"start":{"line":97,"column":5},"end":{"line":97,"column":9}},"44":{"start":{"line":99,"column":5},"end":{"line":99,"column":30}},"45":{"start":{"line":101,"column":10},"end":{"line":103,"column":4}},"46":{"start":{"line":102,"column":4},"end":{"line":102,"column":30}},"47":{"start":{"line":105,"column":2},"end":{"line":105,"column":6}},"48":{"start":{"line":114,"column":1},"end":{"line":164,"column":3}},"49":{"start":{"line":115,"column":2},"end":{"line":157,"column":4}},"50":{"start":{"line":116,"column":3},"end":{"line":116,"column":21}},"51":{"start":{"line":118,"column":3},"end":{"line":121,"column":4}},"52":{"start":{"line":119,"column":4},"end":{"line":119,"column":17}},"53":{"start":{"line":120,"column":4},"end":{"line":120,"column":33}},"54":{"start":{"line":123,"column":3},"end":{"line":123,"column":30}},"55":{"start":{"line":124,"column":3},"end":{"line":126,"column":4}},"56":{"start":{"line":125,"column":4},"end":{"line":125,"column":32}},"57":{"start":{"line":127,"column":3},"end":{"line":132,"column":4}},"58":{"start":{"line":128,"column":4},"end":{"line":130,"column":5}},"59":{"start":{"line":129,"column":5},"end":{"line":129,"column":33}},"60":{"start":{"line":131,"column":4},"end":{"line":131,"column":41}},"61":{"start":{"line":133,"column":3},"end":{"line":138,"column":4}},"62":{"start":{"line":134,"column":4},"end":{"line":136,"column":5}},"63":{"start":{"line":135,"column":5},"end":{"line":135,"column":31}},"64":{"start":{"line":137,"column":4},"end":{"line":137,"column":37}},"65":{"start":{"line":140,"column":3},"end":{"line":156,"column":4}},"66":{"start":{"line":141,"column":4},"end":{"line":141,"column":26}},"67":{"start":{"line":142,"column":10},"end":{"line":156,"column":4}},"68":{"start":{"line":143,"column":4},"end":{"line":143,"column":24}},"69":{"start":{"line":144,"column":10},"end":{"line":156,"column":4}},"70":{"start":{"line":145,"column":4},"end":{"line":145,"column":24}},"71":{"start":{"line":146,"column":4},"end":{"line":146,"column":36}},"72":{"start":{"line":147,"column":4},"end":{"line":155,"column":7}},"73":{"start":{"line":148,"column":5},"end":{"line":148,"column":26}},"74":{"start":{"line":149,"column":5},"end":{"line":149,"column":27}},"75":{"start":{"line":152,"column":5},"end":{"line":152,"column":26}},"76":{"start":{"line":153,"column":5},"end":{"line":153,"column":23}},"77":{"start":{"line":154,"column":5},"end":{"line":154,"column":25}},"78":{"start":{"line":158,"column":2},"end":{"line":158,"column":45}},"79":{"start":{"line":159,"column":2},"end":{"line":163,"column":3}},"80":{"start":{"line":160,"column":3},"end":{"line":160,"column":37}},"81":{"start":{"line":162,"column":3},"end":{"line":162,"column":10}},"82":{"start":{"line":170,"column":1},"end":{"line":176,"column":3}},"83":{"start":{"line":171,"column":2},"end":{"line":175,"column":3}},"84":{"start":{"line":172,"column":3},"end":{"line":174,"column":6}},"85":{"start":{"line":173,"column":4},"end":{"line":173,"column":12}},"86":{"start":{"line":182,"column":1},"end":{"line":188,"column":3}},"87":{"start":{"line":183,"column":2},"end":{"line":187,"column":3}},"88":{"start":{"line":184,"column":3},"end":{"line":186,"column":6}},"89":{"start":{"line":185,"column":4},"end":{"line":185,"column":12}},"90":{"start":{"line":190,"column":1},"end":{"line":196,"column":4}},"91":{"start":{"line":191,"column":2},"end":{"line":195,"column":3}},"92":{"start":{"line":192,"column":3},"end":{"line":194,"column":4}},"93":{"start":{"line":193,"column":4},"end":{"line":193,"column":47}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":5},"end":{"line":2,"column":32}},{"start":{"line":2,"column":36},"end":{"line":2,"column":47}},{"start":{"line":2,"column":51},"end":{"line":2,"column":65}},{"start":{"line":2,"column":69},"end":{"line":2,"column":92}}]},"3":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":3},"end":{"line":30,"column":10}},{"start":{"line":30,"column":14},"end":{"line":30,"column":23}}]},"4":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":3},"end":{"line":34,"column":8}},{"start":{"line":34,"column":12},"end":{"line":34,"column":19}}]},"5":{"line":47,"type":"cond-expr","locations":[{"start":{"line":47,"column":28},"end":{"line":47,"column":34}},{"start":{"line":47,"column":37},"end":{"line":47,"column":39}}]},"6":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"7":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":64,"column":2}},{"start":{"line":64,"column":2},"end":{"line":64,"column":2}}]},"8":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":6},"end":{"line":64,"column":11}},{"start":{"line":64,"column":15},"end":{"line":64,"column":29}},{"start":{"line":64,"column":33},"end":{"line":64,"column":79}}]},"9":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":2},"end":{"line":68,"column":2}},{"start":{"line":68,"column":2},"end":{"line":68,"column":2}}]},"10":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":2},"end":{"line":88,"column":2}},{"start":{"line":88,"column":2},"end":{"line":88,"column":2}}]},"11":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":3},"end":{"line":94,"column":3}},{"start":{"line":94,"column":3},"end":{"line":94,"column":3}}]},"12":{"line":99,"type":"binary-expr","locations":[{"start":{"line":99,"column":5},"end":{"line":99,"column":10}},{"start":{"line":99,"column":14},"end":{"line":99,"column":29}}]},"13":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":10},"end":{"line":101,"column":10}},{"start":{"line":101,"column":10},"end":{"line":101,"column":10}}]},"14":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":4},"end":{"line":102,"column":11}},{"start":{"line":102,"column":15},"end":{"line":102,"column":29}}]},"15":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":3},"end":{"line":118,"column":3}},{"start":{"line":118,"column":3},"end":{"line":118,"column":3}}]},"16":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":3},"end":{"line":124,"column":3}},{"start":{"line":124,"column":3},"end":{"line":124,"column":3}}]},"17":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":3},"end":{"line":127,"column":3}},{"start":{"line":127,"column":3},"end":{"line":127,"column":3}}]},"18":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":4},"end":{"line":128,"column":4}},{"start":{"line":128,"column":4},"end":{"line":128,"column":4}}]},"19":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":3},"end":{"line":133,"column":3}},{"start":{"line":133,"column":3},"end":{"line":133,"column":3}}]},"20":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":134,"column":4}},{"start":{"line":134,"column":4},"end":{"line":134,"column":4}}]},"21":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":3},"end":{"line":140,"column":3}},{"start":{"line":140,"column":3},"end":{"line":140,"column":3}}]},"22":{"line":140,"type":"binary-expr","locations":[{"start":{"line":140,"column":7},"end":{"line":140,"column":13}},{"start":{"line":140,"column":17},"end":{"line":140,"column":38}}]},"23":{"line":142,"type":"if","locations":[{"start":{"line":142,"column":10},"end":{"line":142,"column":10}},{"start":{"line":142,"column":10},"end":{"line":142,"column":10}}]},"24":{"line":142,"type":"binary-expr","locations":[{"start":{"line":142,"column":14},"end":{"line":142,"column":20}},{"start":{"line":142,"column":24},"end":{"line":142,"column":34}}]},"25":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":10},"end":{"line":144,"column":10}},{"start":{"line":144,"column":10},"end":{"line":144,"column":10}}]},"26":{"line":144,"type":"binary-expr","locations":[{"start":{"line":144,"column":14},"end":{"line":144,"column":19}},{"start":{"line":144,"column":23},"end":{"line":144,"column":36}}]},"27":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":2},"end":{"line":159,"column":2}},{"start":{"line":159,"column":2},"end":{"line":159,"column":2}}]},"28":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":5},"end":{"line":159,"column":17}},{"start":{"line":159,"column":21},"end":{"line":159,"column":40}}]},"29":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":2},"end":{"line":171,"column":2}},{"start":{"line":171,"column":2},"end":{"line":171,"column":2}}]},"30":{"line":171,"type":"binary-expr","locations":[{"start":{"line":171,"column":6},"end":{"line":171,"column":21}},{"start":{"line":171,"column":25},"end":{"line":171,"column":58}},{"start":{"line":171,"column":62},"end":{"line":171,"column":102}}]},"31":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":2},"end":{"line":183,"column":2}},{"start":{"line":183,"column":2},"end":{"line":183,"column":2}}]},"32":{"line":183,"type":"binary-expr","locations":[{"start":{"line":183,"column":6},"end":{"line":183,"column":21}},{"start":{"line":183,"column":25},"end":{"line":183,"column":56}},{"start":{"line":183,"column":60},"end":{"line":183,"column":98}}]},"33":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":2},"end":{"line":191,"column":2}},{"start":{"line":191,"column":2},"end":{"line":191,"column":2}}]},"34":{"line":191,"type":"binary-expr","locations":[{"start":{"line":191,"column":6},"end":{"line":191,"column":17}},{"start":{"line":191,"column":21},"end":{"line":191,"column":33}},{"start":{"line":191,"column":37},"end":{"line":191,"column":49}}]},"35":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":3},"end":{"line":192,"column":3}},{"start":{"line":192,"column":3},"end":{"line":192,"column":3}}]}},"code":["(function () {","\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.createElement) {","\t\treturn;","\t}","","\t// The dependencies map is built automatically with gulp","\tvar lang_dependencies = /*languages_placeholder[*/{\"javascript\":\"clike\",\"actionscript\":\"javascript\",\"aspnet\":\"markup\",\"bison\":\"c\",\"c\":\"clike\",\"csharp\":\"clike\",\"cpp\":\"c\",\"coffeescript\":\"javascript\",\"crystal\":\"ruby\",\"css-extras\":\"css\",\"d\":\"clike\",\"dart\":\"clike\",\"fsharp\":\"clike\",\"glsl\":\"clike\",\"go\":\"clike\",\"groovy\":\"clike\",\"haml\":\"ruby\",\"handlebars\":\"markup\",\"haxe\":\"clike\",\"jade\":\"javascript\",\"java\":\"clike\",\"jolie\":\"clike\",\"kotlin\":\"clike\",\"less\":\"css\",\"markdown\":\"markup\",\"nginx\":\"clike\",\"objectivec\":\"c\",\"parser\":\"markup\",\"php\":\"clike\",\"php-extras\":\"php\",\"processing\":\"clike\",\"protobuf\":\"clike\",\"qore\":\"clike\",\"jsx\":[\"markup\",\"javascript\"],\"reason\":\"clike\",\"ruby\":\"clike\",\"sass\":\"css\",\"scss\":\"css\",\"scala\":\"java\",\"smarty\":\"markup\",\"swift\":\"clike\",\"textile\":\"markup\",\"twig\":\"markup\",\"typescript\":\"javascript\",\"wiki\":\"markup\"}/*]*/;","","\tvar lang_data = {};","","\tvar ignored_language = 'none';","","\tvar config = Prism.plugins.autoloader = {","\t\tlanguages_path: 'components/',","\t\tuse_minified: true","\t};","","\t/**","\t * Lazy loads an external script","\t * @param {string} src","\t * @param {function=} success","\t * @param {function=} error","\t */","\tvar script = function (src, success, error) {","\t\tvar s = document.createElement('script');","\t\ts.src = src;","\t\ts.async = true;","\t\ts.onload = function() {","\t\t\tdocument.body.removeChild(s);","\t\t\tsuccess && success();","\t\t};","\t\ts.onerror = function() {","\t\t\tdocument.body.removeChild(s);","\t\t\terror && error();","\t\t};","\t\tdocument.body.appendChild(s);","\t};","","\t/**","\t * Returns the path to a grammar, using the language_path and use_minified config keys.","\t * @param {string} lang","\t * @returns {string}","\t */","\tvar getLanguagePath = function (lang) {","\t\treturn config.languages_path +","\t\t\t'prism-' + lang","\t\t\t+ (config.use_minified ? '.min' : '') + '.js'","\t};","","\t/**","\t * Tries to load a grammar and","\t * highlight again the given element once loaded.","\t * @param {string} lang","\t * @param {HTMLElement} elt","\t */","\tvar registerElement = function (lang, elt) {","\t\tvar data = lang_data[lang];","\t\tif (!data) {","\t\t\tdata = lang_data[lang] = {};","\t\t}","","\t\t// Look for additional dependencies defined on the <code> or <pre> tags","\t\tvar deps = elt.getAttribute('data-dependencies');","\t\tif (!deps && elt.parentNode && elt.parentNode.tagName.toLowerCase() === 'pre') {","\t\t\tdeps = elt.parentNode.getAttribute('data-dependencies');","\t\t}","","\t\tif (deps) {","\t\t\tdeps = deps.split(/\\s*,\\s*/g);","\t\t} else {","\t\t\tdeps = [];","\t\t}","","\t\tloadLanguages(deps, function () {","\t\t\tloadLanguage(lang, function () {","\t\t\t\tPrism.highlightElement(elt);","\t\t\t});","\t\t});","\t};","","\t/**","\t * Sequentially loads an array of grammars.","\t * @param {string[]|string} langs","\t * @param {function=} success","\t * @param {function=} error","\t */","\tvar loadLanguages = function (langs, success, error) {","\t\tif (typeof langs === 'string') {","\t\t\tlangs = [langs];","\t\t}","\t\tvar i = 0;","\t\tvar l = langs.length;","\t\tvar f = function () {","\t\t\tif (i < l) {","\t\t\t\tloadLanguage(langs[i], function () {","\t\t\t\t\ti++;","\t\t\t\t\tf();","\t\t\t\t}, function () {","\t\t\t\t\terror && error(langs[i]);","\t\t\t\t});","\t\t\t} else if (i === l) {","\t\t\t\tsuccess && success(langs);","\t\t\t}","\t\t};","\t\tf();","\t};","","\t/**","\t * Load a grammar with its dependencies","\t * @param {string} lang","\t * @param {function=} success","\t * @param {function=} error","\t */","\tvar loadLanguage = function (lang, success, error) {","\t\tvar load = function () {","\t\t\tvar force = false;","\t\t\t// Do we want to force reload the grammar?","\t\t\tif (lang.indexOf('!') >= 0) {","\t\t\t\tforce = true;","\t\t\t\tlang = lang.replace('!', '');","\t\t\t}","","\t\t\tvar data = lang_data[lang];","\t\t\tif (!data) {","\t\t\t\tdata = lang_data[lang] = {};","\t\t\t}","\t\t\tif (success) {","\t\t\t\tif (!data.success_callbacks) {","\t\t\t\t\tdata.success_callbacks = [];","\t\t\t\t}","\t\t\t\tdata.success_callbacks.push(success);","\t\t\t}","\t\t\tif (error) {","\t\t\t\tif (!data.error_callbacks) {","\t\t\t\t\tdata.error_callbacks = [];","\t\t\t\t}","\t\t\t\tdata.error_callbacks.push(error);","\t\t\t}","","\t\t\tif (!force && Prism.languages[lang]) {","\t\t\t\tlanguageSuccess(lang);","\t\t\t} else if (!force && data.error) {","\t\t\t\tlanguageError(lang);","\t\t\t} else if (force || !data.loading) {","\t\t\t\tdata.loading = true;","\t\t\t\tvar src = getLanguagePath(lang);","\t\t\t\tscript(src, function () {","\t\t\t\t\tdata.loading = false;","\t\t\t\t\tlanguageSuccess(lang);","","\t\t\t\t}, function () {","\t\t\t\t\tdata.loading = false;","\t\t\t\t\tdata.error = true;","\t\t\t\t\tlanguageError(lang);","\t\t\t\t});","\t\t\t}","\t\t};","\t\tvar dependencies = lang_dependencies[lang];","\t\tif(dependencies && dependencies.length) {","\t\t\tloadLanguages(dependencies, load);","\t\t} else {","\t\t\tload();","\t\t}","\t};","","\t/**","\t * Runs all success callbacks for this language.","\t * @param {string} lang","\t */","\tvar languageSuccess = function (lang) {","\t\tif (lang_data[lang] && lang_data[lang].success_callbacks && lang_data[lang].success_callbacks.length) {","\t\t\tlang_data[lang].success_callbacks.forEach(function (f) {","\t\t\t\tf(lang);","\t\t\t});","\t\t}","\t};","","\t/**","\t * Runs all error callbacks for this language.","\t * @param {string} lang","\t */","\tvar languageError = function (lang) {","\t\tif (lang_data[lang] && lang_data[lang].error_callbacks && lang_data[lang].error_callbacks.length) {","\t\t\tlang_data[lang].error_callbacks.forEach(function (f) {","\t\t\t\tf(lang);","\t\t\t});","\t\t}","\t};","","\tPrism.hooks.add('complete', function (env) {","\t\tif (env.element && env.language && !env.grammar) {","\t\t\tif (env.language !== ignored_language) {","\t\t\t\tregisterElement(env.language, env.element);","\t\t\t}","\t\t}","\t});","","}());"],"l":{"1":1,"2":1,"3":1,"7":0,"9":0,"11":0,"13":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"32":0,"33":0,"34":0,"36":0,"44":0,"45":0,"56":0,"57":0,"58":0,"59":0,"63":0,"64":0,"65":0,"68":0,"69":0,"71":0,"74":0,"75":0,"76":0,"87":0,"88":0,"89":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"99":0,"101":0,"102":0,"105":0,"114":0,"115":0,"116":0,"118":0,"119":0,"120":0,"123":0,"124":0,"125":0,"127":0,"128":0,"129":0,"131":0,"133":0,"134":0,"135":0,"137":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"152":0,"153":0,"154":0,"158":0,"159":0,"160":0,"162":0,"170":0,"171":0,"172":0,"173":0,"182":0,"183":0,"184":0,"185":0,"190":0,"191":0,"192":0,"193":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/command-line/prism-command-line.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/command-line/prism-command-line.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0},"b":{"1":[1,0],"2":[1,0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":12}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":28},"end":{"line":7,"column":43}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":20},"end":{"line":37,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":81,"column":5}},"2":{"start":{"line":3,"column":0},"end":{"line":5,"column":1}},"3":{"start":{"line":4,"column":1},"end":{"line":4,"column":8}},"4":{"start":{"line":7,"column":0},"end":{"line":79,"column":3}},"5":{"start":{"line":8,"column":1},"end":{"line":10,"column":2}},"6":{"start":{"line":9,"column":2},"end":{"line":9,"column":9}},"7":{"start":{"line":13,"column":1},"end":{"line":13,"column":34}},"8":{"start":{"line":14,"column":1},"end":{"line":14,"column":39}},"9":{"start":{"line":15,"column":1},"end":{"line":21,"column":2}},"10":{"start":{"line":20,"column":2},"end":{"line":20,"column":9}},"11":{"start":{"line":23,"column":1},"end":{"line":26,"column":2}},"12":{"start":{"line":25,"column":2},"end":{"line":25,"column":9}},"13":{"start":{"line":28,"column":1},"end":{"line":31,"column":2}},"14":{"start":{"line":30,"column":2},"end":{"line":30,"column":68}},"15":{"start":{"line":32,"column":1},"end":{"line":35,"column":2}},"16":{"start":{"line":34,"column":2},"end":{"line":34,"column":35}},"17":{"start":{"line":37,"column":1},"end":{"line":39,"column":3}},"18":{"start":{"line":38,"column":2},"end":{"line":38,"column":72}},"19":{"start":{"line":42,"column":1},"end":{"line":42,"column":56}},"20":{"start":{"line":43,"column":1},"end":{"line":43,"column":50}},"21":{"start":{"line":44,"column":1},"end":{"line":50,"column":2}},"22":{"start":{"line":45,"column":2},"end":{"line":45,"column":71}},"23":{"start":{"line":47,"column":2},"end":{"line":47,"column":47}},"24":{"start":{"line":48,"column":2},"end":{"line":48,"column":52}},"25":{"start":{"line":49,"column":2},"end":{"line":49,"column":88}},"26":{"start":{"line":53,"column":1},"end":{"line":53,"column":45}},"27":{"start":{"line":54,"column":1},"end":{"line":54,"column":42}},"28":{"start":{"line":55,"column":1},"end":{"line":55,"column":26}},"29":{"start":{"line":58,"column":1},"end":{"line":58,"column":60}},"30":{"start":{"line":59,"column":1},"end":{"line":59,"column":44}},"31":{"start":{"line":60,"column":1},"end":{"line":76,"column":2}},"32":{"start":{"line":61,"column":2},"end":{"line":61,"column":49}},"33":{"start":{"line":62,"column":2},"end":{"line":62,"column":45}},"34":{"start":{"line":63,"column":2},"end":{"line":63,"column":30}},"35":{"start":{"line":64,"column":2},"end":{"line":66,"column":3}},"36":{"start":{"line":65,"column":3},"end":{"line":65,"column":40}},"37":{"start":{"line":68,"column":2},"end":{"line":75,"column":3}},"38":{"start":{"line":69,"column":3},"end":{"line":74,"column":4}},"39":{"start":{"line":70,"column":4},"end":{"line":70,"column":38}},"40":{"start":{"line":71,"column":4},"end":{"line":71,"column":38}},"41":{"start":{"line":72,"column":4},"end":{"line":72,"column":38}},"42":{"start":{"line":73,"column":4},"end":{"line":73,"column":40}},"43":{"start":{"line":78,"column":1},"end":{"line":78,"column":66}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":0},"end":{"line":3,"column":0}},{"start":{"line":3,"column":0},"end":{"line":3,"column":0}}]},"2":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":31}},{"start":{"line":3,"column":35},"end":{"line":3,"column":46}},{"start":{"line":3,"column":50},"end":{"line":3,"column":64}}]},"3":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},{"start":{"line":8,"column":1},"end":{"line":8,"column":1}}]},"4":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},{"start":{"line":15,"column":1},"end":{"line":15,"column":1}}]},"5":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":2},"end":{"line":16,"column":6}},{"start":{"line":16,"column":10},"end":{"line":16,"column":36}},{"start":{"line":18,"column":3},"end":{"line":18,"column":30}},{"start":{"line":18,"column":34},"end":{"line":18,"column":69}}]},"6":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},{"start":{"line":23,"column":1},"end":{"line":23,"column":1}}]},"7":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},{"start":{"line":28,"column":1},"end":{"line":28,"column":1}}]},"8":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},{"start":{"line":32,"column":1},"end":{"line":32,"column":1}}]},"9":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":10},"end":{"line":38,"column":31}},{"start":{"line":38,"column":35},"end":{"line":38,"column":47}}]},"10":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":1},"end":{"line":44,"column":1}},{"start":{"line":44,"column":1},"end":{"line":44,"column":1}}]},"11":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":22},"end":{"line":58,"column":53}},{"start":{"line":58,"column":57},"end":{"line":58,"column":59}}]},"12":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":64,"column":2}},{"start":{"line":64,"column":2},"end":{"line":64,"column":2}}]},"13":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":2},"end":{"line":68,"column":2}},{"start":{"line":68,"column":2},"end":{"line":68,"column":2}}]},"14":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":6},"end":{"line":68,"column":25}},{"start":{"line":68,"column":29},"end":{"line":68,"column":46}}]},"15":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":29},"end":{"line":69,"column":43}},{"start":{"line":69,"column":47},"end":{"line":69,"column":74}}]}},"code":["(function() {","","if (typeof self === 'undefined' || !self.Prism || !self.document) {","\treturn;","}","","Prism.hooks.add('complete', function (env) {","\tif (!env.code) {","\t\treturn;","\t}","","\t// Works only for <code> wrapped inside <pre> (not inline).","\tvar pre = env.element.parentNode;","\tvar clsReg = /\\s*\\bcommand-line\\b\\s*/;","\tif (","\t\t!pre || !/pre/i.test(pre.nodeName) ||","\t\t\t// Abort only if neither the <pre> nor the <code> have the class","\t\t(!clsReg.test(pre.className) && !clsReg.test(env.element.className))","\t) {","\t\treturn;","\t}","","\tif (env.element.querySelector('.command-line-prompt')) {","\t\t// Abort if prompt already exists.","\t\treturn;","\t}","","\tif (clsReg.test(env.element.className)) {","\t\t// Remove the class \"command-line\" from the <code>","\t\tenv.element.className = env.element.className.replace(clsReg, '');","\t}","\tif (!clsReg.test(pre.className)) {","\t\t// Add the class \"command-line\" to the <pre>","\t\tpre.className += ' command-line';","\t}","","\tvar getAttribute = function(key, defaultValue) {","\t\treturn (pre.getAttribute(key) || defaultValue).replace(/\"/g, '&quot');","\t};","","\t// Create the \"rows\" that will become the command-line prompts. -- cwells","\tvar lines = new Array(1 + env.code.split('\\n').length);","\tvar promptText = getAttribute('data-prompt', '');","\tif (promptText !== '') {","\t\tlines = lines.join('<span data-prompt=\"' + promptText + '\"></span>');","\t} else {","\t\tvar user = getAttribute('data-user', 'user');","\t\tvar host = getAttribute('data-host', 'localhost');","\t\tlines = lines.join('<span data-user=\"' + user + '\" data-host=\"' + host + '\"></span>');","\t}","","\t// Create the wrapper element. -- cwells","\tvar prompt = document.createElement('span');","\tprompt.className = 'command-line-prompt';","\tprompt.innerHTML = lines;","","\t// Mark the output lines so they can be styled differently (no prompt). -- cwells","\tvar outputSections = pre.getAttribute('data-output') || '';","\toutputSections = outputSections.split(',');","\tfor (var i = 0; i < outputSections.length; i++) {","\t\tvar outputRange = outputSections[i].split('-');","\t\tvar outputStart = parseInt(outputRange[0]);","\t\tvar outputEnd = outputStart; // Default: end at the first line when it's not an actual range. -- cwells","\t\tif (outputRange.length === 2) {","\t\t\toutputEnd = parseInt(outputRange[1]);","\t\t}","","\t\tif (!isNaN(outputStart) && !isNaN(outputEnd)) {","\t\t\tfor (var j = outputStart; j <= outputEnd && j <= prompt.children.length; j++) {","\t\t\t\tvar node = prompt.children[j - 1];","\t\t\t\tnode.removeAttribute('data-user');","\t\t\t\tnode.removeAttribute('data-host');","\t\t\t\tnode.removeAttribute('data-prompt');","\t\t\t}","\t\t}","\t}","","\tenv.element.innerHTML = prompt.outerHTML + env.element.innerHTML;","});","","}());",""],"l":{"1":1,"3":1,"4":1,"7":0,"8":0,"9":0,"13":0,"14":0,"15":0,"20":0,"23":0,"25":0,"28":0,"30":0,"32":0,"34":0,"37":0,"38":0,"42":0,"43":0,"44":0,"45":0,"47":0,"48":0,"49":0,"53":0,"54":0,"55":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"78":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/copy-to-clipboard/prism-copy-to-clipboard.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/copy-to-clipboard/prism-copy-to-clipboard.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0},"b":{"1":[1,0],"2":[1,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":11}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":18},"end":{"line":24,"column":29}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":59},"end":{"line":38,"column":74}}},"4":{"name":"registerClipboard","line":50,"loc":{"start":{"line":50,"column":2},"end":{"line":50,"column":31}}},"5":{"name":"(anonymous_5)","line":52,"loc":{"start":{"line":52,"column":12},"end":{"line":52,"column":24}}},"6":{"name":"(anonymous_6)","line":57,"loc":{"start":{"line":57,"column":22},"end":{"line":57,"column":33}}},"7":{"name":"(anonymous_7)","line":62,"loc":{"start":{"line":62,"column":20},"end":{"line":62,"column":32}}},"8":{"name":"resetText","line":69,"loc":{"start":{"line":69,"column":2},"end":{"line":69,"column":23}}},"9":{"name":"(anonymous_9)","line":70,"loc":{"start":{"line":70,"column":14},"end":{"line":70,"column":26}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":75,"column":5}},"2":{"start":{"line":2,"column":1},"end":{"line":4,"column":2}},"3":{"start":{"line":3,"column":2},"end":{"line":3,"column":9}},"4":{"start":{"line":6,"column":1},"end":{"line":10,"column":2}},"5":{"start":{"line":7,"column":2},"end":{"line":7,"column":73}},"6":{"start":{"line":9,"column":2},"end":{"line":9,"column":9}},"7":{"start":{"line":12,"column":1},"end":{"line":12,"column":47}},"8":{"start":{"line":14,"column":1},"end":{"line":16,"column":2}},"9":{"start":{"line":15,"column":2},"end":{"line":15,"column":35}},"10":{"start":{"line":18,"column":1},"end":{"line":18,"column":20}},"11":{"start":{"line":20,"column":1},"end":{"line":36,"column":2}},"12":{"start":{"line":21,"column":2},"end":{"line":21,"column":48}},"13":{"start":{"line":22,"column":2},"end":{"line":22,"column":44}},"14":{"start":{"line":24,"column":2},"end":{"line":32,"column":4}},"15":{"start":{"line":25,"column":3},"end":{"line":25,"column":32}},"16":{"start":{"line":27,"column":3},"end":{"line":31,"column":4}},"17":{"start":{"line":28,"column":4},"end":{"line":30,"column":5}},"18":{"start":{"line":29,"column":5},"end":{"line":29,"column":23}},"19":{"start":{"line":34,"column":2},"end":{"line":34,"column":92}},"20":{"start":{"line":35,"column":2},"end":{"line":35,"column":27}},"21":{"start":{"line":38,"column":1},"end":{"line":74,"column":4}},"22":{"start":{"line":39,"column":2},"end":{"line":39,"column":45}},"23":{"start":{"line":40,"column":2},"end":{"line":40,"column":32}},"24":{"start":{"line":42,"column":2},"end":{"line":46,"column":3}},"25":{"start":{"line":43,"column":3},"end":{"line":43,"column":37}},"26":{"start":{"line":45,"column":3},"end":{"line":45,"column":23}},"27":{"start":{"line":48,"column":2},"end":{"line":48,"column":18}},"28":{"start":{"line":50,"column":2},"end":{"line":67,"column":3}},"29":{"start":{"line":51,"column":3},"end":{"line":55,"column":6}},"30":{"start":{"line":53,"column":5},"end":{"line":53,"column":21}},"31":{"start":{"line":57,"column":3},"end":{"line":61,"column":6}},"32":{"start":{"line":58,"column":4},"end":{"line":58,"column":37}},"33":{"start":{"line":60,"column":4},"end":{"line":60,"column":16}},"34":{"start":{"line":62,"column":3},"end":{"line":66,"column":6}},"35":{"start":{"line":63,"column":4},"end":{"line":63,"column":50}},"36":{"start":{"line":65,"column":4},"end":{"line":65,"column":16}},"37":{"start":{"line":69,"column":2},"end":{"line":73,"column":3}},"38":{"start":{"line":70,"column":3},"end":{"line":72,"column":12}},"39":{"start":{"line":71,"column":4},"end":{"line":71,"column":34}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":5},"end":{"line":2,"column":32}},{"start":{"line":2,"column":36},"end":{"line":2,"column":47}},{"start":{"line":2,"column":51},"end":{"line":2,"column":65}}]},"3":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},{"start":{"line":6,"column":1},"end":{"line":6,"column":1}}]},"4":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":17},"end":{"line":12,"column":33}},{"start":{"line":12,"column":37},"end":{"line":12,"column":46}}]},"5":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},{"start":{"line":14,"column":1},"end":{"line":14,"column":1}}]},"6":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":5},"end":{"line":14,"column":15}},{"start":{"line":14,"column":19},"end":{"line":14,"column":48}}]},"7":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},{"start":{"line":20,"column":1},"end":{"line":20,"column":1}}]},"8":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":3},"end":{"line":27,"column":3}},{"start":{"line":27,"column":3},"end":{"line":27,"column":3}}]},"9":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":2},"end":{"line":42,"column":2}},{"start":{"line":42,"column":2},"end":{"line":42,"column":2}}]}},"code":["(function(){","\tif (typeof self === 'undefined' || !self.Prism || !self.document) {","\t\treturn;","\t}","","\tif (!Prism.plugins.toolbar) {","\t\tconsole.warn('Copy to Clipboard plugin loaded before Toolbar plugin.');","","\t\treturn;","\t}","","\tvar Clipboard = window.Clipboard || undefined;","","\tif (!Clipboard && typeof require === 'function') {","\t\tClipboard = require('clipboard');","\t}","","\tvar callbacks = [];","","\tif (!Clipboard) {","\t\tvar script = document.createElement('script');","\t\tvar head = document.querySelector('head');","","\t\tscript.onload = function() {","\t\t\tClipboard = window.Clipboard;","","\t\t\tif (Clipboard) {","\t\t\t\twhile (callbacks.length) {","\t\t\t\t\tcallbacks.pop()();","\t\t\t\t}","\t\t\t}","\t\t};","","\t\tscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/1.5.8/clipboard.min.js';","\t\thead.appendChild(script);","\t}","","\tPrism.plugins.toolbar.registerButton('copy-to-clipboard', function (env) {","\t\tvar linkCopy = document.createElement('a');","\t\tlinkCopy.textContent = 'Copy';","","\t\tif (!Clipboard) {","\t\t\tcallbacks.push(registerClipboard);","\t\t} else {","\t\t\tregisterClipboard();","\t\t}","","\t\treturn linkCopy;","","\t\tfunction registerClipboard() {","\t\t\tvar clip = new Clipboard(linkCopy, {","\t\t\t\t'text': function () {","\t\t\t\t\treturn env.code;","\t\t\t\t}","\t\t\t});","","\t\t\tclip.on('success', function() {","\t\t\t\tlinkCopy.textContent = 'Copied!';","","\t\t\t\tresetText();","\t\t\t});","\t\t\tclip.on('error', function () {","\t\t\t\tlinkCopy.textContent = 'Press Ctrl+C to copy';","","\t\t\t\tresetText();","\t\t\t});","\t\t}","","\t\tfunction resetText() {","\t\t\tsetTimeout(function () {","\t\t\t\tlinkCopy.textContent = 'Copy';","\t\t\t}, 5000);","\t\t}","\t});","})();",""],"l":{"1":1,"2":1,"3":1,"6":0,"7":0,"9":0,"12":0,"14":0,"15":0,"18":0,"20":0,"21":0,"22":0,"24":0,"25":0,"27":0,"28":0,"29":0,"34":0,"35":0,"38":0,"39":0,"40":0,"42":0,"43":0,"45":0,"48":0,"50":1,"51":0,"53":0,"57":0,"58":0,"60":0,"62":0,"63":0,"65":0,"69":1,"70":0,"71":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/custom-class/prism-custom-class.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/custom-class/prism-custom-class.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0},"b":{"1":[0,1],"2":[1,0,1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":11}}},"2":{"name":"map","line":12,"loc":{"start":{"line":12,"column":6},"end":{"line":12,"column":23}}},"3":{"name":"prefix","line":15,"loc":{"start":{"line":15,"column":9},"end":{"line":15,"column":33}}},"4":{"name":"(anonymous_4)","line":20,"loc":{"start":{"line":20,"column":24},"end":{"line":20,"column":39}}},"5":{"name":"(anonymous_5)","line":24,"loc":{"start":{"line":24,"column":31},"end":{"line":24,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":29,"column":5}},"2":{"start":{"line":3,"column":0},"end":{"line":8,"column":1}},"3":{"start":{"line":7,"column":1},"end":{"line":7,"column":8}},"4":{"start":{"line":10,"column":0},"end":{"line":10,"column":17}},"5":{"start":{"line":11,"column":0},"end":{"line":18,"column":1}},"6":{"start":{"line":13,"column":2},"end":{"line":13,"column":24}},"7":{"start":{"line":16,"column":2},"end":{"line":16,"column":32}},"8":{"start":{"line":20,"column":0},"end":{"line":27,"column":3}},"9":{"start":{"line":21,"column":1},"end":{"line":23,"column":2}},"10":{"start":{"line":22,"column":2},"end":{"line":22,"column":9}},"11":{"start":{"line":24,"column":1},"end":{"line":26,"column":4}},"12":{"start":{"line":25,"column":2},"end":{"line":25,"column":67}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":0},"end":{"line":3,"column":0}},{"start":{"line":3,"column":0},"end":{"line":3,"column":0}}]},"2":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":2},"end":{"line":4,"column":29}},{"start":{"line":4,"column":33},"end":{"line":4,"column":44}},{"start":{"line":5,"column":2},"end":{"line":5,"column":31}},{"start":{"line":5,"column":35},"end":{"line":5,"column":48}}]},"3":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},{"start":{"line":21,"column":1},"end":{"line":21,"column":1}}]},"4":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":5},"end":{"line":21,"column":22}},{"start":{"line":21,"column":26},"end":{"line":21,"column":47}}]},"5":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":10},"end":{"line":25,"column":30}},{"start":{"line":25,"column":34},"end":{"line":25,"column":36}}]},"6":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":41},"end":{"line":25,"column":60}},{"start":{"line":25,"column":64},"end":{"line":25,"column":65}}]}},"code":["(function(){","","if (","\t(typeof self === 'undefined' || !self.Prism) &&","\t(typeof global === 'undefined' || !global.Prism)",") {","\treturn;","}","","var options = {};","Prism.plugins.customClass = {","\tmap: function map(cm) {","\t\toptions.classMap = cm;","\t},","\tprefix: function prefix(string) {","\t\toptions.prefixString = string;","\t}","}","","Prism.hooks.add('wrap', function (env) {","\tif (!options.classMap && !options.prefixString) {","\t\treturn;","\t}","\tenv.classes = env.classes.map(function(c) {","\t\treturn (options.prefixString || '') + (options.classMap[c] || c);","\t});","});","","})();",""],"l":{"1":1,"3":1,"7":0,"10":1,"11":1,"13":0,"16":0,"20":1,"21":0,"22":0,"24":0,"25":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/data-uri-highlight/prism-data-uri-highlight.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/data-uri-highlight/prism-data-uri-highlight.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":1,"9":1,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},"b":{"1":[0,1],"2":[1,0,1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":13}}},"2":{"name":"(anonymous_2)","line":10,"loc":{"start":{"line":10,"column":25},"end":{"line":10,"column":44}}},"3":{"name":"(anonymous_3)","line":43,"loc":{"start":{"line":43,"column":18},"end":{"line":43,"column":37}}},"4":{"name":"(anonymous_4)","line":49,"loc":{"start":{"line":49,"column":32},"end":{"line":49,"column":58}}},"5":{"name":"(anonymous_5)","line":79,"loc":{"start":{"line":79,"column":37},"end":{"line":79,"column":52}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":98,"column":5}},"2":{"start":{"line":3,"column":1},"end":{"line":8,"column":2}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":9}},"4":{"start":{"line":10,"column":1},"end":{"line":15,"column":3}},"5":{"start":{"line":11,"column":2},"end":{"line":13,"column":3}},"6":{"start":{"line":12,"column":3},"end":{"line":12,"column":52}},"7":{"start":{"line":14,"column":2},"end":{"line":14,"column":17}},"8":{"start":{"line":16,"column":1},"end":{"line":37,"column":3}},"9":{"start":{"line":40,"column":1},"end":{"line":40,"column":50}},"10":{"start":{"line":42,"column":1},"end":{"line":77,"column":3}},"11":{"start":{"line":45,"column":3},"end":{"line":47,"column":4}},"12":{"start":{"line":46,"column":4},"end":{"line":46,"column":11}},"13":{"start":{"line":49,"column":3},"end":{"line":74,"column":6}},"14":{"start":{"line":50,"column":4},"end":{"line":73,"column":5}},"15":{"start":{"line":51,"column":5},"end":{"line":55,"column":6}},"16":{"start":{"line":52,"column":6},"end":{"line":54,"column":8}},"17":{"start":{"line":57,"column":5},"end":{"line":57,"column":35}},"18":{"start":{"line":59,"column":5},"end":{"line":72,"column":6}},"19":{"start":{"line":60,"column":6},"end":{"line":62,"column":14}},"20":{"start":{"line":65,"column":6},"end":{"line":71,"column":7}},"21":{"start":{"line":66,"column":7},"end":{"line":68,"column":15}},"22":{"start":{"line":70,"column":7},"end":{"line":70,"column":40}},"23":{"start":{"line":75,"column":3},"end":{"line":75,"column":33}},"24":{"start":{"line":79,"column":1},"end":{"line":97,"column":4}},"25":{"start":{"line":81,"column":2},"end":{"line":94,"column":3}},"26":{"start":{"line":82,"column":3},"end":{"line":93,"column":4}},"27":{"start":{"line":83,"column":4},"end":{"line":92,"column":5}},"28":{"start":{"line":84,"column":5},"end":{"line":91,"column":6}},"29":{"start":{"line":85,"column":6},"end":{"line":85,"column":46}},"30":{"start":{"line":86,"column":6},"end":{"line":90,"column":7}},"31":{"start":{"line":87,"column":7},"end":{"line":89,"column":9}},"32":{"start":{"line":96,"column":2},"end":{"line":96,"column":61}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},{"start":{"line":3,"column":1},"end":{"line":3,"column":1}}]},"2":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":2},"end":{"line":4,"column":29}},{"start":{"line":4,"column":33},"end":{"line":4,"column":44}},{"start":{"line":5,"column":2},"end":{"line":5,"column":31}},{"start":{"line":5,"column":35},"end":{"line":5,"column":48}}]},"3":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":11,"column":2}},{"start":{"line":11,"column":2},"end":{"line":11,"column":2}}]},"4":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":3},"end":{"line":45,"column":3}},{"start":{"line":45,"column":3},"end":{"line":45,"column":3}}]},"5":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":7},"end":{"line":45,"column":15}},{"start":{"line":45,"column":19},"end":{"line":45,"column":38}}]},"6":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]},"7":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":37}},{"start":{"line":50,"column":41},"end":{"line":50,"column":73}}]},"8":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":5},"end":{"line":51,"column":5}},{"start":{"line":51,"column":5},"end":{"line":51,"column":5}}]},"9":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":18},"end":{"line":57,"column":28}},{"start":{"line":57,"column":32},"end":{"line":57,"column":34}}]},"10":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":5},"end":{"line":59,"column":5}},{"start":{"line":59,"column":5},"end":{"line":59,"column":5}}]},"11":{"line":60,"type":"cond-expr","locations":[{"start":{"line":60,"column":70},"end":{"line":60,"column":80}},{"start":{"line":60,"column":83},"end":{"line":60,"column":96}}]},"12":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":6},"end":{"line":65,"column":6}},{"start":{"line":65,"column":6},"end":{"line":65,"column":6}}]},"13":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":2},"end":{"line":81,"column":2}},{"start":{"line":81,"column":2},"end":{"line":81,"column":2}}]},"14":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":83,"column":4}},{"start":{"line":83,"column":4},"end":{"line":83,"column":4}}]},"15":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":5},"end":{"line":84,"column":5}},{"start":{"line":84,"column":5},"end":{"line":84,"column":5}}]},"16":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":9},"end":{"line":84,"column":34}},{"start":{"line":84,"column":38},"end":{"line":84,"column":78}}]},"17":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":6},"end":{"line":86,"column":6}},{"start":{"line":86,"column":6},"end":{"line":86,"column":6}}]}},"code":["(function () {","","\tif (","\t\ttypeof self !== 'undefined' && !self.Prism ||","\t\ttypeof global !== 'undefined' && !global.Prism","\t) {","\t\treturn;","\t}","","\tvar autoLinkerProcess = function (grammar) {","\t\tif (Prism.plugins.autolinker) {","\t\t\tPrism.plugins.autolinker.processGrammar(grammar);","\t\t}","\t\treturn grammar;","\t};","\tvar dataURI = {","\t\tpattern: /(.)\\bdata:[^\\/]+\\/[^,]+,(?:(?!\\1)[\\s\\S]|\\\\\\1)+(?=\\1)/,","\t\tlookbehind: true,","\t\tinside: {","\t\t\t'language-css': {","\t\t\t\tpattern: /(data:[^\\/]+\\/(?:[^+,]+\\+)?css,)[\\s\\S]+/,","\t\t\t\tlookbehind: true","\t\t\t},","\t\t\t'language-javascript': {","\t\t\t\tpattern: /(data:[^\\/]+\\/(?:[^+,]+\\+)?javascript,)[\\s\\S]+/,","\t\t\t\tlookbehind: true","\t\t\t},","\t\t\t'language-json': {","\t\t\t\tpattern: /(data:[^\\/]+\\/(?:[^+,]+\\+)?json,)[\\s\\S]+/,","\t\t\t\tlookbehind: true","\t\t\t},","\t\t\t'language-markup': {","\t\t\t\tpattern: /(data:[^\\/]+\\/(?:[^+,]+\\+)?(?:html|xml),)[\\s\\S]+/,","\t\t\t\tlookbehind: true","\t\t\t}","\t\t}","\t};","","\t// Tokens that may contain URLs","\tvar candidates = ['url', 'attr-value', 'string'];","","\tPrism.plugins.dataURIHighlight = {","\t\tprocessGrammar: function (grammar) {","\t\t\t// Abort if grammar has already been processed","\t\t\tif (!grammar || grammar['data-uri']) {","\t\t\t\treturn;","\t\t\t}","","\t\t\tPrism.languages.DFS(grammar, function (key, def, type) {","\t\t\t\tif (candidates.indexOf(type) > -1 && Prism.util.type(def) !== 'Array') {","\t\t\t\t\tif (!def.pattern) {","\t\t\t\t\t\tdef = this[key] = {","\t\t\t\t\t\t\tpattern: def","\t\t\t\t\t\t};","\t\t\t\t\t}","","\t\t\t\t\tdef.inside = def.inside || {};","","\t\t\t\t\tif (type == 'attr-value') {","\t\t\t\t\t\tPrism.languages.insertBefore('inside', def.inside['url-link'] ? 'url-link' : 'punctuation', {","\t\t\t\t\t\t\t'data-uri': dataURI","\t\t\t\t\t\t}, def);","\t\t\t\t\t}","\t\t\t\t\telse {","\t\t\t\t\t\tif (def.inside['url-link']) {","\t\t\t\t\t\t\tPrism.languages.insertBefore('inside', 'url-link', {","\t\t\t\t\t\t\t\t'data-uri': dataURI","\t\t\t\t\t\t\t}, def);","\t\t\t\t\t\t} else {","\t\t\t\t\t\t\tdef.inside['data-uri'] = dataURI;","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t}","\t\t\t});","\t\t\tgrammar['data-uri'] = dataURI;","\t\t}","\t};","","\tPrism.hooks.add('before-highlight', function (env) {","\t\t// Prepare the needed grammars for this code block","\t\tif (dataURI.pattern.test(env.code)) {","\t\t\tfor (var p in dataURI.inside) {","\t\t\t\tif (dataURI.inside.hasOwnProperty(p)) {","\t\t\t\t\tif (!dataURI.inside[p].inside && dataURI.inside[p].pattern.test(env.code)) {","\t\t\t\t\t\tvar lang = p.match(/^language-(.+)/)[1];","\t\t\t\t\t\tif (Prism.languages[lang]) {","\t\t\t\t\t\t\tdataURI.inside[p].inside = {","\t\t\t\t\t\t\t\trest: autoLinkerProcess(Prism.languages[lang])","\t\t\t\t\t\t\t};","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t}","","\t\tPrism.plugins.dataURIHighlight.processGrammar(env.grammar);","\t});","}());"],"l":{"1":1,"3":1,"7":0,"10":1,"11":0,"12":0,"14":0,"16":1,"40":1,"42":1,"45":0,"46":0,"49":0,"50":0,"51":0,"52":0,"57":0,"59":0,"60":0,"65":0,"66":0,"70":0,"75":0,"79":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"96":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/file-highlight/prism-file-highlight.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/file-highlight/prism-file-highlight.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0},"b":{"1":[1,0],"2":[1,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":13}}},"2":{"name":"(anonymous_2)","line":6,"loc":{"start":{"line":6,"column":28},"end":{"line":6,"column":39}}},"3":{"name":"(anonymous_3)","line":21,"loc":{"start":{"line":21,"column":82},"end":{"line":21,"column":97}}},"4":{"name":"(anonymous_4)","line":52,"loc":{"start":{"line":52,"column":29},"end":{"line":52,"column":41}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":77,"column":5}},"2":{"start":{"line":2,"column":1},"end":{"line":4,"column":2}},"3":{"start":{"line":3,"column":2},"end":{"line":3,"column":9}},"4":{"start":{"line":6,"column":1},"end":{"line":73,"column":3}},"5":{"start":{"line":8,"column":2},"end":{"line":18,"column":4}},"6":{"start":{"line":20,"column":2},"end":{"line":71,"column":3}},"7":{"start":{"line":21,"column":3},"end":{"line":70,"column":6}},"8":{"start":{"line":22,"column":4},"end":{"line":22,"column":43}},"9":{"start":{"line":24,"column":4},"end":{"line":24,"column":31}},"10":{"start":{"line":25,"column":4},"end":{"line":25,"column":48}},"11":{"start":{"line":26,"column":4},"end":{"line":28,"column":5}},"12":{"start":{"line":27,"column":5},"end":{"line":27,"column":32}},"13":{"start":{"line":30,"column":4},"end":{"line":32,"column":5}},"14":{"start":{"line":31,"column":5},"end":{"line":31,"column":57}},"15":{"start":{"line":34,"column":4},"end":{"line":37,"column":5}},"16":{"start":{"line":35,"column":5},"end":{"line":35,"column":58}},"17":{"start":{"line":36,"column":5},"end":{"line":36,"column":51}},"18":{"start":{"line":39,"column":4},"end":{"line":39,"column":46}},"19":{"start":{"line":40,"column":4},"end":{"line":40,"column":44}},"20":{"start":{"line":42,"column":4},"end":{"line":42,"column":25}},"21":{"start":{"line":44,"column":4},"end":{"line":44,"column":34}},"22":{"start":{"line":46,"column":4},"end":{"line":46,"column":26}},"23":{"start":{"line":48,"column":4},"end":{"line":48,"column":35}},"24":{"start":{"line":50,"column":4},"end":{"line":50,"column":31}},"25":{"start":{"line":52,"column":4},"end":{"line":67,"column":6}},"26":{"start":{"line":53,"column":5},"end":{"line":66,"column":6}},"27":{"start":{"line":55,"column":6},"end":{"line":65,"column":7}},"28":{"start":{"line":56,"column":7},"end":{"line":56,"column":43}},"29":{"start":{"line":58,"column":7},"end":{"line":58,"column":36}},"30":{"start":{"line":60,"column":11},"end":{"line":65,"column":7}},"31":{"start":{"line":61,"column":7},"end":{"line":61,"column":94}},"32":{"start":{"line":64,"column":7},"end":{"line":64,"column":69}},"33":{"start":{"line":69,"column":4},"end":{"line":69,"column":19}},"34":{"start":{"line":75,"column":1},"end":{"line":75,"column":73}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":5},"end":{"line":2,"column":32}},{"start":{"line":2,"column":36},"end":{"line":2,"column":47}},{"start":{"line":2,"column":51},"end":{"line":2,"column":65}},{"start":{"line":2,"column":69},"end":{"line":2,"column":92}}]},"3":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"4":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":11},"end":{"line":26,"column":17}},{"start":{"line":26,"column":21},"end":{"line":26,"column":49}}]},"5":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":4},"end":{"line":30,"column":4}},{"start":{"line":30,"column":4},"end":{"line":30,"column":4}}]},"6":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":17},"end":{"line":31,"column":42}},{"start":{"line":31,"column":46},"end":{"line":31,"column":52}}]},"7":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"8":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":22},"end":{"line":35,"column":43}},{"start":{"line":35,"column":47},"end":{"line":35,"column":53}}]},"9":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":16},"end":{"line":36,"column":37}},{"start":{"line":36,"column":41},"end":{"line":36,"column":50}}]},"10":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":5},"end":{"line":53,"column":5}},{"start":{"line":53,"column":5},"end":{"line":53,"column":5}}]},"11":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":6},"end":{"line":55,"column":6}},{"start":{"line":55,"column":6},"end":{"line":55,"column":6}}]},"12":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":10},"end":{"line":55,"column":26}},{"start":{"line":55,"column":30},"end":{"line":55,"column":46}}]},"13":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":11},"end":{"line":60,"column":11}},{"start":{"line":60,"column":11},"end":{"line":60,"column":11}}]}},"code":["(function () {","\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {","\t\treturn;","\t}","","\tself.Prism.fileHighlight = function() {","","\t\tvar Extensions = {","\t\t\t'js': 'javascript',","\t\t\t'py': 'python',","\t\t\t'rb': 'ruby',","\t\t\t'ps1': 'powershell',","\t\t\t'psm1': 'powershell',","\t\t\t'sh': 'bash',","\t\t\t'bat': 'batch',","\t\t\t'h': 'c',","\t\t\t'tex': 'latex'","\t\t};","","\t\tif(Array.prototype.forEach) { // Check to prevent error in IE8","\t\t\tArray.prototype.slice.call(document.querySelectorAll('pre[data-src]')).forEach(function (pre) {","\t\t\t\tvar src = pre.getAttribute('data-src');","","\t\t\t\tvar language, parent = pre;","\t\t\t\tvar lang = /\\blang(?:uage)?-(?!\\*)(\\w+)\\b/i;","\t\t\t\twhile (parent && !lang.test(parent.className)) {","\t\t\t\t\tparent = parent.parentNode;","\t\t\t\t}","","\t\t\t\tif (parent) {","\t\t\t\t\tlanguage = (pre.className.match(lang) || [, ''])[1];","\t\t\t\t}","","\t\t\t\tif (!language) {","\t\t\t\t\tvar extension = (src.match(/\\.(\\w+)$/) || [, ''])[1];","\t\t\t\t\tlanguage = Extensions[extension] || extension;","\t\t\t\t}","","\t\t\t\tvar code = document.createElement('code');","\t\t\t\tcode.className = 'language-' + language;","","\t\t\t\tpre.textContent = '';","","\t\t\t\tcode.textContent = 'Loading…';","","\t\t\t\tpre.appendChild(code);","","\t\t\t\tvar xhr = new XMLHttpRequest();","","\t\t\t\txhr.open('GET', src, true);","","\t\t\t\txhr.onreadystatechange = function () {","\t\t\t\t\tif (xhr.readyState == 4) {","","\t\t\t\t\t\tif (xhr.status < 400 && xhr.responseText) {","\t\t\t\t\t\t\tcode.textContent = xhr.responseText;","","\t\t\t\t\t\t\tPrism.highlightElement(code);","\t\t\t\t\t\t}","\t\t\t\t\t\telse if (xhr.status >= 400) {","\t\t\t\t\t\t\tcode.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;","\t\t\t\t\t\t}","\t\t\t\t\t\telse {","\t\t\t\t\t\t\tcode.textContent = '✖ Error: File does not exist or is empty';","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t};","","\t\t\t\txhr.send(null);","\t\t\t});","\t\t}","","\t};","","\tdocument.addEventListener('DOMContentLoaded', self.Prism.fileHighlight);","","})();",""],"l":{"1":1,"2":1,"3":1,"6":0,"8":0,"20":0,"21":0,"22":0,"24":0,"25":0,"26":0,"27":0,"30":0,"31":0,"34":0,"35":0,"36":0,"39":0,"40":0,"42":0,"44":0,"46":0,"48":0,"50":0,"52":0,"53":0,"55":0,"56":0,"58":0,"60":0,"61":0,"64":0,"69":0,"75":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/highlight-keywords/prism-highlight-keywords.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/highlight-keywords/prism-highlight-keywords.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0},"b":{"1":[0,1],"2":[1,0,1,1],"3":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":11}}},"2":{"name":"(anonymous_2)","line":10,"loc":{"start":{"line":10,"column":24},"end":{"line":10,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":17,"column":5}},"2":{"start":{"line":3,"column":0},"end":{"line":8,"column":1}},"3":{"start":{"line":7,"column":1},"end":{"line":7,"column":8}},"4":{"start":{"line":10,"column":0},"end":{"line":15,"column":3}},"5":{"start":{"line":11,"column":1},"end":{"line":13,"column":2}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":9}},"7":{"start":{"line":14,"column":1},"end":{"line":14,"column":44}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":0},"end":{"line":3,"column":0}},{"start":{"line":3,"column":0},"end":{"line":3,"column":0}}]},"2":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":1},"end":{"line":4,"column":28}},{"start":{"line":4,"column":32},"end":{"line":4,"column":43}},{"start":{"line":5,"column":1},"end":{"line":5,"column":30}},{"start":{"line":5,"column":34},"end":{"line":5,"column":47}}]},"3":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},{"start":{"line":11,"column":1},"end":{"line":11,"column":1}}]}},"code":["(function(){","","if (","\ttypeof self !== 'undefined' && !self.Prism ||","\ttypeof global !== 'undefined' && !global.Prism",") {","\treturn;","}","","Prism.hooks.add('wrap', function(env) {","\tif (env.type !== \"keyword\") {","\t\treturn;","\t}","\tenv.classes.push('keyword-' + env.content);","});","","})();",""],"l":{"1":1,"3":1,"7":0,"10":1,"11":0,"12":0,"14":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/ie8/prism-ie8.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/ie8/prism-ie8.js","s":{"1":2,"2":2,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":11}}},"2":{"name":"(anonymous_2)","line":10,"loc":{"start":{"line":10,"column":25},"end":{"line":10,"column":37}}},"3":{"name":"(anonymous_3)","line":18,"loc":{"start":{"line":18,"column":7},"end":{"line":18,"column":18}}},"4":{"name":"(anonymous_4)","line":21,"loc":{"start":{"line":21,"column":7},"end":{"line":21,"column":22}}},"5":{"name":"(anonymous_5)","line":37,"loc":{"start":{"line":37,"column":36},"end":{"line":37,"column":50}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":42,"column":5}},"2":{"start":{"line":3,"column":0},"end":{"line":5,"column":1}},"3":{"start":{"line":4,"column":1},"end":{"line":4,"column":8}},"4":{"start":{"line":7,"column":0},"end":{"line":7,"column":45}},"5":{"start":{"line":9,"column":0},"end":{"line":13,"column":1}},"6":{"start":{"line":10,"column":1},"end":{"line":12,"column":3}},"7":{"start":{"line":11,"column":2},"end":{"line":11,"column":56}},"8":{"start":{"line":16,"column":0},"end":{"line":25,"column":1}},"9":{"start":{"line":17,"column":1},"end":{"line":24,"column":4}},"10":{"start":{"line":19,"column":3},"end":{"line":19,"column":25}},"11":{"start":{"line":22,"column":3},"end":{"line":22,"column":25}},"12":{"start":{"line":28,"column":0},"end":{"line":30,"column":1}},"13":{"start":{"line":29,"column":1},"end":{"line":29,"column":36}},"14":{"start":{"line":33,"column":0},"end":{"line":33,"column":25}},"15":{"start":{"line":35,"column":0},"end":{"line":40,"column":1}},"16":{"start":{"line":37,"column":1},"end":{"line":39,"column":4}},"17":{"start":{"line":38,"column":2},"end":{"line":38,"column":72}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":0},"end":{"line":3,"column":0}},{"start":{"line":3,"column":0},"end":{"line":3,"column":0}}]},"2":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":0},"end":{"line":9,"column":0}},{"start":{"line":9,"column":0},"end":{"line":9,"column":0}}]},"3":{"line":16,"type":"if","locations":[{"start":{"line":16,"column":0},"end":{"line":16,"column":0}},{"start":{"line":16,"column":0},"end":{"line":16,"column":0}}]},"4":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":4},"end":{"line":16,"column":29}},{"start":{"line":16,"column":34},"end":{"line":16,"column":54}},{"start":{"line":16,"column":59},"end":{"line":16,"column":80}}]},"5":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":0},"end":{"line":28,"column":0}},{"start":{"line":28,"column":0},"end":{"line":28,"column":0}}]},"6":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":4},"end":{"line":28,"column":30}},{"start":{"line":28,"column":34},"end":{"line":28,"column":56}}]},"7":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":0},"end":{"line":35,"column":0}},{"start":{"line":35,"column":0},"end":{"line":35,"column":0}}]}},"code":["(function(){","","if (!window.Prism) {","\treturn;","}","","var dummy = document.createElement('header');","","if (!String.prototype.trim) {","\tString.prototype.trim = function () {","\t\treturn this.replace(/^\\s+/g, '').replace(/\\s+$/g, '');","\t};","}","","// textContent polyfill","if (!('textContent' in dummy) && ('innerText' in dummy) && Object.defineProperty) {","\tObject.defineProperty(Element.prototype, 'textContent', {","\t\tget: function() {","\t\t\treturn this.innerText;","\t\t},","\t\tset: function(text) {","\t\t\tthis.innerText = text;","\t\t}","\t});","}","","// IE8 doesn't have DOMContentLoaded","if (!document.addEventListener && 'textContent' in dummy) {","\tsetTimeout(Prism.highlightAll, 10);","}","","// Test if innerHTML line break bug is present","dummy.innerHTML = '\\r\\n';","","if (dummy.textContent.indexOf('\\n') === -1) {","\t// IE8 innerHTML bug: Discards line breaks","\tPrism.hooks.add('after-highlight', function(env) {","\t\tenv.element.innerHTML = env.highlightedCode.replace(/\\r?\\n/g, '<br>');","\t});","}","","})();"],"l":{"1":2,"3":2,"4":0,"7":0,"9":0,"10":0,"11":0,"16":0,"17":0,"19":0,"22":0,"28":0,"29":0,"33":0,"35":0,"37":0,"38":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/jsonp-highlight/prism-jsonp-highlight.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/jsonp-highlight/prism-jsonp-highlight.js","s":{"1":2,"2":2,"3":0,"4":0,"5":1,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0},"b":{"1":[0,0],"2":[2,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0]},"f":{"1":2,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":12}}},"2":{"name":"registerAdapter","line":5,"loc":{"start":{"line":5,"column":1},"end":{"line":5,"column":35}}},"3":{"name":"getAdapter","line":10,"loc":{"start":{"line":10,"column":1},"end":{"line":10,"column":30}}},"4":{"name":"(anonymous_4)","line":12,"loc":{"start":{"line":12,"column":26},"end":{"line":12,"column":39}}},"5":{"name":"(anonymous_5)","line":15,"loc":{"start":{"line":15,"column":26},"end":{"line":15,"column":39}}},"6":{"name":"removeAdapter","line":19,"loc":{"start":{"line":19,"column":1},"end":{"line":19,"column":33}}},"7":{"name":"github","line":35,"loc":{"start":{"line":35,"column":17},"end":{"line":35,"column":42}}},"8":{"name":"gist","line":48,"loc":{"start":{"line":48,"column":17},"end":{"line":48,"column":40}}},"9":{"name":"bitbucket","line":76,"loc":{"start":{"line":76,"column":17},"end":{"line":76,"column":45}}},"10":{"name":"highlight","line":85,"loc":{"start":{"line":85,"column":1},"end":{"line":85,"column":22}}},"11":{"name":"(anonymous_11)","line":86,"loc":{"start":{"line":86,"column":83},"end":{"line":86,"column":97}}},"12":{"name":"(anonymous_12)","line":111,"loc":{"start":{"line":111,"column":28},"end":{"line":111,"column":39}}},"13":{"name":"(anonymous_13)","line":120,"loc":{"start":{"line":120,"column":16},"end":{"line":120,"column":30}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":151,"column":5}},"2":{"start":{"line":2,"column":1},"end":{"line":2,"column":88}},"3":{"start":{"line":2,"column":81},"end":{"line":2,"column":88}},"4":{"start":{"line":4,"column":1},"end":{"line":4,"column":19}},"5":{"start":{"line":5,"column":1},"end":{"line":9,"column":2}},"6":{"start":{"line":6,"column":2},"end":{"line":8,"column":3}},"7":{"start":{"line":7,"column":3},"end":{"line":7,"column":26}},"8":{"start":{"line":10,"column":1},"end":{"line":18,"column":2}},"9":{"start":{"line":11,"column":2},"end":{"line":16,"column":3}},"10":{"start":{"line":12,"column":3},"end":{"line":12,"column":88}},"11":{"start":{"line":12,"column":41},"end":{"line":12,"column":82}},"12":{"start":{"line":14,"column":7},"end":{"line":16,"column":3}},"13":{"start":{"line":15,"column":3},"end":{"line":15,"column":73}},"14":{"start":{"line":15,"column":41},"end":{"line":15,"column":67}},"15":{"start":{"line":17,"column":2},"end":{"line":17,"column":14}},"16":{"start":{"line":19,"column":1},"end":{"line":28,"column":2}},"17":{"start":{"line":20,"column":2},"end":{"line":21,"column":33}},"18":{"start":{"line":21,"column":3},"end":{"line":21,"column":33}},"19":{"start":{"line":22,"column":2},"end":{"line":27,"column":3}},"20":{"start":{"line":23,"column":3},"end":{"line":23,"column":41}},"21":{"start":{"line":24,"column":3},"end":{"line":26,"column":4}},"22":{"start":{"line":25,"column":4},"end":{"line":25,"column":29}},"23":{"start":{"line":30,"column":1},"end":{"line":34,"column":3}},"24":{"start":{"line":35,"column":1},"end":{"line":47,"column":4}},"25":{"start":{"line":36,"column":2},"end":{"line":45,"column":3}},"26":{"start":{"line":37,"column":3},"end":{"line":44,"column":4}},"27":{"start":{"line":38,"column":4},"end":{"line":38,"column":63}},"28":{"start":{"line":40,"column":8},"end":{"line":44,"column":4}},"29":{"start":{"line":41,"column":4},"end":{"line":43,"column":43}},"30":{"start":{"line":46,"column":2},"end":{"line":46,"column":14}},"31":{"start":{"line":48,"column":1},"end":{"line":75,"column":4}},"32":{"start":{"line":49,"column":2},"end":{"line":73,"column":3}},"33":{"start":{"line":50,"column":3},"end":{"line":72,"column":4}},"34":{"start":{"line":51,"column":4},"end":{"line":51,"column":63}},"35":{"start":{"line":54,"column":4},"end":{"line":54,"column":52}},"36":{"start":{"line":55,"column":4},"end":{"line":65,"column":5}},"37":{"start":{"line":59,"column":5},"end":{"line":64,"column":6}},"38":{"start":{"line":60,"column":6},"end":{"line":63,"column":7}},"39":{"start":{"line":61,"column":7},"end":{"line":61,"column":22}},"40":{"start":{"line":62,"column":7},"end":{"line":62,"column":13}},"41":{"start":{"line":66,"column":4},"end":{"line":71,"column":5}},"42":{"start":{"line":67,"column":5},"end":{"line":67,"column":45}},"43":{"start":{"line":70,"column":5},"end":{"line":70,"column":62}},"44":{"start":{"line":74,"column":2},"end":{"line":74,"column":14}},"45":{"start":{"line":76,"column":1},"end":{"line":80,"column":4}},"46":{"start":{"line":77,"column":2},"end":{"line":79,"column":10}},"47":{"start":{"line":82,"column":1},"end":{"line":83,"column":26}},"48":{"start":{"line":85,"column":1},"end":{"line":148,"column":2}},"49":{"start":{"line":86,"column":2},"end":{"line":147,"column":5}},"50":{"start":{"line":87,"column":3},"end":{"line":87,"column":24}},"51":{"start":{"line":89,"column":3},"end":{"line":89,"column":45}},"52":{"start":{"line":90,"column":3},"end":{"line":90,"column":30}},"53":{"start":{"line":91,"column":3},"end":{"line":91,"column":25}},"54":{"start":{"line":93,"column":3},"end":{"line":93,"column":52}},"55":{"start":{"line":94,"column":3},"end":{"line":94,"column":22}},"56":{"start":{"line":95,"column":3},"end":{"line":103,"column":4}},"57":{"start":{"line":96,"column":4},"end":{"line":102,"column":5}},"58":{"start":{"line":97,"column":5},"end":{"line":97,"column":33}},"59":{"start":{"line":100,"column":5},"end":{"line":100,"column":83}},"60":{"start":{"line":101,"column":5},"end":{"line":101,"column":12}},"61":{"start":{"line":105,"column":3},"end":{"line":105,"column":41}},"62":{"start":{"line":107,"column":3},"end":{"line":107,"column":41}},"63":{"start":{"line":108,"column":3},"end":{"line":108,"column":55}},"64":{"start":{"line":109,"column":3},"end":{"line":109,"column":107}},"65":{"start":{"line":111,"column":3},"end":{"line":115,"column":12}},"66":{"start":{"line":113,"column":4},"end":{"line":114,"column":56}},"67":{"start":{"line":114,"column":5},"end":{"line":114,"column":56}},"68":{"start":{"line":117,"column":3},"end":{"line":117,"column":49}},"69":{"start":{"line":118,"column":3},"end":{"line":118,"column":25}},"70":{"start":{"line":120,"column":3},"end":{"line":144,"column":5}},"71":{"start":{"line":121,"column":4},"end":{"line":121,"column":38}},"72":{"start":{"line":122,"column":4},"end":{"line":122,"column":26}},"73":{"start":{"line":123,"column":4},"end":{"line":123,"column":22}},"74":{"start":{"line":125,"column":4},"end":{"line":125,"column":18}},"75":{"start":{"line":127,"column":4},"end":{"line":135,"column":5}},"76":{"start":{"line":128,"column":5},"end":{"line":128,"column":30}},"77":{"start":{"line":131,"column":5},"end":{"line":134,"column":6}},"78":{"start":{"line":132,"column":6},"end":{"line":132,"column":35}},"79":{"start":{"line":133,"column":6},"end":{"line":133,"column":33}},"80":{"start":{"line":133,"column":27},"end":{"line":133,"column":33}},"81":{"start":{"line":137,"column":4},"end":{"line":143,"column":5}},"82":{"start":{"line":138,"column":5},"end":{"line":138,"column":88}},"83":{"start":{"line":141,"column":5},"end":{"line":141,"column":29}},"84":{"start":{"line":142,"column":5},"end":{"line":142,"column":34}},"85":{"start":{"line":146,"column":3},"end":{"line":146,"column":37}},"86":{"start":{"line":150,"column":1},"end":{"line":150,"column":13}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":6},"end":{"line":2,"column":17}},{"start":{"line":2,"column":21},"end":{"line":2,"column":35}},{"start":{"line":2,"column":39},"end":{"line":2,"column":65}},{"start":{"line":2,"column":69},"end":{"line":2,"column":79}}]},"3":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":2},"end":{"line":6,"column":2}},{"start":{"line":6,"column":2},"end":{"line":6,"column":2}}]},"4":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":35}},{"start":{"line":6,"column":39},"end":{"line":6,"column":59}}]},"5":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":11,"column":2}},{"start":{"line":11,"column":2},"end":{"line":11,"column":2}}]},"6":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":7},"end":{"line":14,"column":7}},{"start":{"line":14,"column":7},"end":{"line":14,"column":7}}]},"7":{"line":14,"type":"binary-expr","locations":[{"start":{"line":14,"column":11},"end":{"line":14,"column":38}},{"start":{"line":14,"column":42},"end":{"line":14,"column":60}}]},"8":{"line":20,"type":"if","locations":[{"start":{"line":20,"column":2},"end":{"line":20,"column":2}},{"start":{"line":20,"column":2},"end":{"line":20,"column":2}}]},"9":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":2},"end":{"line":22,"column":2}},{"start":{"line":22,"column":2},"end":{"line":22,"column":2}}]},"10":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":3},"end":{"line":24,"column":3}},{"start":{"line":24,"column":3},"end":{"line":24,"column":3}}]},"11":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"12":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":7},"end":{"line":36,"column":10}},{"start":{"line":36,"column":14},"end":{"line":36,"column":22}},{"start":{"line":36,"column":26},"end":{"line":36,"column":34}}]},"13":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":3},"end":{"line":37,"column":3}},{"start":{"line":37,"column":3},"end":{"line":37,"column":3}}]},"14":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":8},"end":{"line":37,"column":23}},{"start":{"line":37,"column":27},"end":{"line":37,"column":49}}]},"15":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":25},"end":{"line":38,"column":41}},{"start":{"line":38,"column":45},"end":{"line":38,"column":60}}]},"16":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":8},"end":{"line":40,"column":8}},{"start":{"line":40,"column":8},"end":{"line":40,"column":8}}]},"17":{"line":41,"type":"cond-expr","locations":[{"start":{"line":42,"column":7},"end":{"line":42,"column":48}},{"start":{"line":43,"column":7},"end":{"line":43,"column":42}}]},"18":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":2},"end":{"line":49,"column":2}},{"start":{"line":49,"column":2},"end":{"line":49,"column":2}}]},"19":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":7},"end":{"line":49,"column":10}},{"start":{"line":49,"column":14},"end":{"line":49,"column":22}},{"start":{"line":49,"column":26},"end":{"line":49,"column":34}},{"start":{"line":49,"column":38},"end":{"line":49,"column":52}}]},"20":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":3},"end":{"line":50,"column":3}},{"start":{"line":50,"column":3},"end":{"line":50,"column":3}}]},"21":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":23}},{"start":{"line":50,"column":27},"end":{"line":50,"column":49}}]},"22":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":25},"end":{"line":51,"column":41}},{"start":{"line":51,"column":45},"end":{"line":51,"column":60}}]},"23":{"line":55,"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":55,"column":4}},{"start":{"line":55,"column":4},"end":{"line":55,"column":4}}]},"24":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":6},"end":{"line":60,"column":6}},{"start":{"line":60,"column":6},"end":{"line":60,"column":6}}]},"25":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":4},"end":{"line":66,"column":4}},{"start":{"line":66,"column":4},"end":{"line":66,"column":4}}]},"26":{"line":77,"type":"cond-expr","locations":[{"start":{"line":78,"column":5},"end":{"line":78,"column":13}},{"start":{"line":79,"column":5},"end":{"line":79,"column":9}}]},"27":{"line":77,"type":"binary-expr","locations":[{"start":{"line":77,"column":9},"end":{"line":77,"column":12}},{"start":{"line":77,"column":16},"end":{"line":77,"column":24}},{"start":{"line":77,"column":28},"end":{"line":77,"column":57}}]},"28":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":3},"end":{"line":95,"column":3}},{"start":{"line":95,"column":3},"end":{"line":95,"column":3}}]},"29":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":4},"end":{"line":96,"column":4}},{"start":{"line":96,"column":4},"end":{"line":96,"column":4}}]},"30":{"line":109,"type":"cond-expr","locations":[{"start":{"line":109,"column":30},"end":{"line":109,"column":33}},{"start":{"line":109,"column":36},"end":{"line":109,"column":39}}]},"31":{"line":109,"type":"binary-expr","locations":[{"start":{"line":109,"column":46},"end":{"line":109,"column":79}},{"start":{"line":109,"column":83},"end":{"line":109,"column":93}}]},"32":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":113,"column":4}},{"start":{"line":113,"column":4},"end":{"line":113,"column":4}}]},"33":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":127,"column":4}},{"start":{"line":127,"column":4},"end":{"line":127,"column":4}}]},"34":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":6},"end":{"line":133,"column":6}},{"start":{"line":133,"column":6},"end":{"line":133,"column":6}}]},"35":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":4},"end":{"line":137,"column":4}},{"start":{"line":137,"column":4},"end":{"line":137,"column":4}}]}},"code":["(function() {","\tif ( !self.Prism || !self.document || !document.querySelectorAll || ![].filter) return;","","\tvar adapters = [];","\tfunction registerAdapter(adapter) {","\t\tif (typeof adapter === \"function\" && !getAdapter(adapter)) {","\t\t\tadapters.push(adapter);","\t\t}","\t}","\tfunction getAdapter(adapter) {","\t\tif (typeof adapter === \"function\") {","\t\t\treturn adapters.filter(function(fn) { return fn.valueOf() === adapter.valueOf()})[0];","\t\t}","\t\telse if (typeof adapter === \"string\" && adapter.length > 0) {","\t\t\treturn adapters.filter(function(fn) { return fn.name === adapter})[0];","\t\t}","\t\treturn null;","\t}","\tfunction removeAdapter(adapter) {","\t\tif (typeof adapter === \"string\")","\t\t\tadapter = getAdapter(adapter);","\t\tif (typeof adapter === \"function\") {","\t\t\tvar index = adapters.indexOf(adapter);","\t\t\tif (index >=0) {","\t\t\t\tadapters.splice(index,1);","\t\t\t}","\t\t}","\t}","","\tPrism.plugins.jsonphighlight = {","\t\tregisterAdapter: registerAdapter,","\t\tremoveAdapter: removeAdapter,","\t\thighlight: highlight","\t};","\tregisterAdapter(function github(rsp, el) {","\t\tif ( rsp && rsp.meta && rsp.data ) {","\t\t\tif ( rsp.meta.status && rsp.meta.status >= 400 ) {","\t\t\t\treturn \"Error: \" + ( rsp.data.message || rsp.meta.status );","\t\t\t}","\t\t\telse if ( typeof(rsp.data.content) === \"string\" ) {","\t\t\t\treturn typeof(atob) === \"function\"","\t\t\t\t\t? atob(rsp.data.content.replace(/\\s/g, \"\"))","\t\t\t\t\t: \"Your browser cannot decode base64\";","\t\t\t}","\t\t}","\t\treturn null;","\t});","\tregisterAdapter(function gist(rsp, el) {","\t\tif ( rsp && rsp.meta && rsp.data && rsp.data.files ) {","\t\t\tif ( rsp.meta.status && rsp.meta.status >= 400 ) {","\t\t\t\treturn \"Error: \" + ( rsp.data.message || rsp.meta.status );","\t\t\t}","\t\t\telse {","\t\t\t\tvar filename = el.getAttribute(\"data-filename\");","\t\t\t\tif (filename == null) {","\t\t\t\t\t// Maybe in the future we can somehow render all files","\t\t\t\t\t// But the standard <script> include for gists does that nicely already,","\t\t\t\t\t// so that might be getting beyond the scope of this plugin","\t\t\t\t\tfor (var key in rsp.data.files) {","\t\t\t\t\t\tif (rsp.data.files.hasOwnProperty(key)) {","\t\t\t\t\t\t\tfilename = key;","\t\t\t\t\t\t\tbreak;","\t\t\t\t\t\t}","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\tif (rsp.data.files[filename] !== undefined) {","\t\t\t\t\treturn rsp.data.files[filename].content;","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\treturn \"Error: unknown or missing gist file \" + filename;","\t\t\t\t}","\t\t\t}","\t\t}","\t\treturn null;","\t});","\tregisterAdapter(function bitbucket(rsp, el) {","\t\treturn rsp && rsp.node && typeof(rsp.data) === \"string\"","\t\t\t? rsp.data","\t\t\t: null;","\t});","","\tvar jsonpcb = 0,","\t    loadstr = \"Loading…\";","","\tfunction highlight() {","\t\tArray.prototype.slice.call(document.querySelectorAll(\"pre[data-jsonp]\")).forEach(function(pre) {","\t\t\tpre.textContent = \"\";","","\t\t\tvar code = document.createElement(\"code\");","\t\t\tcode.textContent = loadstr;","\t\t\tpre.appendChild(code);","","\t\t\tvar adapterfn = pre.getAttribute(\"data-adapter\");","\t\t\tvar adapter = null;","\t\t\tif ( adapterfn ) {","\t\t\t\tif ( typeof(window[adapterfn]) === \"function\" ) {","\t\t\t\t\tadapter = window[adapterfn];","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\tcode.textContent = \"JSONP adapter function '\" + adapterfn + \"' doesn't exist\";","\t\t\t\t\treturn;","\t\t\t\t}","\t\t\t}","","\t\t\tvar cb = \"prismjsonp\" + ( jsonpcb++ );","\t\t\t","\t\t\tvar uri = document.createElement(\"a\");","\t\t\tvar src = uri.href = pre.getAttribute(\"data-jsonp\");","\t\t\turi.href += ( uri.search ? \"&\" : \"?\" ) + ( pre.getAttribute(\"data-callback\") || \"callback\" ) + \"=\" + cb;","","\t\t\tvar timeout = setTimeout(function() {","\t\t\t\t// we could clean up window[cb], but if the request finally succeeds, keeping it around is a good thing","\t\t\t\tif ( code.textContent === loadstr )","\t\t\t\t\tcode.textContent = \"Timeout loading '\" + src + \"'\";","\t\t\t}, 5000);","\t\t\t","\t\t\tvar script = document.createElement(\"script\");","\t\t\tscript.src = uri.href;","","\t\t\twindow[cb] = function(rsp) {","\t\t\t\tdocument.head.removeChild(script);","\t\t\t\tclearTimeout(timeout);","\t\t\t\tdelete window[cb];","","\t\t\t\tvar data = \"\";","\t\t\t\t","\t\t\t\tif ( adapter ) {","\t\t\t\t\tdata = adapter(rsp, pre);","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\tfor ( var p in adapters ) {","\t\t\t\t\t\tdata = adapters[p](rsp, pre);","\t\t\t\t\t\tif ( data !== null ) break;","\t\t\t\t\t}","\t\t\t\t}","","\t\t\t\tif (data === null) {","\t\t\t\t\tcode.textContent = \"Cannot parse response (perhaps you need an adapter function?)\";","\t\t\t\t}","\t\t\t\telse {","\t\t\t\t\tcode.textContent = data;","\t\t\t\t\tPrism.highlightElement(code);","\t\t\t\t}","\t\t\t};","","\t\t\tdocument.head.appendChild(script);","\t\t});","\t}","","\thighlight();","})();"],"l":{"1":2,"2":2,"4":0,"5":1,"6":0,"7":0,"10":1,"11":0,"12":0,"14":0,"15":0,"17":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"30":0,"35":0,"36":0,"37":0,"38":0,"40":0,"41":0,"46":0,"48":0,"49":0,"50":0,"51":0,"54":0,"55":0,"59":0,"60":0,"61":0,"62":0,"66":0,"67":0,"70":0,"74":0,"76":0,"77":0,"82":0,"85":1,"86":0,"87":0,"89":0,"90":0,"91":0,"93":0,"94":0,"95":0,"96":0,"97":0,"100":0,"101":0,"105":0,"107":0,"108":0,"109":0,"111":0,"113":0,"114":0,"117":0,"118":0,"120":0,"121":0,"122":0,"123":0,"125":0,"127":0,"128":0,"131":0,"132":0,"133":0,"137":0,"138":0,"141":0,"142":0,"146":0,"150":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/keep-markup/prism-keep-markup.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/keep-markup/prism-keep-markup.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0},"b":{"1":[1,0],"2":[1,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":13}}},"2":{"name":"(anonymous_2)","line":9,"loc":{"start":{"line":9,"column":37},"end":{"line":9,"column":52}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":10},"end":{"line":16,"column":35}}},"4":{"name":"(anonymous_4)","line":44,"loc":{"start":{"line":44,"column":36},"end":{"line":44,"column":51}}},"5":{"name":"(anonymous_5)","line":47,"loc":{"start":{"line":47,"column":14},"end":{"line":47,"column":40}}},"6":{"name":"(anonymous_6)","line":89,"loc":{"start":{"line":89,"column":26},"end":{"line":89,"column":42}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":97,"column":5}},"2":{"start":{"line":3,"column":1},"end":{"line":5,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":9}},"4":{"start":{"line":7,"column":1},"end":{"line":7,"column":33}},"5":{"start":{"line":9,"column":1},"end":{"line":42,"column":4}},"6":{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},"7":{"start":{"line":11,"column":3},"end":{"line":11,"column":10}},"8":{"start":{"line":14,"column":2},"end":{"line":14,"column":14}},"9":{"start":{"line":15,"column":2},"end":{"line":15,"column":16}},"10":{"start":{"line":16,"column":2},"end":{"line":35,"column":4}},"11":{"start":{"line":17,"column":3},"end":{"line":17,"column":14}},"12":{"start":{"line":18,"column":3},"end":{"line":23,"column":4}},"13":{"start":{"line":20,"column":4},"end":{"line":20,"column":35}},"14":{"start":{"line":21,"column":4},"end":{"line":21,"column":20}},"15":{"start":{"line":22,"column":4},"end":{"line":22,"column":17}},"16":{"start":{"line":24,"column":3},"end":{"line":31,"column":4}},"17":{"start":{"line":25,"column":4},"end":{"line":25,"column":34}},"18":{"start":{"line":26,"column":4},"end":{"line":30,"column":5}},"19":{"start":{"line":27,"column":5},"end":{"line":27,"column":14}},"20":{"start":{"line":28,"column":11},"end":{"line":30,"column":5}},"21":{"start":{"line":29,"column":5},"end":{"line":29,"column":30}},"22":{"start":{"line":32,"column":3},"end":{"line":34,"column":4}},"23":{"start":{"line":33,"column":4},"end":{"line":33,"column":21}},"24":{"start":{"line":36,"column":2},"end":{"line":36,"column":23}},"25":{"start":{"line":38,"column":2},"end":{"line":41,"column":3}},"26":{"start":{"line":40,"column":3},"end":{"line":40,"column":25}},"27":{"start":{"line":44,"column":1},"end":{"line":96,"column":4}},"28":{"start":{"line":45,"column":2},"end":{"line":95,"column":3}},"29":{"start":{"line":47,"column":3},"end":{"line":86,"column":5}},"30":{"start":{"line":48,"column":4},"end":{"line":84,"column":5}},"31":{"start":{"line":50,"column":5},"end":{"line":50,"column":35}},"32":{"start":{"line":52,"column":5},"end":{"line":70,"column":6}},"33":{"start":{"line":53,"column":6},"end":{"line":55,"column":7}},"34":{"start":{"line":54,"column":7},"end":{"line":54,"column":20}},"35":{"start":{"line":57,"column":12},"end":{"line":70,"column":6}},"36":{"start":{"line":58,"column":6},"end":{"line":62,"column":7}},"37":{"start":{"line":60,"column":7},"end":{"line":60,"column":35}},"38":{"start":{"line":61,"column":7},"end":{"line":61,"column":71}},"39":{"start":{"line":63,"column":6},"end":{"line":67,"column":7}},"40":{"start":{"line":65,"column":7},"end":{"line":65,"column":33}},"41":{"start":{"line":66,"column":7},"end":{"line":66,"column":70}},"42":{"start":{"line":69,"column":6},"end":{"line":69,"column":41}},"43":{"start":{"line":72,"column":5},"end":{"line":83,"column":6}},"44":{"start":{"line":74,"column":6},"end":{"line":74,"column":41}},"45":{"start":{"line":75,"column":6},"end":{"line":75,"column":66}},"46":{"start":{"line":76,"column":6},"end":{"line":76,"column":60}},"47":{"start":{"line":77,"column":6},"end":{"line":77,"column":64}},"48":{"start":{"line":78,"column":6},"end":{"line":78,"column":45}},"49":{"start":{"line":79,"column":6},"end":{"line":79,"column":21}},"50":{"start":{"line":82,"column":6},"end":{"line":82,"column":19}},"51":{"start":{"line":85,"column":4},"end":{"line":85,"column":16}},"52":{"start":{"line":89,"column":3},"end":{"line":94,"column":6}},"53":{"start":{"line":90,"column":4},"end":{"line":93,"column":7}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},{"start":{"line":3,"column":1},"end":{"line":3,"column":1}}]},"2":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":5},"end":{"line":3,"column":32}},{"start":{"line":3,"column":36},"end":{"line":3,"column":47}},{"start":{"line":3,"column":51},"end":{"line":3,"column":65}},{"start":{"line":3,"column":69},"end":{"line":3,"column":90}}]},"3":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":2},"end":{"line":10,"column":2}},{"start":{"line":10,"column":2},"end":{"line":10,"column":2}}]},"4":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":3},"end":{"line":18,"column":3}},{"start":{"line":18,"column":3},"end":{"line":18,"column":3}}]},"5":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":4},"end":{"line":26,"column":4}},{"start":{"line":26,"column":4},"end":{"line":26,"column":4}}]},"6":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":11},"end":{"line":28,"column":11}},{"start":{"line":28,"column":11},"end":{"line":28,"column":11}}]},"7":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":3},"end":{"line":32,"column":3}},{"start":{"line":32,"column":3},"end":{"line":32,"column":3}}]},"8":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"9":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":6},"end":{"line":38,"column":10}},{"start":{"line":38,"column":14},"end":{"line":38,"column":25}}]},"10":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"11":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":5},"end":{"line":45,"column":19}},{"start":{"line":45,"column":23},"end":{"line":45,"column":44}}]},"12":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":5},"end":{"line":52,"column":5}},{"start":{"line":52,"column":5},"end":{"line":52,"column":5}}]},"13":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":6},"end":{"line":53,"column":6}},{"start":{"line":53,"column":6},"end":{"line":53,"column":6}}]},"14":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":12},"end":{"line":57,"column":12}},{"start":{"line":57,"column":12},"end":{"line":57,"column":12}}]},"15":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":6},"end":{"line":58,"column":6}},{"start":{"line":58,"column":6},"end":{"line":58,"column":6}}]},"16":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":9},"end":{"line":58,"column":29}},{"start":{"line":58,"column":33},"end":{"line":58,"column":91}}]},"17":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":6},"end":{"line":63,"column":6}},{"start":{"line":63,"column":6},"end":{"line":63,"column":6}}]},"18":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":9},"end":{"line":63,"column":28}},{"start":{"line":63,"column":32},"end":{"line":63,"column":92}}]},"19":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":5},"end":{"line":72,"column":5}},{"start":{"line":72,"column":5},"end":{"line":72,"column":5}}]},"20":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":9},"end":{"line":72,"column":28}},{"start":{"line":72,"column":32},"end":{"line":72,"column":49}}]}},"code":["(function () {","","\tif (typeof self === 'undefined' || !self.Prism || !self.document || !document.createRange) {","\t\treturn;","\t}","","\tPrism.plugins.KeepMarkup = true;","","\tPrism.hooks.add('before-highlight', function (env) {","\t\tif (!env.element.children.length) {","\t\t\treturn;","\t\t}","","\t\tvar pos = 0;","\t\tvar data = [];","\t\tvar f = function (elt, baseNode) {","\t\t\tvar o = {};","\t\t\tif (!baseNode) {","\t\t\t\t// Clone the original tag to keep all attributes","\t\t\t\to.clone = elt.cloneNode(false);","\t\t\t\to.posOpen = pos;","\t\t\t\tdata.push(o);","\t\t\t}","\t\t\tfor (var i = 0, l = elt.childNodes.length; i < l; i++) {","\t\t\t\tvar child = elt.childNodes[i];","\t\t\t\tif (child.nodeType === 1) { // element","\t\t\t\t\tf(child);","\t\t\t\t} else if(child.nodeType === 3) { // text","\t\t\t\t\tpos += child.data.length;","\t\t\t\t}","\t\t\t}","\t\t\tif (!baseNode) {","\t\t\t\to.posClose = pos;","\t\t\t}","\t\t};","\t\tf(env.element, true);","","\t\tif (data && data.length) {","\t\t\t// data is an array of all existing tags","\t\t\tenv.keepMarkup = data;","\t\t}","\t});","","\tPrism.hooks.add('after-highlight', function (env) {","\t\tif(env.keepMarkup && env.keepMarkup.length) {","","\t\t\tvar walk = function (elt, nodeState) {","\t\t\t\tfor (var i = 0, l = elt.childNodes.length; i < l; i++) {","","\t\t\t\t\tvar child = elt.childNodes[i];","","\t\t\t\t\tif (child.nodeType === 1) { // element","\t\t\t\t\t\tif (!walk(child, nodeState)) {","\t\t\t\t\t\t\treturn false;","\t\t\t\t\t\t}","","\t\t\t\t\t} else if (child.nodeType === 3) { // text","\t\t\t\t\t\tif(!nodeState.nodeStart && nodeState.pos + child.data.length > nodeState.node.posOpen) {","\t\t\t\t\t\t\t// We found the start position","\t\t\t\t\t\t\tnodeState.nodeStart = child;","\t\t\t\t\t\t\tnodeState.nodeStartPos = nodeState.node.posOpen - nodeState.pos;","\t\t\t\t\t\t}","\t\t\t\t\t\tif(nodeState.nodeStart && nodeState.pos + child.data.length >= nodeState.node.posClose) {","\t\t\t\t\t\t\t// We found the end position","\t\t\t\t\t\t\tnodeState.nodeEnd = child;","\t\t\t\t\t\t\tnodeState.nodeEndPos = nodeState.node.posClose - nodeState.pos;","\t\t\t\t\t\t}","","\t\t\t\t\t\tnodeState.pos += child.data.length;","\t\t\t\t\t}","","\t\t\t\t\tif (nodeState.nodeStart && nodeState.nodeEnd) {","\t\t\t\t\t\t// Select the range and wrap it with the clone","\t\t\t\t\t\tvar range = document.createRange();","\t\t\t\t\t\trange.setStart(nodeState.nodeStart, nodeState.nodeStartPos);","\t\t\t\t\t\trange.setEnd(nodeState.nodeEnd, nodeState.nodeEndPos);","\t\t\t\t\t\tnodeState.node.clone.appendChild(range.extractContents());","\t\t\t\t\t\trange.insertNode(nodeState.node.clone);","\t\t\t\t\t\trange.detach();","","\t\t\t\t\t\t// Process is over","\t\t\t\t\t\treturn false;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\treturn true;","\t\t\t};","","\t\t\t// For each tag, we walk the DOM to reinsert it","\t\t\tenv.keepMarkup.forEach(function (node) {","\t\t\t\twalk(env.element, {","\t\t\t\t\tnode: node,","\t\t\t\t\tpos: 0","\t\t\t\t});","\t\t\t});","\t\t}","\t});","}());",""],"l":{"1":1,"3":1,"4":1,"7":0,"9":0,"10":0,"11":0,"14":0,"15":0,"16":0,"17":0,"18":0,"20":0,"21":0,"22":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"32":0,"33":0,"36":0,"38":0,"40":0,"44":0,"45":0,"47":0,"48":0,"50":0,"52":0,"53":0,"54":0,"57":0,"58":0,"60":0,"61":0,"63":0,"65":0,"66":0,"69":0,"72":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"82":0,"85":0,"89":0,"90":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/line-highlight/prism-line-highlight.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/line-highlight/prism-line-highlight.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0},"b":{"1":[1,0],"2":[1,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0,0],"21":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":11}}},"2":{"name":"$$","line":7,"loc":{"start":{"line":7,"column":0},"end":{"line":7,"column":23}}},"3":{"name":"hasClass","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":38}}},"4":{"name":"(anonymous_4)","line":18,"loc":{"start":{"line":18,"column":27},"end":{"line":18,"column":38}}},"5":{"name":"(anonymous_5)","line":20,"loc":{"start":{"line":20,"column":8},"end":{"line":20,"column":19}}},"6":{"name":"highlightLines","line":38,"loc":{"start":{"line":38,"column":0},"end":{"line":38,"column":45}}},"7":{"name":"applyHash","line":78,"loc":{"start":{"line":78,"column":0},"end":{"line":78,"column":21}}},"8":{"name":"(anonymous_8)","line":82,"loc":{"start":{"line":82,"column":41},"end":{"line":82,"column":57}}},"9":{"name":"(anonymous_9)","line":110,"loc":{"start":{"line":110,"column":28},"end":{"line":110,"column":42}}},"10":{"name":"(anonymous_10)","line":120,"loc":{"start":{"line":120,"column":36},"end":{"line":120,"column":52}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":133,"column":5}},"2":{"start":{"line":3,"column":0},"end":{"line":5,"column":1}},"3":{"start":{"line":4,"column":1},"end":{"line":4,"column":8}},"4":{"start":{"line":7,"column":0},"end":{"line":9,"column":1}},"5":{"start":{"line":8,"column":1},"end":{"line":8,"column":77}},"6":{"start":{"line":11,"column":0},"end":{"line":14,"column":1}},"7":{"start":{"line":12,"column":2},"end":{"line":12,"column":36}},"8":{"start":{"line":13,"column":2},"end":{"line":13,"column":88}},"9":{"start":{"line":18,"column":0},"end":{"line":36,"column":5}},"10":{"start":{"line":19,"column":1},"end":{"line":19,"column":9}},"11":{"start":{"line":20,"column":1},"end":{"line":35,"column":2}},"12":{"start":{"line":21,"column":2},"end":{"line":33,"column":3}},"13":{"start":{"line":22,"column":3},"end":{"line":22,"column":41}},"14":{"start":{"line":23,"column":3},"end":{"line":23,"column":29}},"15":{"start":{"line":24,"column":3},"end":{"line":24,"column":30}},"16":{"start":{"line":25,"column":3},"end":{"line":25,"column":23}},"17":{"start":{"line":26,"column":3},"end":{"line":26,"column":22}},"18":{"start":{"line":27,"column":3},"end":{"line":27,"column":38}},"19":{"start":{"line":28,"column":3},"end":{"line":28,"column":32}},"20":{"start":{"line":31,"column":3},"end":{"line":31,"column":31}},"21":{"start":{"line":32,"column":3},"end":{"line":32,"column":32}},"22":{"start":{"line":34,"column":2},"end":{"line":34,"column":13}},"23":{"start":{"line":38,"column":0},"end":{"line":76,"column":1}},"24":{"start":{"line":39,"column":1},"end":{"line":40,"column":57}},"25":{"start":{"line":42,"column":1},"end":{"line":42,"column":65}},"26":{"start":{"line":43,"column":1},"end":{"line":43,"column":64}},"27":{"start":{"line":45,"column":1},"end":{"line":75,"column":2}},"28":{"start":{"line":46,"column":2},"end":{"line":46,"column":27}},"29":{"start":{"line":48,"column":2},"end":{"line":49,"column":31}},"30":{"start":{"line":51,"column":2},"end":{"line":51,"column":43}},"31":{"start":{"line":53,"column":2},"end":{"line":53,"column":56}},"32":{"start":{"line":54,"column":2},"end":{"line":54,"column":43}},"33":{"start":{"line":55,"column":2},"end":{"line":55,"column":55}},"34":{"start":{"line":58,"column":2},"end":{"line":64,"column":3}},"35":{"start":{"line":59,"column":3},"end":{"line":59,"column":42}},"36":{"start":{"line":61,"column":3},"end":{"line":63,"column":4}},"37":{"start":{"line":62,"column":4},"end":{"line":62,"column":39}},"38":{"start":{"line":66,"column":2},"end":{"line":66,"column":60}},"39":{"start":{"line":69,"column":2},"end":{"line":74,"column":3}},"40":{"start":{"line":71,"column":3},"end":{"line":71,"column":25}},"41":{"start":{"line":73,"column":3},"end":{"line":73,"column":56}},"42":{"start":{"line":78,"column":0},"end":{"line":106,"column":1}},"43":{"start":{"line":79,"column":1},"end":{"line":79,"column":35}},"44":{"start":{"line":82,"column":1},"end":{"line":84,"column":4}},"45":{"start":{"line":83,"column":2},"end":{"line":83,"column":36}},"46":{"start":{"line":86,"column":1},"end":{"line":86,"column":54}},"47":{"start":{"line":88,"column":1},"end":{"line":90,"column":2}},"48":{"start":{"line":89,"column":2},"end":{"line":89,"column":9}},"49":{"start":{"line":92,"column":1},"end":{"line":93,"column":39}},"50":{"start":{"line":95,"column":1},"end":{"line":97,"column":2}},"51":{"start":{"line":96,"column":2},"end":{"line":96,"column":9}},"52":{"start":{"line":99,"column":1},"end":{"line":101,"column":2}},"53":{"start":{"line":100,"column":2},"end":{"line":100,"column":36}},"54":{"start":{"line":103,"column":1},"end":{"line":103,"column":42}},"55":{"start":{"line":105,"column":1},"end":{"line":105,"column":70}},"56":{"start":{"line":108,"column":0},"end":{"line":108,"column":18}},"57":{"start":{"line":110,"column":0},"end":{"line":127,"column":3}},"58":{"start":{"line":111,"column":1},"end":{"line":111,"column":34}},"59":{"start":{"line":112,"column":1},"end":{"line":112,"column":50}},"60":{"start":{"line":114,"column":1},"end":{"line":116,"column":2}},"61":{"start":{"line":115,"column":2},"end":{"line":115,"column":9}},"62":{"start":{"line":118,"column":1},"end":{"line":118,"column":25}},"63":{"start":{"line":120,"column":1},"end":{"line":122,"column":4}},"64":{"start":{"line":121,"column":2},"end":{"line":121,"column":36}},"65":{"start":{"line":124,"column":1},"end":{"line":124,"column":28}},"66":{"start":{"line":126,"column":1},"end":{"line":126,"column":38}},"67":{"start":{"line":129,"column":0},"end":{"line":131,"column":1}},"68":{"start":{"line":130,"column":1},"end":{"line":130,"column":50}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":0},"end":{"line":3,"column":0}},{"start":{"line":3,"column":0},"end":{"line":3,"column":0}}]},"2":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":31}},{"start":{"line":3,"column":35},"end":{"line":3,"column":46}},{"start":{"line":3,"column":50},"end":{"line":3,"column":64}},{"start":{"line":3,"column":68},"end":{"line":3,"column":91}}]},"3":{"line":8,"type":"binary-expr","locations":[{"start":{"line":8,"column":36},"end":{"line":8,"column":39}},{"start":{"line":8,"column":43},"end":{"line":8,"column":51}}]},"4":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"5":{"line":40,"type":"binary-expr","locations":[{"start":{"line":40,"column":14},"end":{"line":40,"column":51}},{"start":{"line":40,"column":55},"end":{"line":40,"column":56}}]},"6":{"line":42,"type":"cond-expr","locations":[{"start":{"line":42,"column":43},"end":{"line":42,"column":51}},{"start":{"line":42,"column":54},"end":{"line":42,"column":64}}]},"7":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":12},"end":{"line":49,"column":21}},{"start":{"line":49,"column":25},"end":{"line":49,"column":30}}]},"8":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":20},"end":{"line":55,"column":27}},{"start":{"line":55,"column":31},"end":{"line":55,"column":33}}]},"9":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"10":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":3},"end":{"line":61,"column":3}},{"start":{"line":61,"column":3},"end":{"line":61,"column":3}}]},"11":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":2},"end":{"line":69,"column":2}},{"start":{"line":69,"column":2},"end":{"line":69,"column":2}}]},"12":{"line":73,"type":"binary-expr","locations":[{"start":{"line":73,"column":4},"end":{"line":73,"column":29}},{"start":{"line":73,"column":33},"end":{"line":73,"column":36}}]},"13":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":14},"end":{"line":86,"column":40}},{"start":{"line":86,"column":44},"end":{"line":86,"column":49}}]},"14":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":1},"end":{"line":88,"column":1}},{"start":{"line":88,"column":1},"end":{"line":88,"column":1}}]},"15":{"line":88,"type":"binary-expr","locations":[{"start":{"line":88,"column":5},"end":{"line":88,"column":11}},{"start":{"line":88,"column":15},"end":{"line":88,"column":44}}]},"16":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":1},"end":{"line":95,"column":1}},{"start":{"line":95,"column":1},"end":{"line":95,"column":1}}]},"17":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":1},"end":{"line":99,"column":1}},{"start":{"line":99,"column":1},"end":{"line":99,"column":1}}]},"18":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":13},"end":{"line":112,"column":16}},{"start":{"line":112,"column":20},"end":{"line":112,"column":49}}]},"19":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":1},"end":{"line":114,"column":1}},{"start":{"line":114,"column":1},"end":{"line":114,"column":1}}]},"20":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":5},"end":{"line":114,"column":9}},{"start":{"line":114,"column":13},"end":{"line":114,"column":19}},{"start":{"line":114,"column":23},"end":{"line":114,"column":49}}]},"21":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":0},"end":{"line":129,"column":0}},{"start":{"line":129,"column":0},"end":{"line":129,"column":0}}]}},"code":["(function(){","","if (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {","\treturn;","}","","function $$(expr, con) {","\treturn Array.prototype.slice.call((con || document).querySelectorAll(expr));","}","","function hasClass(element, className) {","  className = \" \" + className + \" \";","  return (\" \" + element.className + \" \").replace(/[\\n\\t]/g, \" \").indexOf(className) > -1","}","","// Some browsers round the line-height, others don't.","// We need to test for it to position the elements properly.","var isLineHeightRounded = (function() {","\tvar res;","\treturn function() {","\t\tif(typeof res === 'undefined') {","\t\t\tvar d = document.createElement('div');","\t\t\td.style.fontSize = '13px';","\t\t\td.style.lineHeight = '1.5';","\t\t\td.style.padding = 0;","\t\t\td.style.border = 0;","\t\t\td.innerHTML = '&nbsp;<br />&nbsp;';","\t\t\tdocument.body.appendChild(d);","\t\t\t// Browsers that round the line-height should have offsetHeight === 38","\t\t\t// The others should have 39.","\t\t\tres = d.offsetHeight === 38;","\t\t\tdocument.body.removeChild(d);","\t\t}","\t\treturn res;","\t}","}());","","function highlightLines(pre, lines, classes) {","\tvar ranges = lines.replace(/\\s+/g, '').split(','),","\t    offset = +pre.getAttribute('data-line-offset') || 0;","","\tvar parseMethod = isLineHeightRounded() ? parseInt : parseFloat;","\tvar lineHeight = parseMethod(getComputedStyle(pre).lineHeight);","","\tfor (var i=0, range; range = ranges[i++];) {","\t\trange = range.split('-');","\t\t\t\t\t","\t\tvar start = +range[0],","\t\t    end = +range[1] || start;","\t\t","\t\tvar line = document.createElement('div');","\t\t","\t\tline.textContent = Array(end - start + 2).join(' \\n');","\t\tline.setAttribute('aria-hidden', 'true');","\t\tline.className = (classes || '') + ' line-highlight';","","\t\t//if the line-numbers plugin is enabled, then there is no reason for this plugin to display the line numbers","\t\tif(!hasClass(pre, 'line-numbers')) {","\t\t\tline.setAttribute('data-start', start);","","\t\t\tif(end > start) {","\t\t\t\tline.setAttribute('data-end', end);","\t\t\t}","\t\t}","","\t\tline.style.top = (start - offset - 1) * lineHeight + 'px';","","\t\t//allow this to play nicely with the line-numbers plugin","\t\tif(hasClass(pre, 'line-numbers')) {","\t\t\t//need to attack to pre as when line-numbers is enabled, the code tag is relatively which screws up the positioning","\t\t\tpre.appendChild(line);","\t\t} else {","\t\t\t(pre.querySelector('code') || pre).appendChild(line);","\t\t}","\t}","}","","function applyHash() {","\tvar hash = location.hash.slice(1);","\t","\t// Remove pre-existing temporary lines","\t$$('.temporary.line-highlight').forEach(function (line) {","\t\tline.parentNode.removeChild(line);","\t});","\t","\tvar range = (hash.match(/\\.([\\d,-]+)$/) || [,''])[1];","\t","\tif (!range || document.getElementById(hash)) {","\t\treturn;","\t}","\t","\tvar id = hash.slice(0, hash.lastIndexOf('.')),","\t    pre = document.getElementById(id);","","\tif (!pre) {","\t\treturn;","\t}","\t","\tif (!pre.hasAttribute('data-line')) {","\t\tpre.setAttribute('data-line', '');","\t}","","\thighlightLines(pre, range, 'temporary ');","","\tdocument.querySelector('.temporary.line-highlight').scrollIntoView();","}","","var fakeTimer = 0; // Hack to limit the number of times applyHash() runs","","Prism.hooks.add('complete', function(env) {","\tvar pre = env.element.parentNode;","\tvar lines = pre && pre.getAttribute('data-line');","\t","\tif (!pre || !lines || !/pre/i.test(pre.nodeName)) {","\t\treturn;","\t}","\t","\tclearTimeout(fakeTimer);","\t","\t$$('.line-highlight', pre).forEach(function (line) {","\t\tline.parentNode.removeChild(line);","\t});","\t","\thighlightLines(pre, lines);","\t","\tfakeTimer = setTimeout(applyHash, 1);","});","","if(window.addEventListener) {","\twindow.addEventListener('hashchange', applyHash);","}","","})();",""],"l":{"1":1,"3":1,"4":1,"7":1,"8":0,"11":1,"12":0,"13":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"31":0,"32":0,"34":0,"38":1,"39":0,"42":0,"43":0,"45":0,"46":0,"48":0,"51":0,"53":0,"54":0,"55":0,"58":0,"59":0,"61":0,"62":0,"66":0,"69":0,"71":0,"73":0,"78":1,"79":0,"82":0,"83":0,"86":0,"88":0,"89":0,"92":0,"95":0,"96":0,"99":0,"100":0,"103":0,"105":0,"108":0,"110":0,"111":0,"112":0,"114":0,"115":0,"118":0,"120":0,"121":0,"124":0,"126":0,"129":0,"130":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/line-numbers/prism-line-numbers.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/line-numbers/prism-line-numbers.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},"b":{"1":[1,0],"2":[1,0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":12}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":28},"end":{"line":7,"column":43}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":57,"column":5}},"2":{"start":{"line":3,"column":0},"end":{"line":5,"column":1}},"3":{"start":{"line":4,"column":1},"end":{"line":4,"column":8}},"4":{"start":{"line":7,"column":0},"end":{"line":55,"column":3}},"5":{"start":{"line":8,"column":1},"end":{"line":10,"column":2}},"6":{"start":{"line":9,"column":2},"end":{"line":9,"column":9}},"7":{"start":{"line":13,"column":1},"end":{"line":13,"column":34}},"8":{"start":{"line":14,"column":1},"end":{"line":14,"column":39}},"9":{"start":{"line":15,"column":1},"end":{"line":21,"column":2}},"10":{"start":{"line":20,"column":2},"end":{"line":20,"column":9}},"11":{"start":{"line":23,"column":1},"end":{"line":26,"column":2}},"12":{"start":{"line":25,"column":2},"end":{"line":25,"column":9}},"13":{"start":{"line":28,"column":1},"end":{"line":31,"column":2}},"14":{"start":{"line":30,"column":2},"end":{"line":30,"column":68}},"15":{"start":{"line":32,"column":1},"end":{"line":35,"column":2}},"16":{"start":{"line":34,"column":2},"end":{"line":34,"column":35}},"17":{"start":{"line":37,"column":1},"end":{"line":37,"column":40}},"18":{"start":{"line":38,"column":1},"end":{"line":38,"column":45}},"19":{"start":{"line":39,"column":1},"end":{"line":39,"column":24}},"20":{"start":{"line":41,"column":1},"end":{"line":41,"column":37}},"21":{"start":{"line":42,"column":1},"end":{"line":42,"column":37}},"22":{"start":{"line":44,"column":1},"end":{"line":44,"column":53}},"23":{"start":{"line":45,"column":1},"end":{"line":45,"column":56}},"24":{"start":{"line":46,"column":1},"end":{"line":46,"column":52}},"25":{"start":{"line":47,"column":1},"end":{"line":47,"column":38}},"26":{"start":{"line":49,"column":1},"end":{"line":51,"column":2}},"27":{"start":{"line":50,"column":2},"end":{"line":50,"column":94}},"28":{"start":{"line":53,"column":1},"end":{"line":53,"column":45}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":0},"end":{"line":3,"column":0}},{"start":{"line":3,"column":0},"end":{"line":3,"column":0}}]},"2":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":31}},{"start":{"line":3,"column":35},"end":{"line":3,"column":46}},{"start":{"line":3,"column":50},"end":{"line":3,"column":64}}]},"3":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},{"start":{"line":8,"column":1},"end":{"line":8,"column":1}}]},"4":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},{"start":{"line":15,"column":1},"end":{"line":15,"column":1}}]},"5":{"line":16,"type":"binary-expr","locations":[{"start":{"line":16,"column":2},"end":{"line":16,"column":6}},{"start":{"line":16,"column":10},"end":{"line":16,"column":36}},{"start":{"line":18,"column":3},"end":{"line":18,"column":30}},{"start":{"line":18,"column":34},"end":{"line":18,"column":69}}]},"6":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},{"start":{"line":23,"column":1},"end":{"line":23,"column":1}}]},"7":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},{"start":{"line":28,"column":1},"end":{"line":28,"column":1}}]},"8":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},{"start":{"line":32,"column":1},"end":{"line":32,"column":1}}]},"9":{"line":38,"type":"cond-expr","locations":[{"start":{"line":38,"column":24},"end":{"line":38,"column":40}},{"start":{"line":38,"column":43},"end":{"line":38,"column":44}}]},"10":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":1},"end":{"line":49,"column":1}},{"start":{"line":49,"column":1},"end":{"line":49,"column":1}}]}},"code":["(function() {","","if (typeof self === 'undefined' || !self.Prism || !self.document) {","\treturn;","}","","Prism.hooks.add('complete', function (env) {","\tif (!env.code) {","\t\treturn;","\t}","","\t// works only for <code> wrapped inside <pre> (not inline)","\tvar pre = env.element.parentNode;","\tvar clsReg = /\\s*\\bline-numbers\\b\\s*/;","\tif (","\t\t!pre || !/pre/i.test(pre.nodeName) ||","\t\t\t// Abort only if nor the <pre> nor the <code> have the class","\t\t(!clsReg.test(pre.className) && !clsReg.test(env.element.className))","\t) {","\t\treturn;","\t}","","\tif (env.element.querySelector(\".line-numbers-rows\")) {","\t\t// Abort if line numbers already exists","\t\treturn;","\t}","","\tif (clsReg.test(env.element.className)) {","\t\t// Remove the class \"line-numbers\" from the <code>","\t\tenv.element.className = env.element.className.replace(clsReg, '');","\t}","\tif (!clsReg.test(pre.className)) {","\t\t// Add the class \"line-numbers\" to the <pre>","\t\tpre.className += ' line-numbers';","\t}","","\tvar match = env.code.match(/\\n(?!$)/g);","\tvar linesNum = match ? match.length + 1 : 1;","\tvar lineNumbersWrapper;","","\tvar lines = new Array(linesNum + 1);","\tlines = lines.join('<span></span>');","","\tlineNumbersWrapper = document.createElement('span');","\tlineNumbersWrapper.setAttribute('aria-hidden', 'true');","\tlineNumbersWrapper.className = 'line-numbers-rows';","\tlineNumbersWrapper.innerHTML = lines;","","\tif (pre.hasAttribute('data-start')) {","\t\tpre.style.counterReset = 'linenumber ' + (parseInt(pre.getAttribute('data-start'), 10) - 1);","\t}","","\tenv.element.appendChild(lineNumbersWrapper);","","});","","}());"],"l":{"1":1,"3":1,"4":1,"7":0,"8":0,"9":0,"13":0,"14":0,"15":0,"20":0,"23":0,"25":0,"28":0,"30":0,"32":0,"34":0,"37":0,"38":0,"39":0,"41":0,"42":0,"44":0,"45":0,"46":0,"47":0,"49":0,"50":0,"53":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/normalize-whitespace/prism-normalize-whitespace.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/normalize-whitespace/prism-normalize-whitespace.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":1,"10":0,"11":1,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0},"b":{"1":[1,0],"2":[1,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0,0,0,0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":12}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":30},"end":{"line":7,"column":52}}},"3":{"name":"NormalizeWhitespace","line":15,"loc":{"start":{"line":15,"column":0},"end":{"line":15,"column":39}}},"4":{"name":"toCamelCase","line":19,"loc":{"start":{"line":19,"column":0},"end":{"line":19,"column":28}}},"5":{"name":"(anonymous_5)","line":20,"loc":{"start":{"line":20,"column":32},"end":{"line":20,"column":59}}},"6":{"name":"tabLen","line":25,"loc":{"start":{"line":25,"column":0},"end":{"line":25,"column":21}}},"7":{"name":"(anonymous_7)","line":35,"loc":{"start":{"line":35,"column":14},"end":{"line":35,"column":34}}},"8":{"name":"(anonymous_8)","line":38,"loc":{"start":{"line":38,"column":12},"end":{"line":38,"column":39}}},"9":{"name":"(anonymous_9)","line":55,"loc":{"start":{"line":55,"column":11},"end":{"line":55,"column":28}}},"10":{"name":"(anonymous_10)","line":58,"loc":{"start":{"line":58,"column":12},"end":{"line":58,"column":29}}},"11":{"name":"(anonymous_11)","line":61,"loc":{"start":{"line":61,"column":15},"end":{"line":61,"column":40}}},"12":{"name":"(anonymous_12)","line":65,"loc":{"start":{"line":65,"column":15},"end":{"line":65,"column":40}}},"13":{"name":"(anonymous_13)","line":69,"loc":{"start":{"line":69,"column":17},"end":{"line":69,"column":34}}},"14":{"name":"(anonymous_14)","line":73,"loc":{"start":{"line":73,"column":24},"end":{"line":73,"column":41}}},"15":{"name":"(anonymous_15)","line":76,"loc":{"start":{"line":76,"column":15},"end":{"line":76,"column":32}}},"16":{"name":"(anonymous_16)","line":82,"loc":{"start":{"line":82,"column":15},"end":{"line":82,"column":29}}},"17":{"name":"(anonymous_17)","line":89,"loc":{"start":{"line":89,"column":9},"end":{"line":89,"column":32}}},"18":{"name":"(anonymous_18)","line":92,"loc":{"start":{"line":92,"column":13},"end":{"line":92,"column":42}}},"19":{"name":"(anonymous_19)","line":129,"loc":{"start":{"line":129,"column":39},"end":{"line":129,"column":54}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":172,"column":5}},"2":{"start":{"line":3,"column":0},"end":{"line":5,"column":1}},"3":{"start":{"line":4,"column":1},"end":{"line":4,"column":8}},"4":{"start":{"line":7,"column":0},"end":{"line":13,"column":1}},"5":{"start":{"line":8,"column":1},"end":{"line":11,"column":2}},"6":{"start":{"line":9,"column":2},"end":{"line":10,"column":27}},"7":{"start":{"line":10,"column":3},"end":{"line":10,"column":27}},"8":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}},"9":{"start":{"line":15,"column":0},"end":{"line":17,"column":1}},"10":{"start":{"line":16,"column":1},"end":{"line":16,"column":38}},"11":{"start":{"line":19,"column":0},"end":{"line":23,"column":1}},"12":{"start":{"line":20,"column":1},"end":{"line":22,"column":4}},"13":{"start":{"line":21,"column":2},"end":{"line":21,"column":33}},"14":{"start":{"line":25,"column":0},"end":{"line":32,"column":1}},"15":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}},"16":{"start":{"line":27,"column":1},"end":{"line":30,"column":2}},"17":{"start":{"line":28,"column":2},"end":{"line":29,"column":12}},"18":{"start":{"line":29,"column":3},"end":{"line":29,"column":12}},"19":{"start":{"line":31,"column":1},"end":{"line":31,"column":25}},"20":{"start":{"line":34,"column":0},"end":{"line":115,"column":2}},"21":{"start":{"line":36,"column":2},"end":{"line":36,"column":50}},"22":{"start":{"line":39,"column":2},"end":{"line":39,"column":45}},"23":{"start":{"line":41,"column":2},"end":{"line":47,"column":3}},"24":{"start":{"line":42,"column":3},"end":{"line":42,"column":38}},"25":{"start":{"line":43,"column":3},"end":{"line":46,"column":4}},"26":{"start":{"line":45,"column":4},"end":{"line":45,"column":63}},"27":{"start":{"line":49,"column":2},"end":{"line":49,"column":15}},"28":{"start":{"line":56,"column":2},"end":{"line":56,"column":35}},"29":{"start":{"line":59,"column":2},"end":{"line":59,"column":35}},"30":{"start":{"line":62,"column":2},"end":{"line":62,"column":25}},"31":{"start":{"line":63,"column":2},"end":{"line":63,"column":61}},"32":{"start":{"line":66,"column":2},"end":{"line":66,"column":25}},"33":{"start":{"line":67,"column":2},"end":{"line":67,"column":67}},"34":{"start":{"line":70,"column":2},"end":{"line":70,"column":38}},"35":{"start":{"line":74,"column":2},"end":{"line":74,"column":44}},"36":{"start":{"line":77,"column":2},"end":{"line":77,"column":51}},"37":{"start":{"line":79,"column":2},"end":{"line":80,"column":16}},"38":{"start":{"line":80,"column":3},"end":{"line":80,"column":16}},"39":{"start":{"line":82,"column":2},"end":{"line":82,"column":61}},"40":{"start":{"line":82,"column":30},"end":{"line":82,"column":57}},"41":{"start":{"line":84,"column":2},"end":{"line":85,"column":16}},"42":{"start":{"line":85,"column":3},"end":{"line":85,"column":16}},"43":{"start":{"line":87,"column":2},"end":{"line":87,"column":63}},"44":{"start":{"line":90,"column":2},"end":{"line":90,"column":83}},"45":{"start":{"line":93,"column":2},"end":{"line":93,"column":63}},"46":{"start":{"line":95,"column":2},"end":{"line":95,"column":32}},"47":{"start":{"line":96,"column":2},"end":{"line":112,"column":3}},"48":{"start":{"line":97,"column":3},"end":{"line":98,"column":13}},"49":{"start":{"line":98,"column":4},"end":{"line":98,"column":13}},"50":{"start":{"line":100,"column":3},"end":{"line":101,"column":15}},"51":{"start":{"line":103,"column":3},"end":{"line":110,"column":4}},"52":{"start":{"line":104,"column":4},"end":{"line":104,"column":29}},"53":{"start":{"line":105,"column":4},"end":{"line":105,"column":14}},"54":{"start":{"line":106,"column":4},"end":{"line":109,"column":5}},"55":{"start":{"line":107,"column":5},"end":{"line":107,"column":30}},"56":{"start":{"line":108,"column":5},"end":{"line":108,"column":14}},"57":{"start":{"line":111,"column":3},"end":{"line":111,"column":28}},"58":{"start":{"line":113,"column":2},"end":{"line":113,"column":26}},"59":{"start":{"line":117,"column":0},"end":{"line":127,"column":3}},"60":{"start":{"line":129,"column":0},"end":{"line":170,"column":3}},"61":{"start":{"line":130,"column":1},"end":{"line":130,"column":34}},"62":{"start":{"line":131,"column":1},"end":{"line":131,"column":48}},"63":{"start":{"line":132,"column":1},"end":{"line":135,"column":9}},"64":{"start":{"line":135,"column":2},"end":{"line":135,"column":9}},"65":{"start":{"line":137,"column":1},"end":{"line":141,"column":52}},"66":{"start":{"line":144,"column":1},"end":{"line":159,"column":2}},"67":{"start":{"line":145,"column":2},"end":{"line":145,"column":25}},"68":{"start":{"line":147,"column":2},"end":{"line":158,"column":3}},"69":{"start":{"line":148,"column":3},"end":{"line":148,"column":20}},"70":{"start":{"line":149,"column":9},"end":{"line":158,"column":3}},"71":{"start":{"line":150,"column":3},"end":{"line":154,"column":4}},"72":{"start":{"line":151,"column":4},"end":{"line":151,"column":28}},"73":{"start":{"line":153,"column":4},"end":{"line":153,"column":29}},"74":{"start":{"line":156,"column":3},"end":{"line":156,"column":25}},"75":{"start":{"line":157,"column":3},"end":{"line":157,"column":7}},"76":{"start":{"line":161,"column":1},"end":{"line":169,"column":2}},"77":{"start":{"line":162,"column":2},"end":{"line":162,"column":39}},"78":{"start":{"line":163,"column":2},"end":{"line":163,"column":58}},"79":{"start":{"line":166,"column":2},"end":{"line":166,"column":52}},"80":{"start":{"line":167,"column":2},"end":{"line":167,"column":67}},"81":{"start":{"line":168,"column":2},"end":{"line":168,"column":37}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":0},"end":{"line":3,"column":0}},{"start":{"line":3,"column":0},"end":{"line":3,"column":0}}]},"2":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":31}},{"start":{"line":3,"column":35},"end":{"line":3,"column":46}},{"start":{"line":3,"column":50},"end":{"line":3,"column":64}}]},"3":{"line":7,"type":"binary-expr","locations":[{"start":{"line":7,"column":13},"end":{"line":7,"column":26}},{"start":{"line":7,"column":30},"end":{"line":13,"column":1}}]},"4":{"line":9,"type":"if","locations":[{"start":{"line":9,"column":2},"end":{"line":9,"column":2}},{"start":{"line":9,"column":2},"end":{"line":9,"column":2}}]},"5":{"line":28,"type":"if","locations":[{"start":{"line":28,"column":2},"end":{"line":28,"column":2}},{"start":{"line":28,"column":2},"end":{"line":28,"column":2}}]},"6":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":3},"end":{"line":43,"column":3}},{"start":{"line":43,"column":3},"end":{"line":43,"column":3}}]},"7":{"line":43,"type":"binary-expr","locations":[{"start":{"line":43,"column":7},"end":{"line":43,"column":27}},{"start":{"line":43,"column":31},"end":{"line":43,"column":59}},{"start":{"line":44,"column":5},"end":{"line":44,"column":19}},{"start":{"line":44,"column":23},"end":{"line":44,"column":39}}]},"8":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":11},"end":{"line":62,"column":19}},{"start":{"line":62,"column":23},"end":{"line":62,"column":24}}]},"9":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":11},"end":{"line":66,"column":19}},{"start":{"line":66,"column":23},"end":{"line":66,"column":24}}]},"10":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":2},"end":{"line":79,"column":2}},{"start":{"line":79,"column":2},"end":{"line":79,"column":2}}]},"11":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":6},"end":{"line":79,"column":14}},{"start":{"line":79,"column":18},"end":{"line":79,"column":36}}]},"12":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":2},"end":{"line":84,"column":2}},{"start":{"line":84,"column":2},"end":{"line":84,"column":2}}]},"13":{"line":93,"type":"cond-expr","locations":[{"start":{"line":93,"column":39},"end":{"line":93,"column":41}},{"start":{"line":93,"column":44},"end":{"line":93,"column":62}}]},"14":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":44},"end":{"line":93,"column":56}},{"start":{"line":93,"column":60},"end":{"line":93,"column":62}}]},"15":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":3},"end":{"line":97,"column":3}},{"start":{"line":97,"column":3},"end":{"line":97,"column":3}}]},"16":{"line":106,"type":"if","locations":[{"start":{"line":106,"column":4},"end":{"line":106,"column":4}},{"start":{"line":106,"column":4},"end":{"line":106,"column":4}}]},"17":{"line":132,"type":"if","locations":[{"start":{"line":132,"column":1},"end":{"line":132,"column":1}},{"start":{"line":132,"column":1},"end":{"line":132,"column":1}}]},"18":{"line":132,"type":"binary-expr","locations":[{"start":{"line":132,"column":5},"end":{"line":132,"column":14}},{"start":{"line":132,"column":18},"end":{"line":132,"column":22}},{"start":{"line":132,"column":26},"end":{"line":132,"column":62}},{"start":{"line":133,"column":4},"end":{"line":133,"column":16}},{"start":{"line":133,"column":20},"end":{"line":133,"column":70}},{"start":{"line":134,"column":3},"end":{"line":134,"column":29}},{"start":{"line":134,"column":33},"end":{"line":134,"column":67}}]},"19":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":2},"end":{"line":147,"column":2}},{"start":{"line":147,"column":2},"end":{"line":147,"column":2}}]},"20":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":9},"end":{"line":149,"column":9}},{"start":{"line":149,"column":9},"end":{"line":149,"column":9}}]},"21":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":3},"end":{"line":150,"column":3}},{"start":{"line":150,"column":3},"end":{"line":150,"column":3}}]},"22":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":1},"end":{"line":161,"column":1}},{"start":{"line":161,"column":1},"end":{"line":161,"column":1}}]},"23":{"line":161,"type":"binary-expr","locations":[{"start":{"line":161,"column":5},"end":{"line":161,"column":33}},{"start":{"line":161,"column":37},"end":{"line":161,"column":62}}]}},"code":["(function() {","","if (typeof self === 'undefined' || !self.Prism || !self.document) {","\treturn;","}","","var assign = Object.assign || function (obj1, obj2) {","\tfor (var name in obj2) {","\t\tif (obj2.hasOwnProperty(name))","\t\t\tobj1[name] = obj2[name];","\t}","\treturn obj1;","}","","function NormalizeWhitespace(defaults) {","\tthis.defaults = assign({}, defaults);","}","","function toCamelCase(value) {","\treturn value.replace(/-(\\w)/g, function(match, firstChar) {","\t\treturn firstChar.toUpperCase();","\t});","}","","function tabLen(str) {","\tvar res = 0;","\tfor (var i = 0; i < str.length; ++i) {","\t\tif (str.charCodeAt(i) == '\\t'.charCodeAt(0))","\t\t\tres += 3;","\t}","\treturn str.length + res;","}","","NormalizeWhitespace.prototype = {","\tsetDefaults: function (defaults) {","\t\tthis.defaults = assign(this.defaults, defaults);","\t},","\tnormalize: function (input, settings) {","\t\tsettings = assign(this.defaults, settings);","","\t\tfor (var name in settings) {","\t\t\tvar methodName = toCamelCase(name);","\t\t\tif (name !== \"normalize\" && methodName !== 'setDefaults' &&","\t\t\t\t\tsettings[name] && this[methodName]) {","\t\t\t\tinput = this[methodName].call(this, input, settings[name]);","\t\t\t}","\t\t}","","\t\treturn input;","\t},","","\t/*","\t * Normalization methods","\t */","\tleftTrim: function (input) {","\t\treturn input.replace(/^\\s+/, '');","\t},","\trightTrim: function (input) {","\t\treturn input.replace(/\\s+$/, '');","\t},","\ttabsToSpaces: function (input, spaces) {","\t\tspaces = spaces|0 || 4;","\t\treturn input.replace(/\\t/g, new Array(++spaces).join(' '));","\t},","\tspacesToTabs: function (input, spaces) {","\t\tspaces = spaces|0 || 4;","\t\treturn input.replace(new RegExp(' {' + spaces + '}', 'g'), '\\t');","\t},","\tremoveTrailing: function (input) {","\t\treturn input.replace(/\\s*?$/gm, '');","\t},","\t// Support for deprecated plugin remove-initial-line-feed","\tremoveInitialLineFeed: function (input) {","\t\treturn input.replace(/^(?:\\r?\\n|\\r)/, '');","\t},","\tremoveIndent: function (input) {","\t\tvar indents = input.match(/^[^\\S\\n\\r]*(?=\\S)/gm);","","\t\tif (!indents || !indents[0].length)","\t\t\treturn input;","","\t\tindents.sort(function(a, b){return a.length - b.length; });","","\t\tif (!indents[0].length)","\t\t\treturn input;","","\t\treturn input.replace(new RegExp('^' + indents[0], 'gm'), '');","\t},","\tindent: function (input, tabs) {","\t\treturn input.replace(/^[^\\S\\n\\r]*(?=\\S)/gm, new Array(++tabs).join('\\t') + '$&');","\t},","\tbreakLines: function (input, characters) {","\t\tcharacters = (characters === true) ? 80 : characters|0 || 80;","","\t\tvar lines = input.split('\\n');","\t\tfor (var i = 0; i < lines.length; ++i) {","\t\t\tif (tabLen(lines[i]) <= characters)","\t\t\t\tcontinue;","","\t\t\tvar line = lines[i].split(/(\\s+)/g),","\t\t\t    len = 0;","","\t\t\tfor (var j = 0; j < line.length; ++j) {","\t\t\t\tvar tl = tabLen(line[j]);","\t\t\t\tlen += tl;","\t\t\t\tif (len > characters) {","\t\t\t\t\tline[j] = '\\n' + line[j];","\t\t\t\t\tlen = tl;","\t\t\t\t}","\t\t\t}","\t\t\tlines[i] = line.join('');","\t\t}","\t\treturn lines.join('\\n');","\t}","};","","Prism.plugins.NormalizeWhitespace = new NormalizeWhitespace({","\t'remove-trailing': true,","\t'remove-indent': true,","\t'left-trim': true,","\t'right-trim': true,","\t/*'break-lines': 80,","\t'indent': 2,","\t'remove-initial-line-feed': false,","\t'tabs-to-spaces': 4,","\t'spaces-to-tabs': 4*/","});","","Prism.hooks.add('before-sanity-check', function (env) {","\tvar pre = env.element.parentNode;","\tvar clsReg = /\\bno-whitespace-normalization\\b/;","\tif (!env.code || !pre || pre.nodeName.toLowerCase() !== 'pre' ||","\t\t\t(env.settings && env.settings['whitespace-normalization'] === false) ||","\t\t\tclsReg.test(pre.className) || clsReg.test(env.element.className))","\t\treturn;","","\tvar children = pre.childNodes,","\t    before = '',","\t    after = '',","\t    codeFound = false,","\t    Normalizer = Prism.plugins.NormalizeWhitespace;","","\t// Move surrounding whitespace from the <pre> tag into the <code> tag","\tfor (var i = 0; i < children.length; ++i) {","\t\tvar node = children[i];","","\t\tif (node == env.element) {","\t\t\tcodeFound = true;","\t\t} else if (node.nodeName === \"#text\") {","\t\t\tif (codeFound) {","\t\t\t\tafter += node.nodeValue;","\t\t\t} else {","\t\t\t\tbefore += node.nodeValue;","\t\t\t}","","\t\t\tpre.removeChild(node);","\t\t\t--i;","\t\t}","\t}","","\tif (!env.element.children.length || !Prism.plugins.KeepMarkup) {","\t\tenv.code = before + env.code + after;","\t\tenv.code = Normalizer.normalize(env.code, env.settings);","\t} else {","\t\t// Preserve markup for keep-markup plugin","\t\tvar html = before + env.element.innerHTML + after;","\t\tenv.element.innerHTML = Normalizer.normalize(html, env.settings);","\t\tenv.code = env.element.textContent;","\t}","});","","}());"],"l":{"1":1,"3":1,"4":1,"7":0,"8":0,"9":0,"10":0,"12":0,"15":1,"16":0,"19":1,"20":0,"21":0,"25":1,"26":0,"27":0,"28":0,"29":0,"31":0,"34":0,"36":0,"39":0,"41":0,"42":0,"43":0,"45":0,"49":0,"56":0,"59":0,"62":0,"63":0,"66":0,"67":0,"70":0,"74":0,"77":0,"79":0,"80":0,"82":0,"84":0,"85":0,"87":0,"90":0,"93":0,"95":0,"96":0,"97":0,"98":0,"100":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"111":0,"113":0,"117":0,"129":0,"130":0,"131":0,"132":0,"135":0,"137":0,"144":0,"145":0,"147":0,"148":0,"149":0,"150":0,"151":0,"153":0,"156":0,"157":0,"161":0,"162":0,"163":0,"166":0,"167":0,"168":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/previewer-angle/prism-previewer-angle.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/previewer-angle/prism-previewer-angle.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0},"b":{"1":[0,1],"2":[1,0,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,1],"18":[0,0],"19":[0,0],"20":[0,0,0,0],"21":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":12}}},"2":{"name":"(anonymous_2)","line":49,"loc":{"start":{"line":49,"column":37},"end":{"line":49,"column":52}}},"3":{"name":"(anonymous_3)","line":55,"loc":{"start":{"line":55,"column":16},"end":{"line":55,"column":31}}},"4":{"name":"(anonymous_4)","line":82,"loc":{"start":{"line":82,"column":39},"end":{"line":82,"column":55}}},"5":{"name":"(anonymous_5)","line":111,"loc":{"start":{"line":111,"column":10},"end":{"line":111,"column":22}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":118,"column":5}},"2":{"start":{"line":3,"column":1},"end":{"line":8,"column":2}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":9}},"4":{"start":{"line":10,"column":1},"end":{"line":47,"column":3}},"5":{"start":{"line":49,"column":1},"end":{"line":79,"column":4}},"6":{"start":{"line":50,"column":2},"end":{"line":78,"column":3}},"7":{"start":{"line":51,"column":3},"end":{"line":51,"column":38}},"8":{"start":{"line":52,"column":3},"end":{"line":54,"column":4}},"9":{"start":{"line":53,"column":4},"end":{"line":53,"column":18}},"10":{"start":{"line":55,"column":3},"end":{"line":77,"column":6}},"11":{"start":{"line":56,"column":4},"end":{"line":56,"column":35}},"12":{"start":{"line":57,"column":4},"end":{"line":67,"column":5}},"13":{"start":{"line":58,"column":5},"end":{"line":58,"column":26}},"14":{"start":{"line":59,"column":5},"end":{"line":59,"column":27}},"15":{"start":{"line":60,"column":5},"end":{"line":60,"column":25}},"16":{"start":{"line":62,"column":5},"end":{"line":62,"column":41}},"17":{"start":{"line":63,"column":5},"end":{"line":63,"column":39}},"18":{"start":{"line":64,"column":5},"end":{"line":64,"column":41}},"19":{"start":{"line":65,"column":5},"end":{"line":65,"column":22}},"20":{"start":{"line":66,"column":5},"end":{"line":66,"column":25}},"21":{"start":{"line":69,"column":4},"end":{"line":76,"column":5}},"22":{"start":{"line":70,"column":5},"end":{"line":72,"column":14}},"23":{"start":{"line":73,"column":5},"end":{"line":73,"column":41}},"24":{"start":{"line":75,"column":5},"end":{"line":75,"column":51}},"25":{"start":{"line":81,"column":1},"end":{"line":116,"column":2}},"26":{"start":{"line":82,"column":2},"end":{"line":115,"column":5}},"27":{"start":{"line":83,"column":3},"end":{"line":83,"column":31}},"28":{"start":{"line":84,"column":3},"end":{"line":84,"column":38}},"29":{"start":{"line":85,"column":3},"end":{"line":85,"column":23}},"30":{"start":{"line":86,"column":3},"end":{"line":88,"column":4}},"31":{"start":{"line":87,"column":4},"end":{"line":87,"column":17}},"32":{"start":{"line":89,"column":3},"end":{"line":89,"column":18}},"33":{"start":{"line":91,"column":3},"end":{"line":103,"column":4}},"34":{"start":{"line":93,"column":5},"end":{"line":93,"column":15}},"35":{"start":{"line":94,"column":5},"end":{"line":94,"column":11}},"36":{"start":{"line":96,"column":5},"end":{"line":96,"column":15}},"37":{"start":{"line":97,"column":5},"end":{"line":97,"column":11}},"38":{"start":{"line":99,"column":5},"end":{"line":99,"column":23}},"39":{"start":{"line":100,"column":5},"end":{"line":100,"column":11}},"40":{"start":{"line":102,"column":5},"end":{"line":102,"column":13}},"41":{"start":{"line":105,"column":3},"end":{"line":105,"column":30}},"42":{"start":{"line":106,"column":3},"end":{"line":106,"column":21}},"43":{"start":{"line":108,"column":3},"end":{"line":108,"column":72}},"44":{"start":{"line":109,"column":3},"end":{"line":109,"column":86}},"45":{"start":{"line":110,"column":3},"end":{"line":110,"column":15}},"46":{"start":{"line":112,"column":3},"end":{"line":114,"column":12}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},{"start":{"line":3,"column":1},"end":{"line":3,"column":1}}]},"2":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":2},"end":{"line":4,"column":29}},{"start":{"line":4,"column":33},"end":{"line":4,"column":44}},{"start":{"line":5,"column":2},"end":{"line":5,"column":31}},{"start":{"line":5,"column":35},"end":{"line":5,"column":48}}]},"3":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":9},"end":{"line":17,"column":31}},{"start":{"line":17,"column":35},"end":{"line":17,"column":85}}]},"4":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":10},"end":{"line":23,"column":30}},{"start":{"line":23,"column":34},"end":{"line":23,"column":71}}]},"5":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":10},"end":{"line":29,"column":30}},{"start":{"line":29,"column":34},"end":{"line":29,"column":71}}]},"6":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":10},"end":{"line":38,"column":32}},{"start":{"line":38,"column":36},"end":{"line":38,"column":89}}]},"7":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":10},"end":{"line":44,"column":32}},{"start":{"line":44,"column":36},"end":{"line":44,"column":89}}]},"8":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"9":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":6},"end":{"line":50,"column":18}},{"start":{"line":50,"column":22},"end":{"line":50,"column":45}},{"start":{"line":50,"column":49},"end":{"line":50,"column":85}}]},"10":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":3},"end":{"line":52,"column":3}},{"start":{"line":52,"column":3},"end":{"line":52,"column":3}}]},"11":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":4}},{"start":{"line":57,"column":4},"end":{"line":57,"column":4}}]},"12":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":14},"end":{"line":62,"column":25}},{"start":{"line":62,"column":29},"end":{"line":62,"column":40}}]},"13":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":14},"end":{"line":63,"column":25}},{"start":{"line":63,"column":29},"end":{"line":63,"column":38}}]},"14":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":12},"end":{"line":64,"column":21}},{"start":{"line":64,"column":25},"end":{"line":64,"column":40}}]},"15":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]},"16":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":8},"end":{"line":69,"column":13}},{"start":{"line":69,"column":17},"end":{"line":69,"column":38}}]},"17":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":1},"end":{"line":81,"column":1}},{"start":{"line":81,"column":1},"end":{"line":81,"column":1}}]},"18":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":3},"end":{"line":86,"column":3}},{"start":{"line":86,"column":3},"end":{"line":86,"column":3}}]},"19":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":7},"end":{"line":86,"column":11}},{"start":{"line":86,"column":15},"end":{"line":86,"column":20}}]},"20":{"line":91,"type":"switch","locations":[{"start":{"line":92,"column":4},"end":{"line":94,"column":11}},{"start":{"line":95,"column":4},"end":{"line":97,"column":11}},{"start":{"line":98,"column":4},"end":{"line":100,"column":11}},{"start":{"line":101,"column":4},"end":{"line":102,"column":13}}]},"21":{"line":108,"type":"cond-expr","locations":[{"start":{"line":108,"column":18},"end":{"line":108,"column":23}},{"start":{"line":108,"column":26},"end":{"line":108,"column":34}}]}},"code":["(function() {","","\tif (","\t\ttypeof self !== 'undefined' && !self.Prism ||","\t\ttypeof global !== 'undefined' && !global.Prism","\t) {","\t\treturn;","\t}","","\tvar languages = {","\t\t'css': true,","\t\t'less': true,","\t\t'markup': {","\t\t\tlang: 'markup',","\t\t\tbefore: 'punctuation',","\t\t\tinside: 'inside',","\t\t\troot: Prism.languages.markup && Prism.languages.markup['tag'].inside['attr-value']","\t\t},","\t\t'sass': [","\t\t\t{","\t\t\t\tlang: 'sass',","\t\t\t\tinside: 'inside',","\t\t\t\troot: Prism.languages.sass && Prism.languages.sass['property-line']","\t\t\t},","\t\t\t{","\t\t\t\tlang: 'sass',","\t\t\t\tbefore: 'operator',","\t\t\t\tinside: 'inside',","\t\t\t\troot: Prism.languages.sass && Prism.languages.sass['variable-line']","\t\t\t}","\t\t],","\t\t'scss': true,","\t\t'stylus': [","\t\t\t{","\t\t\t\tlang: 'stylus',","\t\t\t\tbefore: 'func',","\t\t\t\tinside: 'rest',","\t\t\t\troot: Prism.languages.stylus && Prism.languages.stylus['property-declaration'].inside","\t\t\t},","\t\t\t{","\t\t\t\tlang: 'stylus',","\t\t\t\tbefore: 'func',","\t\t\t\tinside: 'rest',","\t\t\t\troot: Prism.languages.stylus && Prism.languages.stylus['variable-declaration'].inside","\t\t\t}","\t\t]","\t};","","\tPrism.hooks.add('before-highlight', function (env) {","\t\tif (env.language && languages[env.language] && !languages[env.language].initialized) {","\t\t\tvar lang = languages[env.language];","\t\t\tif (Prism.util.type(lang) !== 'Array') {","\t\t\t\tlang = [lang];","\t\t\t}","\t\t\tlang.forEach(function(lang) {","\t\t\t\tvar before, inside, root, skip;","\t\t\t\tif (lang === true) {","\t\t\t\t\tbefore = 'important';","\t\t\t\t\tinside = env.language;","\t\t\t\t\tlang = env.language;","\t\t\t\t} else {","\t\t\t\t\tbefore = lang.before || 'important';","\t\t\t\t\tinside = lang.inside || lang.lang;","\t\t\t\t\troot = lang.root || Prism.languages;","\t\t\t\t\tskip = lang.skip;","\t\t\t\t\tlang = env.language;","\t\t\t\t}","","\t\t\t\tif (!skip && Prism.languages[lang]) {","\t\t\t\t\tPrism.languages.insertBefore(inside, before, {","\t\t\t\t\t\t'angle': /(?:\\b|\\B-|(?=\\B\\.))\\d*\\.?\\d+(?:deg|g?rad|turn)\\b/i","\t\t\t\t\t}, root);","\t\t\t\t\tenv.grammar = Prism.languages[lang];","","\t\t\t\t\tlanguages[env.language] = {initialized: true};","\t\t\t\t}","\t\t\t});","\t\t}","\t});","","\tif (Prism.plugins.Previewer) {","\t\tnew Prism.plugins.Previewer('angle', function(value) {","\t\t\tvar num = parseFloat(value);","\t\t\tvar unit = value.match(/[a-z]+$/i);","\t\t\tvar max, percentage;","\t\t\tif (!num || !unit) {","\t\t\t\treturn false;","\t\t\t}","\t\t\tunit = unit[0];","","\t\t\tswitch(unit) {","\t\t\t\tcase 'deg':","\t\t\t\t\tmax = 360;","\t\t\t\t\tbreak;","\t\t\t\tcase 'grad':","\t\t\t\t\tmax = 400;","\t\t\t\t\tbreak;","\t\t\t\tcase 'rad':","\t\t\t\t\tmax = 2 * Math.PI;","\t\t\t\t\tbreak;","\t\t\t\tcase 'turn':","\t\t\t\t\tmax = 1;","\t\t\t}","","\t\t\tpercentage = 100 * num/max;","\t\t\tpercentage %= 100;","","\t\t\tthis[(num < 0? 'set' : 'remove') + 'Attribute']('data-negative', '');","\t\t\tthis.querySelector('circle').style.strokeDasharray = Math.abs(percentage) + ',500';","\t\t\treturn true;","\t\t}, '*', function () {","\t\t\tthis._elt.innerHTML = '<svg viewBox=\"0 0 64 64\">' +","\t\t\t\t'<circle r=\"16\" cy=\"32\" cx=\"32\"></circle>' +","\t\t\t'</svg>';","\t\t});","\t}","","}());"],"l":{"1":1,"3":1,"7":0,"10":1,"49":1,"50":0,"51":0,"52":0,"53":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"69":0,"70":0,"73":0,"75":0,"81":1,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"89":0,"91":0,"93":0,"94":0,"96":0,"97":0,"99":0,"100":0,"102":0,"105":0,"106":0,"108":0,"109":0,"110":0,"112":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/previewer-base/prism-previewer-base.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/previewer-base/prism-previewer-base.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0},"b":{"1":[1,0],"2":[1,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":12}}},"2":{"name":"(anonymous_2)","line":12,"loc":{"start":{"line":12,"column":17},"end":{"line":12,"column":36}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":17},"end":{"line":48,"column":75}}},"4":{"name":"(anonymous_4)","line":65,"loc":{"start":{"line":65,"column":29},"end":{"line":65,"column":45}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":28},"end":{"line":82,"column":40}}},"6":{"name":"(anonymous_6)","line":98,"loc":{"start":{"line":98,"column":29},"end":{"line":98,"column":46}}},"7":{"name":"(anonymous_7)","line":114,"loc":{"start":{"line":114,"column":32},"end":{"line":114,"column":43}}},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":28},"end":{"line":123,"column":40}}},"9":{"name":"(anonymous_9)","line":156,"loc":{"start":{"line":156,"column":28},"end":{"line":156,"column":40}}},"10":{"name":"(anonymous_10)","line":177,"loc":{"start":{"line":177,"column":24},"end":{"line":177,"column":45}}},"11":{"name":"(anonymous_11)","line":185,"loc":{"start":{"line":185,"column":36},"end":{"line":185,"column":49}}},"12":{"name":"(anonymous_12)","line":187,"loc":{"start":{"line":187,"column":22},"end":{"line":187,"column":43}}},"13":{"name":"(anonymous_13)","line":195,"loc":{"start":{"line":195,"column":36},"end":{"line":195,"column":51}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":201,"column":5}},"2":{"start":{"line":3,"column":1},"end":{"line":5,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":9}},"4":{"start":{"line":12,"column":1},"end":{"line":35,"column":3}},"5":{"start":{"line":13,"column":2},"end":{"line":13,"column":38}},"6":{"start":{"line":15,"column":2},"end":{"line":27,"column":3}},"7":{"start":{"line":16,"column":3},"end":{"line":19,"column":55}},"8":{"start":{"line":17,"column":4},"end":{"line":17,"column":26}},"9":{"start":{"line":18,"column":4},"end":{"line":18,"column":24}},"10":{"start":{"line":21,"column":3},"end":{"line":21,"column":16}},"11":{"start":{"line":23,"column":3},"end":{"line":26,"column":64}},"12":{"start":{"line":24,"column":4},"end":{"line":24,"column":26}},"13":{"start":{"line":25,"column":4},"end":{"line":25,"column":24}},"14":{"start":{"line":29,"column":2},"end":{"line":34,"column":4}},"15":{"start":{"line":37,"column":1},"end":{"line":37,"column":43}},"16":{"start":{"line":38,"column":1},"end":{"line":38,"column":46}},"17":{"start":{"line":39,"column":1},"end":{"line":39,"column":48}},"18":{"start":{"line":48,"column":1},"end":{"line":77,"column":3}},"19":{"start":{"line":49,"column":2},"end":{"line":49,"column":19}},"20":{"start":{"line":50,"column":2},"end":{"line":50,"column":20}},"21":{"start":{"line":51,"column":2},"end":{"line":51,"column":61}},"22":{"start":{"line":52,"column":2},"end":{"line":52,"column":21}},"23":{"start":{"line":53,"column":2},"end":{"line":53,"column":25}},"24":{"start":{"line":54,"column":2},"end":{"line":54,"column":44}},"25":{"start":{"line":55,"column":2},"end":{"line":55,"column":33}},"26":{"start":{"line":57,"column":2},"end":{"line":57,"column":18}},"27":{"start":{"line":59,"column":2},"end":{"line":61,"column":3}},"28":{"start":{"line":60,"column":3},"end":{"line":60,"column":30}},"29":{"start":{"line":62,"column":2},"end":{"line":64,"column":3}},"30":{"start":{"line":63,"column":3},"end":{"line":63,"column":45}},"31":{"start":{"line":65,"column":2},"end":{"line":75,"column":5}},"32":{"start":{"line":66,"column":3},"end":{"line":68,"column":4}},"33":{"start":{"line":67,"column":4},"end":{"line":67,"column":21}},"34":{"start":{"line":69,"column":3},"end":{"line":71,"column":4}},"35":{"start":{"line":70,"column":4},"end":{"line":70,"column":37}},"36":{"start":{"line":72,"column":3},"end":{"line":74,"column":4}},"37":{"start":{"line":73,"column":4},"end":{"line":73,"column":43}},"38":{"start":{"line":76,"column":2},"end":{"line":76,"column":32}},"39":{"start":{"line":82,"column":1},"end":{"line":92,"column":3}},"40":{"start":{"line":83,"column":2},"end":{"line":85,"column":3}},"41":{"start":{"line":84,"column":3},"end":{"line":84,"column":10}},"42":{"start":{"line":86,"column":2},"end":{"line":86,"column":44}},"43":{"start":{"line":87,"column":2},"end":{"line":87,"column":72}},"44":{"start":{"line":88,"column":2},"end":{"line":88,"column":39}},"45":{"start":{"line":89,"column":2},"end":{"line":91,"column":3}},"46":{"start":{"line":90,"column":3},"end":{"line":90,"column":22}},"47":{"start":{"line":98,"column":1},"end":{"line":109,"column":3}},"48":{"start":{"line":99,"column":2},"end":{"line":103,"column":36}},"49":{"start":{"line":100,"column":3},"end":{"line":102,"column":4}},"50":{"start":{"line":101,"column":4},"end":{"line":101,"column":10}},"51":{"start":{"line":105,"column":2},"end":{"line":108,"column":3}},"52":{"start":{"line":106,"column":3},"end":{"line":106,"column":23}},"53":{"start":{"line":107,"column":3},"end":{"line":107,"column":15}},"54":{"start":{"line":114,"column":1},"end":{"line":118,"column":3}},"55":{"start":{"line":115,"column":2},"end":{"line":115,"column":69}},"56":{"start":{"line":116,"column":2},"end":{"line":116,"column":21}},"57":{"start":{"line":117,"column":2},"end":{"line":117,"column":14}},"58":{"start":{"line":123,"column":1},"end":{"line":151,"column":3}},"59":{"start":{"line":124,"column":2},"end":{"line":126,"column":3}},"60":{"start":{"line":125,"column":3},"end":{"line":125,"column":15}},"61":{"start":{"line":127,"column":2},"end":{"line":129,"column":3}},"62":{"start":{"line":128,"column":3},"end":{"line":128,"column":10}},"63":{"start":{"line":131,"column":2},"end":{"line":150,"column":3}},"64":{"start":{"line":132,"column":3},"end":{"line":132,"column":67}},"65":{"start":{"line":134,"column":3},"end":{"line":134,"column":39}},"66":{"start":{"line":135,"column":3},"end":{"line":135,"column":36}},"67":{"start":{"line":137,"column":3},"end":{"line":145,"column":4}},"68":{"start":{"line":138,"column":4},"end":{"line":138,"column":73}},"69":{"start":{"line":139,"column":4},"end":{"line":139,"column":44}},"70":{"start":{"line":140,"column":4},"end":{"line":140,"column":32}},"71":{"start":{"line":142,"column":4},"end":{"line":142,"column":39}},"72":{"start":{"line":143,"column":4},"end":{"line":143,"column":50}},"73":{"start":{"line":144,"column":4},"end":{"line":144,"column":29}},"74":{"start":{"line":147,"column":3},"end":{"line":147,"column":90}},"75":{"start":{"line":149,"column":3},"end":{"line":149,"column":15}},"76":{"start":{"line":156,"column":1},"end":{"line":158,"column":3}},"77":{"start":{"line":157,"column":2},"end":{"line":157,"column":70}},"78":{"start":{"line":164,"column":1},"end":{"line":164,"column":28}},"79":{"start":{"line":170,"column":1},"end":{"line":170,"column":23}},"80":{"start":{"line":177,"column":1},"end":{"line":191,"column":3}},"81":{"start":{"line":178,"column":2},"end":{"line":178,"column":22}},"82":{"start":{"line":179,"column":2},"end":{"line":181,"column":3}},"83":{"start":{"line":180,"column":3},"end":{"line":180,"column":63}},"84":{"start":{"line":182,"column":2},"end":{"line":184,"column":3}},"85":{"start":{"line":183,"column":3},"end":{"line":183,"column":62}},"86":{"start":{"line":185,"column":2},"end":{"line":190,"column":12}},"87":{"start":{"line":186,"column":3},"end":{"line":186,"column":25}},"88":{"start":{"line":187,"column":3},"end":{"line":189,"column":6}},"89":{"start":{"line":188,"column":4},"end":{"line":188,"column":28}},"90":{"start":{"line":192,"column":1},"end":{"line":192,"column":37}},"91":{"start":{"line":195,"column":1},"end":{"line":199,"column":4}},"92":{"start":{"line":196,"column":2},"end":{"line":198,"column":3}},"93":{"start":{"line":197,"column":3},"end":{"line":197,"column":51}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},{"start":{"line":3,"column":1},"end":{"line":3,"column":1}}]},"2":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":5},"end":{"line":3,"column":32}},{"start":{"line":3,"column":36},"end":{"line":3,"column":47}},{"start":{"line":3,"column":51},"end":{"line":3,"column":65}},{"start":{"line":3,"column":69},"end":{"line":3,"column":93}}]},"3":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":2},"end":{"line":15,"column":2}},{"start":{"line":15,"column":2},"end":{"line":15,"column":2}}]},"4":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":13},"end":{"line":19,"column":33}},{"start":{"line":19,"column":38},"end":{"line":19,"column":53}}]},"5":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":13},"end":{"line":26,"column":31}},{"start":{"line":26,"column":36},"end":{"line":26,"column":62}}]},"6":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":2},"end":{"line":59,"column":2}},{"start":{"line":59,"column":2},"end":{"line":59,"column":2}}]},"7":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"8":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":3},"end":{"line":66,"column":3}},{"start":{"line":66,"column":3},"end":{"line":66,"column":3}}]},"9":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":3},"end":{"line":69,"column":3}},{"start":{"line":69,"column":3},"end":{"line":69,"column":3}}]},"10":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":3},"end":{"line":72,"column":3}},{"start":{"line":72,"column":3},"end":{"line":72,"column":3}}]},"11":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":2},"end":{"line":83,"column":2}},{"start":{"line":83,"column":2},"end":{"line":83,"column":2}}]},"12":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":2},"end":{"line":89,"column":2}},{"start":{"line":89,"column":2},"end":{"line":89,"column":2}}]},"13":{"line":100,"type":"if","locations":[{"start":{"line":100,"column":3},"end":{"line":100,"column":3}},{"start":{"line":100,"column":3},"end":{"line":100,"column":3}}]},"14":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":7},"end":{"line":100,"column":40}},{"start":{"line":100,"column":44},"end":{"line":100,"column":81}}]},"15":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":2},"end":{"line":105,"column":2}},{"start":{"line":105,"column":2},"end":{"line":105,"column":2}}]},"16":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":6},"end":{"line":105,"column":11}},{"start":{"line":105,"column":15},"end":{"line":105,"column":36}}]},"17":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":2},"end":{"line":124,"column":2}},{"start":{"line":124,"column":2},"end":{"line":124,"column":2}}]},"18":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":2},"end":{"line":127,"column":2}},{"start":{"line":127,"column":2},"end":{"line":127,"column":2}}]},"19":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":2},"end":{"line":131,"column":2}},{"start":{"line":131,"column":2},"end":{"line":131,"column":2}}]},"20":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":3},"end":{"line":137,"column":3}},{"start":{"line":137,"column":3},"end":{"line":137,"column":3}}]},"21":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":2},"end":{"line":179,"column":2}},{"start":{"line":179,"column":2},"end":{"line":179,"column":2}}]},"22":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":2},"end":{"line":182,"column":2}},{"start":{"line":182,"column":2},"end":{"line":182,"column":2}}]},"23":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":2},"end":{"line":196,"column":2}},{"start":{"line":196,"column":2},"end":{"line":196,"column":2}}]},"24":{"line":196,"type":"binary-expr","locations":[{"start":{"line":196,"column":5},"end":{"line":196,"column":31}},{"start":{"line":196,"column":35},"end":{"line":196,"column":70}}]}},"code":["(function() {","","\tif (typeof self === 'undefined' || !self.Prism || !self.document || !Function.prototype.bind) {","\t\treturn;","\t}","","\t/**","\t * Returns the absolute X, Y offsets for an element","\t * @param {HTMLElement} element","\t * @returns {{top: number, right: number, bottom: number, left: number}}","\t */","\tvar getOffset = function (element) {","\t\tvar left = 0, top = 0, el = element;","","\t\tif (el.parentNode) {","\t\t\tdo {","\t\t\t\tleft += el.offsetLeft;","\t\t\t\ttop += el.offsetTop;","\t\t\t} while ((el = el.offsetParent) && el.nodeType < 9);","","\t\t\tel = element;","","\t\t\tdo {","\t\t\t\tleft -= el.scrollLeft;","\t\t\t\ttop -= el.scrollTop;","\t\t\t} while ((el = el.parentNode) && !/body/i.test(el.nodeName));","\t\t}","","\t\treturn {","\t\t\ttop: top,","\t\t\tright: innerWidth - left - element.offsetWidth,","\t\t\tbottom: innerHeight - top - element.offsetHeight,","\t\t\tleft: left","\t\t};","\t};","","\tvar tokenRegexp = /(?:^|\\s)token(?=$|\\s)/;","\tvar activeRegexp = /(?:^|\\s)active(?=$|\\s)/g;","\tvar flippedRegexp = /(?:^|\\s)flipped(?=$|\\s)/g;","","\t/**","\t * Previewer constructor","\t * @param {string} type Unique previewer type","\t * @param {function} updater Function that will be called on mouseover.","\t * @param {string[]|string=} supportedLanguages Aliases of the languages this previewer must be enabled for. Defaults to \"*\", all languages.","\t * @constructor","\t */","\tvar Previewer = function (type, updater, supportedLanguages, initializer) {","\t\tthis._elt = null;","\t\tthis._type = type;","\t\tthis._clsRegexp = RegExp('(?:^|\\\\s)' + type + '(?=$|\\\\s)');","\t\tthis._token = null;","\t\tthis.updater = updater;","\t\tthis._mouseout = this.mouseout.bind(this);","\t\tthis.initializer = initializer;","","\t\tvar self = this;","","\t\tif (!supportedLanguages) {","\t\t\tsupportedLanguages = ['*'];","\t\t}","\t\tif (Prism.util.type(supportedLanguages) !== 'Array') {","\t\t\tsupportedLanguages = [supportedLanguages];","\t\t}","\t\tsupportedLanguages.forEach(function (lang) {","\t\t\tif (typeof lang !== 'string') {","\t\t\t\tlang = lang.lang;","\t\t\t}","\t\t\tif (!Previewer.byLanguages[lang]) {","\t\t\t\tPreviewer.byLanguages[lang] = [];","\t\t\t}","\t\t\tif (Previewer.byLanguages[lang].indexOf(self) < 0) {","\t\t\t\tPreviewer.byLanguages[lang].push(self);","\t\t\t}","\t\t});","\t\tPreviewer.byType[type] = this;","\t};","","\t/**","\t * Creates the HTML element for the previewer.","\t */","\tPreviewer.prototype.init = function () {","\t\tif (this._elt) {","\t\t\treturn;","\t\t}","\t\tthis._elt = document.createElement('div');","\t\tthis._elt.className = 'prism-previewer prism-previewer-' + this._type;","\t\tdocument.body.appendChild(this._elt);","\t\tif(this.initializer) {","\t\t\tthis.initializer();","\t\t}","\t};","","\t/**","\t * Checks the class name of each hovered element","\t * @param token","\t */","\tPreviewer.prototype.check = function (token) {","\t\tdo {","\t\t\tif (tokenRegexp.test(token.className) && this._clsRegexp.test(token.className)) {","\t\t\t\tbreak;","\t\t\t}","\t\t} while(token = token.parentNode);","","\t\tif (token && token !== this._token) {","\t\t\tthis._token = token;","\t\t\tthis.show();","\t\t}","\t};","","\t/**","\t * Called on mouseout","\t */","\tPreviewer.prototype.mouseout = function() {","\t\tthis._token.removeEventListener('mouseout', this._mouseout, false);","\t\tthis._token = null;","\t\tthis.hide();","\t};","","\t/**","\t * Shows the previewer positioned properly for the current token.","\t */","\tPreviewer.prototype.show = function () {","\t\tif (!this._elt) {","\t\t\tthis.init();","\t\t}","\t\tif (!this._token) {","\t\t\treturn;","\t\t}","","\t\tif (this.updater.call(this._elt, this._token.textContent)) {","\t\t\tthis._token.addEventListener('mouseout', this._mouseout, false);","","\t\t\tvar offset = getOffset(this._token);","\t\t\tthis._elt.className += ' active';","","\t\t\tif (offset.top - this._elt.offsetHeight > 0) {","\t\t\t\tthis._elt.className = this._elt.className.replace(flippedRegexp, '');","\t\t\t\tthis._elt.style.top = offset.top + 'px';","\t\t\t\tthis._elt.style.bottom = '';","\t\t\t} else {","\t\t\t\tthis._elt.className +=  ' flipped';","\t\t\t\tthis._elt.style.bottom = offset.bottom + 'px';","\t\t\t\tthis._elt.style.top = '';","\t\t\t}","","\t\t\tthis._elt.style.left = offset.left + Math.min(200, this._token.offsetWidth / 2) + 'px';","\t\t} else {","\t\t\tthis.hide();","\t\t}","\t};","","\t/**","\t * Hides the previewer.","\t */","\tPreviewer.prototype.hide = function () {","\t\tthis._elt.className = this._elt.className.replace(activeRegexp, '');","\t};","","\t/**","\t * Map of all registered previewers by language","\t * @type {{}}","\t */","\tPreviewer.byLanguages = {};","","\t/**","\t * Map of all registered previewers by type","\t * @type {{}}","\t */","\tPreviewer.byType = {};","","\t/**","\t * Initializes the mouseover event on the code block.","\t * @param {HTMLElement} elt The code block (env.element)","\t * @param {string} lang The language (env.language)","\t */","\tPreviewer.initEvents = function (elt, lang) {","\t\tvar previewers = [];","\t\tif (Previewer.byLanguages[lang]) {","\t\t\tpreviewers = previewers.concat(Previewer.byLanguages[lang]);","\t\t}","\t\tif (Previewer.byLanguages['*']) {","\t\t\tpreviewers = previewers.concat(Previewer.byLanguages['*']);","\t\t}","\t\telt.addEventListener('mouseover', function (e) {","\t\t\tvar target = e.target;","\t\t\tpreviewers.forEach(function (previewer) {","\t\t\t\tpreviewer.check(target);","\t\t\t});","\t\t}, false);","\t};","\tPrism.plugins.Previewer = Previewer;","","\t// Initialize the previewers only when needed","\tPrism.hooks.add('after-highlight', function (env) {","\t\tif(Previewer.byLanguages['*'] || Previewer.byLanguages[env.language]) {","\t\t\tPreviewer.initEvents(env.element, env.language);","\t\t}","\t});","","}());"],"l":{"1":1,"3":1,"4":1,"12":0,"13":0,"15":0,"16":0,"17":0,"18":0,"21":0,"23":0,"24":0,"25":0,"29":0,"37":0,"38":0,"39":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"57":0,"59":0,"60":0,"62":0,"63":0,"65":0,"66":0,"67":0,"69":0,"70":0,"72":0,"73":0,"76":0,"82":0,"83":0,"84":0,"86":0,"87":0,"88":0,"89":0,"90":0,"98":0,"99":0,"100":0,"101":0,"105":0,"106":0,"107":0,"114":0,"115":0,"116":0,"117":0,"123":0,"124":0,"125":0,"127":0,"128":0,"131":0,"132":0,"134":0,"135":0,"137":0,"138":0,"139":0,"140":0,"142":0,"143":0,"144":0,"147":0,"149":0,"156":0,"157":0,"164":0,"170":0,"177":0,"178":0,"179":0,"180":0,"182":0,"183":0,"185":0,"186":0,"187":0,"188":0,"192":0,"195":0,"196":0,"197":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/previewer-color/prism-previewer-color.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/previewer-color/prism-previewer-color.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0},"b":{"1":[0,1],"2":[1,0,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,1]},"f":{"1":1,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":12}}},"2":{"name":"(anonymous_2)","line":49,"loc":{"start":{"line":49,"column":37},"end":{"line":49,"column":52}}},"3":{"name":"(anonymous_3)","line":55,"loc":{"start":{"line":55,"column":16},"end":{"line":55,"column":31}}},"4":{"name":"(anonymous_4)","line":82,"loc":{"start":{"line":82,"column":39},"end":{"line":82,"column":55}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":89,"column":5}},"2":{"start":{"line":3,"column":1},"end":{"line":8,"column":2}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":9}},"4":{"start":{"line":10,"column":1},"end":{"line":47,"column":3}},"5":{"start":{"line":49,"column":1},"end":{"line":79,"column":4}},"6":{"start":{"line":50,"column":2},"end":{"line":78,"column":3}},"7":{"start":{"line":51,"column":3},"end":{"line":51,"column":38}},"8":{"start":{"line":52,"column":3},"end":{"line":54,"column":4}},"9":{"start":{"line":53,"column":4},"end":{"line":53,"column":18}},"10":{"start":{"line":55,"column":3},"end":{"line":77,"column":6}},"11":{"start":{"line":56,"column":4},"end":{"line":56,"column":35}},"12":{"start":{"line":57,"column":4},"end":{"line":67,"column":5}},"13":{"start":{"line":58,"column":5},"end":{"line":58,"column":26}},"14":{"start":{"line":59,"column":5},"end":{"line":59,"column":27}},"15":{"start":{"line":60,"column":5},"end":{"line":60,"column":25}},"16":{"start":{"line":62,"column":5},"end":{"line":62,"column":41}},"17":{"start":{"line":63,"column":5},"end":{"line":63,"column":39}},"18":{"start":{"line":64,"column":5},"end":{"line":64,"column":41}},"19":{"start":{"line":65,"column":5},"end":{"line":65,"column":22}},"20":{"start":{"line":66,"column":5},"end":{"line":66,"column":25}},"21":{"start":{"line":69,"column":4},"end":{"line":76,"column":5}},"22":{"start":{"line":70,"column":5},"end":{"line":72,"column":14}},"23":{"start":{"line":73,"column":5},"end":{"line":73,"column":41}},"24":{"start":{"line":75,"column":5},"end":{"line":75,"column":51}},"25":{"start":{"line":81,"column":1},"end":{"line":87,"column":2}},"26":{"start":{"line":82,"column":2},"end":{"line":86,"column":5}},"27":{"start":{"line":83,"column":3},"end":{"line":83,"column":35}},"28":{"start":{"line":84,"column":3},"end":{"line":84,"column":38}},"29":{"start":{"line":85,"column":3},"end":{"line":85,"column":39}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},{"start":{"line":3,"column":1},"end":{"line":3,"column":1}}]},"2":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":2},"end":{"line":4,"column":29}},{"start":{"line":4,"column":33},"end":{"line":4,"column":44}},{"start":{"line":5,"column":2},"end":{"line":5,"column":31}},{"start":{"line":5,"column":35},"end":{"line":5,"column":48}}]},"3":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":9},"end":{"line":17,"column":31}},{"start":{"line":17,"column":35},"end":{"line":17,"column":85}}]},"4":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":10},"end":{"line":24,"column":30}},{"start":{"line":24,"column":34},"end":{"line":24,"column":71}}]},"5":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":10},"end":{"line":29,"column":30}},{"start":{"line":29,"column":34},"end":{"line":29,"column":71}}]},"6":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":10},"end":{"line":38,"column":32}},{"start":{"line":38,"column":36},"end":{"line":38,"column":89}}]},"7":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":10},"end":{"line":44,"column":32}},{"start":{"line":44,"column":36},"end":{"line":44,"column":89}}]},"8":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"9":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":6},"end":{"line":50,"column":18}},{"start":{"line":50,"column":22},"end":{"line":50,"column":45}},{"start":{"line":50,"column":49},"end":{"line":50,"column":85}}]},"10":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":3},"end":{"line":52,"column":3}},{"start":{"line":52,"column":3},"end":{"line":52,"column":3}}]},"11":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":4}},{"start":{"line":57,"column":4},"end":{"line":57,"column":4}}]},"12":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":14},"end":{"line":62,"column":25}},{"start":{"line":62,"column":29},"end":{"line":62,"column":40}}]},"13":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":14},"end":{"line":63,"column":25}},{"start":{"line":63,"column":29},"end":{"line":63,"column":38}}]},"14":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":12},"end":{"line":64,"column":21}},{"start":{"line":64,"column":25},"end":{"line":64,"column":40}}]},"15":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]},"16":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":8},"end":{"line":69,"column":13}},{"start":{"line":69,"column":17},"end":{"line":69,"column":38}}]},"17":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":1},"end":{"line":81,"column":1}},{"start":{"line":81,"column":1},"end":{"line":81,"column":1}}]}},"code":["(function() {","","\tif (","\t\ttypeof self !== 'undefined' && !self.Prism ||","\t\ttypeof global !== 'undefined' && !global.Prism","\t) {","\t\treturn;","\t}","","\tvar languages = {","\t\t'css': true,","\t\t'less': true,","\t\t'markup': {","\t\t\tlang: 'markup',","\t\t\tbefore: 'punctuation',","\t\t\tinside: 'inside',","\t\t\troot: Prism.languages.markup && Prism.languages.markup['tag'].inside['attr-value']","\t\t},","\t\t'sass': [","\t\t\t{","\t\t\t\tlang: 'sass',","\t\t\t\tbefore: 'punctuation',","\t\t\t\tinside: 'inside',","\t\t\t\troot: Prism.languages.sass && Prism.languages.sass['variable-line']","\t\t\t},","\t\t\t{","\t\t\t\tlang: 'sass',","\t\t\t\tinside: 'inside',","\t\t\t\troot: Prism.languages.sass && Prism.languages.sass['property-line']","\t\t\t}","\t\t],","\t\t'scss': true,","\t\t'stylus': [","\t\t\t{","\t\t\t\tlang: 'stylus',","\t\t\t\tbefore: 'hexcode',","\t\t\t\tinside: 'rest',","\t\t\t\troot: Prism.languages.stylus && Prism.languages.stylus['property-declaration'].inside","\t\t\t},","\t\t\t{","\t\t\t\tlang: 'stylus',","\t\t\t\tbefore: 'hexcode',","\t\t\t\tinside: 'rest',","\t\t\t\troot: Prism.languages.stylus && Prism.languages.stylus['variable-declaration'].inside","\t\t\t}","\t\t]","\t};","","\tPrism.hooks.add('before-highlight', function (env) {","\t\tif (env.language && languages[env.language] && !languages[env.language].initialized) {","\t\t\tvar lang = languages[env.language];","\t\t\tif (Prism.util.type(lang) !== 'Array') {","\t\t\t\tlang = [lang];","\t\t\t}","\t\t\tlang.forEach(function(lang) {","\t\t\t\tvar before, inside, root, skip;","\t\t\t\tif (lang === true) {","\t\t\t\t\tbefore = 'important';","\t\t\t\t\tinside = env.language;","\t\t\t\t\tlang = env.language;","\t\t\t\t} else {","\t\t\t\t\tbefore = lang.before || 'important';","\t\t\t\t\tinside = lang.inside || lang.lang;","\t\t\t\t\troot = lang.root || Prism.languages;","\t\t\t\t\tskip = lang.skip;","\t\t\t\t\tlang = env.language;","\t\t\t\t}","","\t\t\t\tif (!skip && Prism.languages[lang]) {","\t\t\t\t\tPrism.languages.insertBefore(inside, before, {","\t\t\t\t\t\t'color': /\\B#(?:[0-9a-f]{3}){1,2}\\b|\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B|\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGray|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGray|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGray|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gray|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGray|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGray|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGray|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i","\t\t\t\t\t}, root);","\t\t\t\t\tenv.grammar = Prism.languages[lang];","","\t\t\t\t\tlanguages[env.language] = {initialized: true};","\t\t\t\t}","\t\t\t});","\t\t}","\t});","","\tif (Prism.plugins.Previewer) {","\t\tnew Prism.plugins.Previewer('color', function(value) {","\t\t\tthis.style.backgroundColor = '';","\t\t\tthis.style.backgroundColor = value;","\t\t\treturn !!this.style.backgroundColor;","\t\t});","\t}","","}());"],"l":{"1":1,"3":1,"7":0,"10":1,"49":1,"50":0,"51":0,"52":0,"53":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"69":0,"70":0,"73":0,"75":0,"81":1,"82":0,"83":0,"84":0,"85":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/previewer-easing/prism-previewer-easing.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/previewer-easing/prism-previewer-easing.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0},"b":{"1":[0,1],"2":[1,0,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,1],"17":[0,0],"18":[0,0],"19":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":12}}},"2":{"name":"(anonymous_2)","line":43,"loc":{"start":{"line":43,"column":37},"end":{"line":43,"column":52}}},"3":{"name":"(anonymous_3)","line":49,"loc":{"start":{"line":49,"column":16},"end":{"line":49,"column":31}}},"4":{"name":"(anonymous_4)","line":76,"loc":{"start":{"line":76,"column":40},"end":{"line":76,"column":57}}},"5":{"name":"(anonymous_5)","line":89,"loc":{"start":{"line":89,"column":14},"end":{"line":89,"column":29}}},"6":{"name":"(anonymous_6)","line":103,"loc":{"start":{"line":103,"column":10},"end":{"line":103,"column":22}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":117,"column":5}},"2":{"start":{"line":3,"column":1},"end":{"line":8,"column":2}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":9}},"4":{"start":{"line":10,"column":1},"end":{"line":41,"column":3}},"5":{"start":{"line":43,"column":1},"end":{"line":73,"column":4}},"6":{"start":{"line":44,"column":2},"end":{"line":72,"column":3}},"7":{"start":{"line":45,"column":3},"end":{"line":45,"column":38}},"8":{"start":{"line":46,"column":3},"end":{"line":48,"column":4}},"9":{"start":{"line":47,"column":4},"end":{"line":47,"column":18}},"10":{"start":{"line":49,"column":3},"end":{"line":71,"column":6}},"11":{"start":{"line":50,"column":4},"end":{"line":50,"column":35}},"12":{"start":{"line":51,"column":4},"end":{"line":61,"column":5}},"13":{"start":{"line":52,"column":5},"end":{"line":52,"column":26}},"14":{"start":{"line":53,"column":5},"end":{"line":53,"column":27}},"15":{"start":{"line":54,"column":5},"end":{"line":54,"column":25}},"16":{"start":{"line":56,"column":5},"end":{"line":56,"column":41}},"17":{"start":{"line":57,"column":5},"end":{"line":57,"column":39}},"18":{"start":{"line":58,"column":5},"end":{"line":58,"column":41}},"19":{"start":{"line":59,"column":5},"end":{"line":59,"column":22}},"20":{"start":{"line":60,"column":5},"end":{"line":60,"column":25}},"21":{"start":{"line":63,"column":4},"end":{"line":70,"column":5}},"22":{"start":{"line":64,"column":5},"end":{"line":66,"column":14}},"23":{"start":{"line":67,"column":5},"end":{"line":67,"column":41}},"24":{"start":{"line":69,"column":5},"end":{"line":69,"column":51}},"25":{"start":{"line":75,"column":1},"end":{"line":115,"column":2}},"26":{"start":{"line":76,"column":2},"end":{"line":114,"column":5}},"27":{"start":{"line":78,"column":3},"end":{"line":84,"column":21}},"28":{"start":{"line":86,"column":3},"end":{"line":86,"column":39}},"29":{"start":{"line":88,"column":3},"end":{"line":100,"column":4}},"30":{"start":{"line":89,"column":4},"end":{"line":89,"column":67}},"31":{"start":{"line":89,"column":31},"end":{"line":89,"column":63}},"32":{"start":{"line":91,"column":4},"end":{"line":91,"column":120}},"33":{"start":{"line":93,"column":4},"end":{"line":93,"column":46}},"34":{"start":{"line":94,"column":4},"end":{"line":94,"column":38}},"35":{"start":{"line":95,"column":4},"end":{"line":95,"column":38}},"36":{"start":{"line":96,"column":4},"end":{"line":96,"column":38}},"37":{"start":{"line":97,"column":4},"end":{"line":97,"column":38}},"38":{"start":{"line":99,"column":4},"end":{"line":99,"column":16}},"39":{"start":{"line":102,"column":3},"end":{"line":102,"column":16}},"40":{"start":{"line":104,"column":3},"end":{"line":113,"column":12}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},{"start":{"line":3,"column":1},"end":{"line":3,"column":1}}]},"2":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":2},"end":{"line":4,"column":29}},{"start":{"line":4,"column":33},"end":{"line":4,"column":44}},{"start":{"line":5,"column":2},"end":{"line":5,"column":31}},{"start":{"line":5,"column":35},"end":{"line":5,"column":48}}]},"3":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":10},"end":{"line":18,"column":30}},{"start":{"line":18,"column":34},"end":{"line":18,"column":71}}]},"4":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":10},"end":{"line":23,"column":30}},{"start":{"line":23,"column":34},"end":{"line":23,"column":71}}]},"5":{"line":32,"type":"binary-expr","locations":[{"start":{"line":32,"column":10},"end":{"line":32,"column":32}},{"start":{"line":32,"column":36},"end":{"line":32,"column":89}}]},"6":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":10},"end":{"line":38,"column":32}},{"start":{"line":38,"column":36},"end":{"line":38,"column":89}}]},"7":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":2},"end":{"line":44,"column":2}},{"start":{"line":44,"column":2},"end":{"line":44,"column":2}}]},"8":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":6},"end":{"line":44,"column":18}},{"start":{"line":44,"column":22},"end":{"line":44,"column":45}},{"start":{"line":44,"column":49},"end":{"line":44,"column":85}}]},"9":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":3},"end":{"line":46,"column":3}},{"start":{"line":46,"column":3},"end":{"line":46,"column":3}}]},"10":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]},"11":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":25}},{"start":{"line":56,"column":29},"end":{"line":56,"column":40}}]},"12":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":14},"end":{"line":57,"column":25}},{"start":{"line":57,"column":29},"end":{"line":57,"column":38}}]},"13":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":12},"end":{"line":58,"column":21}},{"start":{"line":58,"column":25},"end":{"line":58,"column":40}}]},"14":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":4},"end":{"line":63,"column":4}},{"start":{"line":63,"column":4},"end":{"line":63,"column":4}}]},"15":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":8},"end":{"line":63,"column":13}},{"start":{"line":63,"column":17},"end":{"line":63,"column":38}}]},"16":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":1},"end":{"line":75,"column":1}},{"start":{"line":75,"column":1},"end":{"line":75,"column":1}}]},"17":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":11},"end":{"line":84,"column":11}},{"start":{"line":84,"column":15},"end":{"line":84,"column":20}}]},"18":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":3},"end":{"line":88,"column":3}},{"start":{"line":88,"column":3},"end":{"line":88,"column":3}}]},"19":{"line":89,"type":"cond-expr","locations":[{"start":{"line":89,"column":46},"end":{"line":89,"column":51}},{"start":{"line":89,"column":54},"end":{"line":89,"column":55}}]}},"code":["(function() {","","\tif (","\t\ttypeof self !== 'undefined' && !self.Prism ||","\t\ttypeof global !== 'undefined' && !global.Prism","\t) {","\t\treturn;","\t}","","\tvar languages = {","\t\t'css': true,","\t\t'less': true,","\t\t'sass': [","\t\t\t{","\t\t\t\tlang: 'sass',","\t\t\t\tinside: 'inside',","\t\t\t\tbefore: 'punctuation',","\t\t\t\troot: Prism.languages.sass && Prism.languages.sass['variable-line']","\t\t\t},","\t\t\t{","\t\t\t\tlang: 'sass',","\t\t\t\tinside: 'inside',","\t\t\t\troot: Prism.languages.sass && Prism.languages.sass['property-line']","\t\t\t}","\t\t],","\t\t'scss': true,","\t\t'stylus': [","\t\t\t{","\t\t\t\tlang: 'stylus',","\t\t\t\tbefore: 'hexcode',","\t\t\t\tinside: 'rest',","\t\t\t\troot: Prism.languages.stylus && Prism.languages.stylus['property-declaration'].inside","\t\t\t},","\t\t\t{","\t\t\t\tlang: 'stylus',","\t\t\t\tbefore: 'hexcode',","\t\t\t\tinside: 'rest',","\t\t\t\troot: Prism.languages.stylus && Prism.languages.stylus['variable-declaration'].inside","\t\t\t}","\t\t]","\t};","","\tPrism.hooks.add('before-highlight', function (env) {","\t\tif (env.language && languages[env.language] && !languages[env.language].initialized) {","\t\t\tvar lang = languages[env.language];","\t\t\tif (Prism.util.type(lang) !== 'Array') {","\t\t\t\tlang = [lang];","\t\t\t}","\t\t\tlang.forEach(function(lang) {","\t\t\t\tvar before, inside, root, skip;","\t\t\t\tif (lang === true) {","\t\t\t\t\tbefore = 'important';","\t\t\t\t\tinside = env.language;","\t\t\t\t\tlang = env.language;","\t\t\t\t} else {","\t\t\t\t\tbefore = lang.before || 'important';","\t\t\t\t\tinside = lang.inside || lang.lang;","\t\t\t\t\troot = lang.root || Prism.languages;","\t\t\t\t\tskip = lang.skip;","\t\t\t\t\tlang = env.language;","\t\t\t\t}","","\t\t\t\tif (!skip && Prism.languages[lang]) {","\t\t\t\t\tPrism.languages.insertBefore(inside, before, {","\t\t\t\t\t\t'easing': /\\bcubic-bezier\\((?:-?\\d*\\.?\\d+,\\s*){3}-?\\d*\\.?\\d+\\)\\B|\\b(?:linear|ease(?:-in)?(?:-out)?)(?=\\s|[;}]|$)/i","\t\t\t\t\t}, root);","\t\t\t\t\tenv.grammar = Prism.languages[lang];","","\t\t\t\t\tlanguages[env.language] = {initialized: true};","\t\t\t\t}","\t\t\t});","\t\t}","\t});","","\tif (Prism.plugins.Previewer) {","\t\tnew Prism.plugins.Previewer('easing', function (value) {","","\t\t\tvalue = {","\t\t\t\t'linear': '0,0,1,1',","\t\t\t\t'ease': '.25,.1,.25,1',","\t\t\t\t'ease-in': '.42,0,1,1',","\t\t\t\t'ease-out': '0,0,.58,1',","\t\t\t\t'ease-in-out':'.42,0,.58,1'","\t\t\t}[value] || value;","","\t\t\tvar p = value.match(/-?\\d*\\.?\\d+/g);","","\t\t\tif(p.length === 4) {","\t\t\t\tp = p.map(function(p, i) { return (i % 2? 1 - p : p) * 100; });","","\t\t\t\tthis.querySelector('path').setAttribute('d', 'M0,100 C' + p[0] + ',' + p[1] + ', ' + p[2] + ',' + p[3] + ', 100,0');","","\t\t\t\tvar lines = this.querySelectorAll('line');","\t\t\t\tlines[0].setAttribute('x2', p[0]);","\t\t\t\tlines[0].setAttribute('y2', p[1]);","\t\t\t\tlines[1].setAttribute('x2', p[2]);","\t\t\t\tlines[1].setAttribute('y2', p[3]);","","\t\t\t\treturn true;","\t\t\t}","","\t\t\treturn false;","\t\t}, '*', function () {","\t\t\tthis._elt.innerHTML = '<svg viewBox=\"-20 -20 140 140\" width=\"100\" height=\"100\">' +","\t\t\t\t'<defs>' +","\t\t\t\t\t'<marker id=\"prism-previewer-easing-marker\" viewBox=\"0 0 4 4\" refX=\"2\" refY=\"2\" markerUnits=\"strokeWidth\">' +","\t\t\t\t\t\t'<circle cx=\"2\" cy=\"2\" r=\"1.5\" />' +","\t\t\t\t\t'</marker>' +","\t\t\t\t'</defs>' +","\t\t\t\t'<path d=\"M0,100 C20,50, 40,30, 100,0\" />' +","\t\t\t\t'<line x1=\"0\" y1=\"100\" x2=\"20\" y2=\"50\" marker-start=\"url(' + location.href + '#prism-previewer-easing-marker)\" marker-end=\"url(' + location.href + '#prism-previewer-easing-marker)\" />' +","\t\t\t\t'<line x1=\"100\" y1=\"0\" x2=\"40\" y2=\"30\" marker-start=\"url(' + location.href + '#prism-previewer-easing-marker)\" marker-end=\"url(' + location.href + '#prism-previewer-easing-marker)\" />' +","\t\t\t'</svg>';","\t\t});","\t}","","}());"],"l":{"1":1,"3":1,"7":0,"10":1,"43":1,"44":0,"45":0,"46":0,"47":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"56":0,"57":0,"58":0,"59":0,"60":0,"63":0,"64":0,"67":0,"69":0,"75":1,"76":0,"78":0,"86":0,"88":0,"89":0,"91":0,"93":0,"94":0,"95":0,"96":0,"97":0,"99":0,"102":0,"104":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/previewer-gradient/prism-previewer-gradient.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/previewer-gradient/prism-previewer-gradient.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":0,"86":0,"87":0,"88":0,"89":0},"b":{"1":[0,1],"2":[1,0,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,1]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":12}}},"2":{"name":"(anonymous_2)","line":44,"loc":{"start":{"line":44,"column":37},"end":{"line":44,"column":52}}},"3":{"name":"(anonymous_3)","line":50,"loc":{"start":{"line":50,"column":16},"end":{"line":50,"column":31}}},"4":{"name":"(anonymous_4)","line":93,"loc":{"start":{"line":93,"column":34},"end":{"line":93,"column":65}}},"5":{"name":"(anonymous_5)","line":142,"loc":{"start":{"line":142,"column":34},"end":{"line":142,"column":65}}},"6":{"name":"(anonymous_6)","line":184,"loc":{"start":{"line":184,"column":28},"end":{"line":184,"column":47}}},"7":{"name":"(anonymous_7)","line":207,"loc":{"start":{"line":207,"column":42},"end":{"line":207,"column":58}}},"8":{"name":"(anonymous_8)","line":211,"loc":{"start":{"line":211,"column":10},"end":{"line":211,"column":22}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":216,"column":5}},"2":{"start":{"line":3,"column":1},"end":{"line":8,"column":2}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":9}},"4":{"start":{"line":10,"column":1},"end":{"line":42,"column":3}},"5":{"start":{"line":44,"column":1},"end":{"line":81,"column":4}},"6":{"start":{"line":45,"column":2},"end":{"line":80,"column":3}},"7":{"start":{"line":46,"column":3},"end":{"line":46,"column":38}},"8":{"start":{"line":47,"column":3},"end":{"line":49,"column":4}},"9":{"start":{"line":48,"column":4},"end":{"line":48,"column":18}},"10":{"start":{"line":50,"column":3},"end":{"line":79,"column":6}},"11":{"start":{"line":51,"column":4},"end":{"line":51,"column":35}},"12":{"start":{"line":52,"column":4},"end":{"line":63,"column":5}},"13":{"start":{"line":54,"column":5},"end":{"line":54,"column":105}},"14":{"start":{"line":55,"column":5},"end":{"line":55,"column":27}},"15":{"start":{"line":56,"column":5},"end":{"line":56,"column":25}},"16":{"start":{"line":58,"column":5},"end":{"line":58,"column":41}},"17":{"start":{"line":59,"column":5},"end":{"line":59,"column":39}},"18":{"start":{"line":60,"column":5},"end":{"line":60,"column":41}},"19":{"start":{"line":61,"column":5},"end":{"line":61,"column":22}},"20":{"start":{"line":62,"column":5},"end":{"line":62,"column":25}},"21":{"start":{"line":65,"column":4},"end":{"line":78,"column":5}},"22":{"start":{"line":66,"column":5},"end":{"line":74,"column":14}},"23":{"start":{"line":75,"column":5},"end":{"line":75,"column":41}},"24":{"start":{"line":77,"column":5},"end":{"line":77,"column":51}},"25":{"start":{"line":85,"column":1},"end":{"line":85,"column":16}},"26":{"start":{"line":93,"column":1},"end":{"line":134,"column":3}},"27":{"start":{"line":95,"column":2},"end":{"line":95,"column":23}},"28":{"start":{"line":97,"column":2},"end":{"line":131,"column":3}},"29":{"start":{"line":98,"column":3},"end":{"line":98,"column":26}},"30":{"start":{"line":99,"column":3},"end":{"line":130,"column":4}},"31":{"start":{"line":102,"column":4},"end":{"line":129,"column":5}},"32":{"start":{"line":103,"column":5},"end":{"line":109,"column":6}},"33":{"start":{"line":104,"column":6},"end":{"line":104,"column":32}},"34":{"start":{"line":105,"column":12},"end":{"line":109,"column":6}},"35":{"start":{"line":106,"column":6},"end":{"line":106,"column":31}},"36":{"start":{"line":108,"column":6},"end":{"line":108,"column":26}},"37":{"start":{"line":110,"column":11},"end":{"line":129,"column":5}},"38":{"start":{"line":111,"column":5},"end":{"line":117,"column":6}},"39":{"start":{"line":112,"column":6},"end":{"line":112,"column":29}},"40":{"start":{"line":113,"column":12},"end":{"line":117,"column":6}},"41":{"start":{"line":114,"column":6},"end":{"line":114,"column":28}},"42":{"start":{"line":116,"column":6},"end":{"line":116,"column":23}},"43":{"start":{"line":118,"column":11},"end":{"line":129,"column":5}},"44":{"start":{"line":119,"column":5},"end":{"line":119,"column":24}},"45":{"start":{"line":120,"column":11},"end":{"line":129,"column":5}},"46":{"start":{"line":121,"column":5},"end":{"line":121,"column":23}},"47":{"start":{"line":122,"column":11},"end":{"line":129,"column":5}},"48":{"start":{"line":124,"column":5},"end":{"line":128,"column":6}},"49":{"start":{"line":125,"column":6},"end":{"line":125,"column":47}},"50":{"start":{"line":126,"column":12},"end":{"line":128,"column":6}},"51":{"start":{"line":127,"column":6},"end":{"line":127,"column":56}},"52":{"start":{"line":133,"column":2},"end":{"line":133,"column":59}},"53":{"start":{"line":142,"column":1},"end":{"line":177,"column":3}},"54":{"start":{"line":143,"column":2},"end":{"line":175,"column":3}},"55":{"start":{"line":147,"column":3},"end":{"line":147,"column":27}},"56":{"start":{"line":148,"column":3},"end":{"line":148,"column":25}},"57":{"start":{"line":149,"column":3},"end":{"line":149,"column":32}},"58":{"start":{"line":151,"column":3},"end":{"line":155,"column":4}},"59":{"start":{"line":154,"column":4},"end":{"line":154,"column":68}},"60":{"start":{"line":156,"column":3},"end":{"line":172,"column":4}},"61":{"start":{"line":158,"column":4},"end":{"line":158,"column":53}},"62":{"start":{"line":159,"column":4},"end":{"line":161,"column":5}},"63":{"start":{"line":160,"column":5},"end":{"line":160,"column":36}},"64":{"start":{"line":162,"column":4},"end":{"line":164,"column":5}},"65":{"start":{"line":163,"column":5},"end":{"line":163,"column":35}},"66":{"start":{"line":167,"column":4},"end":{"line":171,"column":5}},"67":{"start":{"line":168,"column":5},"end":{"line":168,"column":30}},"68":{"start":{"line":169,"column":11},"end":{"line":171,"column":5}},"69":{"start":{"line":170,"column":5},"end":{"line":170,"column":28}},"70":{"start":{"line":174,"column":3},"end":{"line":174,"column":93}},"71":{"start":{"line":176,"column":2},"end":{"line":176,"column":45}},"72":{"start":{"line":184,"column":1},"end":{"line":202,"column":3}},"73":{"start":{"line":185,"column":2},"end":{"line":187,"column":3}},"74":{"start":{"line":186,"column":3},"end":{"line":186,"column":26}},"75":{"start":{"line":188,"column":2},"end":{"line":188,"column":97}},"76":{"start":{"line":190,"column":2},"end":{"line":190,"column":33}},"77":{"start":{"line":192,"column":2},"end":{"line":192,"column":31}},"78":{"start":{"line":194,"column":2},"end":{"line":194,"column":128}},"79":{"start":{"line":196,"column":2},"end":{"line":200,"column":3}},"80":{"start":{"line":197,"column":3},"end":{"line":197,"column":77}},"81":{"start":{"line":198,"column":9},"end":{"line":200,"column":3}},"82":{"start":{"line":199,"column":3},"end":{"line":199,"column":77}},"83":{"start":{"line":201,"column":2},"end":{"line":201,"column":63}},"84":{"start":{"line":206,"column":1},"end":{"line":214,"column":2}},"85":{"start":{"line":207,"column":2},"end":{"line":213,"column":5}},"86":{"start":{"line":208,"column":3},"end":{"line":208,"column":46}},"87":{"start":{"line":209,"column":3},"end":{"line":209,"column":71}},"88":{"start":{"line":210,"column":3},"end":{"line":210,"column":50}},"89":{"start":{"line":212,"column":3},"end":{"line":212,"column":39}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},{"start":{"line":3,"column":1},"end":{"line":3,"column":1}}]},"2":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":2},"end":{"line":4,"column":29}},{"start":{"line":4,"column":33},"end":{"line":4,"column":44}},{"start":{"line":5,"column":2},"end":{"line":5,"column":31}},{"start":{"line":5,"column":35},"end":{"line":5,"column":48}}]},"3":{"line":18,"type":"binary-expr","locations":[{"start":{"line":18,"column":10},"end":{"line":18,"column":30}},{"start":{"line":18,"column":34},"end":{"line":18,"column":71}}]},"4":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":10},"end":{"line":24,"column":30}},{"start":{"line":24,"column":34},"end":{"line":24,"column":71}}]},"5":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":10},"end":{"line":33,"column":32}},{"start":{"line":33,"column":36},"end":{"line":33,"column":89}}]},"6":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":10},"end":{"line":39,"column":32}},{"start":{"line":39,"column":36},"end":{"line":39,"column":89}}]},"7":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"8":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":18}},{"start":{"line":45,"column":22},"end":{"line":45,"column":45}},{"start":{"line":45,"column":49},"end":{"line":45,"column":85}}]},"9":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":3},"end":{"line":47,"column":3}},{"start":{"line":47,"column":3},"end":{"line":47,"column":3}}]},"10":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"11":{"line":54,"type":"cond-expr","locations":[{"start":{"line":54,"column":83},"end":{"line":54,"column":90}},{"start":{"line":54,"column":93},"end":{"line":54,"column":104}}]},"12":{"line":54,"type":"binary-expr","locations":[{"start":{"line":54,"column":14},"end":{"line":54,"column":37}},{"start":{"line":54,"column":41},"end":{"line":54,"column":80}}]},"13":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":14},"end":{"line":58,"column":25}},{"start":{"line":58,"column":29},"end":{"line":58,"column":40}}]},"14":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":14},"end":{"line":59,"column":25}},{"start":{"line":59,"column":29},"end":{"line":59,"column":38}}]},"15":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":12},"end":{"line":60,"column":21}},{"start":{"line":60,"column":25},"end":{"line":60,"column":40}}]},"16":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":65,"column":4}},{"start":{"line":65,"column":4},"end":{"line":65,"column":4}}]},"17":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":8},"end":{"line":65,"column":13}},{"start":{"line":65,"column":17},"end":{"line":65,"column":38}}]},"18":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":2},"end":{"line":97,"column":2}},{"start":{"line":97,"column":2},"end":{"line":97,"column":2}}]},"19":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":3},"end":{"line":99,"column":3}},{"start":{"line":99,"column":3},"end":{"line":99,"column":3}}]},"20":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":4},"end":{"line":102,"column":4}},{"start":{"line":102,"column":4},"end":{"line":102,"column":4}}]},"21":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":5},"end":{"line":103,"column":5}},{"start":{"line":103,"column":5},"end":{"line":103,"column":5}}]},"22":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":12},"end":{"line":105,"column":12}},{"start":{"line":105,"column":12},"end":{"line":105,"column":12}}]},"23":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":11},"end":{"line":110,"column":11}},{"start":{"line":110,"column":11},"end":{"line":110,"column":11}}]},"24":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":5},"end":{"line":111,"column":5}},{"start":{"line":111,"column":5},"end":{"line":111,"column":5}}]},"25":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":12},"end":{"line":113,"column":12}},{"start":{"line":113,"column":12},"end":{"line":113,"column":12}}]},"26":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":11},"end":{"line":118,"column":11}},{"start":{"line":118,"column":11},"end":{"line":118,"column":11}}]},"27":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":11},"end":{"line":120,"column":11}},{"start":{"line":120,"column":11},"end":{"line":120,"column":11}}]},"28":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":11},"end":{"line":122,"column":11}},{"start":{"line":122,"column":11},"end":{"line":122,"column":11}}]},"29":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":5},"end":{"line":124,"column":5}},{"start":{"line":124,"column":5},"end":{"line":124,"column":5}}]},"30":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":12},"end":{"line":126,"column":12}},{"start":{"line":126,"column":12},"end":{"line":126,"column":12}}]},"31":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":2},"end":{"line":143,"column":2}},{"start":{"line":143,"column":2},"end":{"line":143,"column":2}}]},"32":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":3},"end":{"line":151,"column":3}},{"start":{"line":151,"column":3},"end":{"line":151,"column":3}}]},"33":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":3},"end":{"line":156,"column":3}},{"start":{"line":156,"column":3},"end":{"line":156,"column":3}}]},"34":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":4},"end":{"line":159,"column":4}},{"start":{"line":159,"column":4},"end":{"line":159,"column":4}}]},"35":{"line":159,"type":"binary-expr","locations":[{"start":{"line":159,"column":8},"end":{"line":159,"column":25}},{"start":{"line":159,"column":30},"end":{"line":159,"column":60}},{"start":{"line":159,"column":64},"end":{"line":159,"column":95}}]},"36":{"line":162,"type":"if","locations":[{"start":{"line":162,"column":4},"end":{"line":162,"column":4}},{"start":{"line":162,"column":4},"end":{"line":162,"column":4}}]},"37":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":4},"end":{"line":167,"column":4}},{"start":{"line":167,"column":4},"end":{"line":167,"column":4}}]},"38":{"line":169,"type":"if","locations":[{"start":{"line":169,"column":11},"end":{"line":169,"column":11}},{"start":{"line":169,"column":11},"end":{"line":169,"column":11}}]},"39":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":2},"end":{"line":185,"column":2}},{"start":{"line":185,"column":2},"end":{"line":185,"column":2}}]},"40":{"line":190,"type":"binary-expr","locations":[{"start":{"line":190,"column":15},"end":{"line":190,"column":20}},{"start":{"line":190,"column":24},"end":{"line":190,"column":32}}]},"41":{"line":192,"type":"binary-expr","locations":[{"start":{"line":192,"column":13},"end":{"line":192,"column":18}},{"start":{"line":192,"column":22},"end":{"line":192,"column":30}}]},"42":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":2},"end":{"line":196,"column":2}},{"start":{"line":196,"column":2},"end":{"line":196,"column":2}}]},"43":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":9},"end":{"line":198,"column":9}},{"start":{"line":198,"column":9},"end":{"line":198,"column":9}}]},"44":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":1},"end":{"line":206,"column":1}},{"start":{"line":206,"column":1},"end":{"line":206,"column":1}}]}},"code":["(function() {","","\tif (","\t\ttypeof self !== 'undefined' && !self.Prism ||","\t\ttypeof global !== 'undefined' && !global.Prism","\t) {","\t\treturn;","\t}","","\tvar languages = {","\t\t'css': true,","\t\t'less': true,","\t\t'sass': [","\t\t\t{","\t\t\t\tlang: 'sass',","\t\t\t\tbefore: 'punctuation',","\t\t\t\tinside: 'inside',","\t\t\t\troot: Prism.languages.sass && Prism.languages.sass['variable-line']","\t\t\t},","\t\t\t{","\t\t\t\tlang: 'sass',","\t\t\t\tbefore: 'punctuation',","\t\t\t\tinside: 'inside',","\t\t\t\troot: Prism.languages.sass && Prism.languages.sass['property-line']","\t\t\t}","\t\t],","\t\t'scss': true,","\t\t'stylus': [","\t\t\t{","\t\t\t\tlang: 'stylus',","\t\t\t\tbefore: 'func',","\t\t\t\tinside: 'rest',","\t\t\t\troot: Prism.languages.stylus && Prism.languages.stylus['property-declaration'].inside","\t\t\t},","\t\t\t{","\t\t\t\tlang: 'stylus',","\t\t\t\tbefore: 'func',","\t\t\t\tinside: 'rest',","\t\t\t\troot: Prism.languages.stylus && Prism.languages.stylus['variable-declaration'].inside","\t\t\t}","\t\t]","\t};","","\tPrism.hooks.add('before-highlight', function (env) {","\t\tif (env.language && languages[env.language] && !languages[env.language].initialized) {","\t\t\tvar lang = languages[env.language];","\t\t\tif (Prism.util.type(lang) !== 'Array') {","\t\t\t\tlang = [lang];","\t\t\t}","\t\t\tlang.forEach(function(lang) {","\t\t\t\tvar before, inside, root, skip;","\t\t\t\tif (lang === true) {","\t\t\t\t\t// Insert before color previewer if it exists","\t\t\t\t\tbefore = Prism.plugins.Previewer && Prism.plugins.Previewer.byType['color'] ? 'color' : 'important';","\t\t\t\t\tinside = env.language;","\t\t\t\t\tlang = env.language;","\t\t\t\t} else {","\t\t\t\t\tbefore = lang.before || 'important';","\t\t\t\t\tinside = lang.inside || lang.lang;","\t\t\t\t\troot = lang.root || Prism.languages;","\t\t\t\t\tskip = lang.skip;","\t\t\t\t\tlang = env.language;","\t\t\t\t}","","\t\t\t\tif (!skip && Prism.languages[lang]) {","\t\t\t\t\tPrism.languages.insertBefore(inside, before, {","\t\t\t\t\t\t'gradient': {","\t\t\t\t\t\t\tpattern: /(?:\\b|\\B-[a-z]{1,10}-)(?:repeating-)?(?:linear|radial)-gradient\\((?:(?:rgb|hsl)a?\\(.+?\\)|[^\\)])+\\)/gi,","\t\t\t\t\t\t\tinside: {","\t\t\t\t\t\t\t\t'function': /[\\w-]+(?=\\()/,","\t\t\t\t\t\t\t\t'punctuation': /[(),]/","\t\t\t\t\t\t\t}","\t\t\t\t\t\t}","\t\t\t\t\t}, root);","\t\t\t\t\tenv.grammar = Prism.languages[lang];","","\t\t\t\t\tlanguages[env.language] = {initialized: true};","\t\t\t\t}","\t\t\t});","\t\t}","\t});","","\t// Stores already processed gradients so that we don't","\t// make the conversion every time the previewer is shown","\tvar cache = {};","","\t/**","\t * Returns a W3C-valid linear gradient","\t * @param {string} prefix Vendor prefix if any (\"-moz-\", \"-webkit-\", etc.)","\t * @param {string} func Gradient function name (\"linear-gradient\")","\t * @param {string[]} values Array of the gradient function parameters ([\"0deg\", \"red 0%\", \"blue 100%\"])","\t */","\tvar convertToW3CLinearGradient = function(prefix, func, values) {","\t\t// Default value for angle","\t\tvar angle = '180deg';","","\t\tif (/^(?:-?\\d*\\.?\\d+(?:deg|rad)|to\\b|top|right|bottom|left)/.test(values[0])) {","\t\t\tangle = values.shift();","\t\t\tif (angle.indexOf('to ') < 0) {","\t\t\t\t// Angle uses old keywords","\t\t\t\t// W3C syntax uses \"to\" + opposite keywords","\t\t\t\tif (angle.indexOf('top') >= 0) {","\t\t\t\t\tif (angle.indexOf('left') >= 0) {","\t\t\t\t\t\tangle = 'to bottom right';","\t\t\t\t\t} else if (angle.indexOf('right') >= 0) {","\t\t\t\t\t\tangle = 'to bottom left';","\t\t\t\t\t} else {","\t\t\t\t\t\tangle = 'to bottom';","\t\t\t\t\t}","\t\t\t\t} else if (angle.indexOf('bottom') >= 0) {","\t\t\t\t\tif (angle.indexOf('left') >= 0) {","\t\t\t\t\t\tangle = 'to top right';","\t\t\t\t\t} else if (angle.indexOf('right') >= 0) {","\t\t\t\t\t\tangle = 'to top left';","\t\t\t\t\t} else {","\t\t\t\t\t\tangle = 'to top';","\t\t\t\t\t}","\t\t\t\t} else if (angle.indexOf('left') >= 0) {","\t\t\t\t\tangle = 'to right';","\t\t\t\t} else if (angle.indexOf('right') >= 0) {","\t\t\t\t\tangle = 'to left';","\t\t\t\t} else if (prefix) {","\t\t\t\t\t// Angle is shifted by 90deg in prefixed gradients","\t\t\t\t\tif (angle.indexOf('deg') >= 0) {","\t\t\t\t\t\tangle = (90 - parseFloat(angle)) + 'deg';","\t\t\t\t\t} else if (angle.indexOf('rad') >= 0) {","\t\t\t\t\t\tangle = (Math.PI / 2 - parseFloat(angle)) + 'rad';","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","\t\t}","","\t\treturn func + '(' + angle + ',' + values.join(',') + ')';","\t};","","\t/**","\t * Returns a W3C-valid radial gradient","\t * @param {string} prefix Vendor prefix if any (\"-moz-\", \"-webkit-\", etc.)","\t * @param {string} func Gradient function name (\"linear-gradient\")","\t * @param {string[]} values Array of the gradient function parameters ([\"0deg\", \"red 0%\", \"blue 100%\"])","\t */","\tvar convertToW3CRadialGradient = function(prefix, func, values) {","\t\tif (values[0].indexOf('at') < 0) {","\t\t\t// Looks like old syntax","","\t\t\t// Default values","\t\t\tvar position = 'center';","\t\t\tvar shape = 'ellipse';","\t\t\tvar size = 'farthest-corner';","","\t\t\tif (/\\bcenter|top|right|bottom|left\\b|^\\d+/.test(values[0])) {","\t\t\t\t// Found a position","\t\t\t\t// Remove angle value, if any","\t\t\t\tposition = values.shift().replace(/\\s*-?\\d+(?:rad|deg)\\s*/, '');","\t\t\t}","\t\t\tif (/\\bcircle|ellipse|closest|farthest|contain|cover\\b/.test(values[0])) {","\t\t\t\t// Found a shape and/or size","\t\t\t\tvar shapeSizeParts = values.shift().split(/\\s+/);","\t\t\t\tif (shapeSizeParts[0] && (shapeSizeParts[0] === 'circle' || shapeSizeParts[0] === 'ellipse')) {","\t\t\t\t\tshape = shapeSizeParts.shift();","\t\t\t\t}","\t\t\t\tif (shapeSizeParts[0]) {","\t\t\t\t\tsize = shapeSizeParts.shift();","\t\t\t\t}","","\t\t\t\t// Old keywords are converted to their synonyms","\t\t\t\tif (size === 'cover') {","\t\t\t\t\tsize = 'farthest-corner';","\t\t\t\t} else if (size === 'contain') {","\t\t\t\t\tsize = 'clothest-side';","\t\t\t\t}","\t\t\t}","","\t\t\treturn func + '(' + shape + ' ' + size + ' at ' + position + ',' + values.join(',') + ')';","\t\t}","\t\treturn func + '(' + values.join(',') + ')';","\t};","","\t/**","\t * Converts a gradient to a W3C-valid one","\t * Does not support old webkit syntax (-webkit-gradient(linear...) and -webkit-gradient(radial...))","\t * @param {string} gradient The CSS gradient","\t */","\tvar convertToW3CGradient = function(gradient) {","\t\tif (cache[gradient]) {","\t\t\treturn cache[gradient];","\t\t}","\t\tvar parts = gradient.match(/^(\\b|\\B-[a-z]{1,10}-)((?:repeating-)?(?:linear|radial)-gradient)/);","\t\t// \"\", \"-moz-\", etc.","\t\tvar prefix = parts && parts[1];","\t\t// \"linear-gradient\", \"radial-gradient\", etc.","\t\tvar func = parts && parts[2];","","\t\tvar values = gradient.replace(/^(?:\\b|\\B-[a-z]{1,10}-)(?:repeating-)?(?:linear|radial)-gradient\\(|\\)$/g, '').split(/\\s*,\\s*/);","","\t\tif (func.indexOf('linear') >= 0) {","\t\t\treturn cache[gradient] = convertToW3CLinearGradient(prefix, func, values);","\t\t} else if (func.indexOf('radial') >= 0) {","\t\t\treturn cache[gradient] = convertToW3CRadialGradient(prefix, func, values);","\t\t}","\t\treturn cache[gradient] = func + '(' + values.join(',') + ')';","\t};","","","","\tif (Prism.plugins.Previewer) {","\t\tnew Prism.plugins.Previewer('gradient', function(value) {","\t\t\tthis.firstChild.style.backgroundImage = '';","\t\t\tthis.firstChild.style.backgroundImage = convertToW3CGradient(value);","\t\t\treturn !!this.firstChild.style.backgroundImage;","\t\t}, '*', function () {","\t\t\tthis._elt.innerHTML = '<div></div>';","\t\t});","\t}","","}());"],"l":{"1":1,"3":1,"7":0,"10":1,"44":1,"45":0,"46":0,"47":0,"48":0,"50":0,"51":0,"52":0,"54":0,"55":0,"56":0,"58":0,"59":0,"60":0,"61":0,"62":0,"65":0,"66":0,"75":0,"77":0,"85":1,"93":1,"95":0,"97":0,"98":0,"99":0,"102":0,"103":0,"104":0,"105":0,"106":0,"108":0,"110":0,"111":0,"112":0,"113":0,"114":0,"116":0,"118":0,"119":0,"120":0,"121":0,"122":0,"124":0,"125":0,"126":0,"127":0,"133":0,"142":1,"143":0,"147":0,"148":0,"149":0,"151":0,"154":0,"156":0,"158":0,"159":0,"160":0,"162":0,"163":0,"167":0,"168":0,"169":0,"170":0,"174":0,"176":0,"184":1,"185":0,"186":0,"188":0,"190":0,"192":0,"194":0,"196":0,"197":0,"198":0,"199":0,"201":0,"206":1,"207":0,"208":0,"209":0,"210":0,"212":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/previewer-time/prism-previewer-time.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/previewer-time/prism-previewer-time.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0},"b":{"1":[0,1],"2":[1,0,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,1],"18":[0,0],"19":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":12}}},"2":{"name":"(anonymous_2)","line":49,"loc":{"start":{"line":49,"column":37},"end":{"line":49,"column":52}}},"3":{"name":"(anonymous_3)","line":55,"loc":{"start":{"line":55,"column":16},"end":{"line":55,"column":31}}},"4":{"name":"(anonymous_4)","line":82,"loc":{"start":{"line":82,"column":38},"end":{"line":82,"column":54}}},"5":{"name":"(anonymous_5)","line":91,"loc":{"start":{"line":91,"column":10},"end":{"line":91,"column":22}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":98,"column":5}},"2":{"start":{"line":3,"column":1},"end":{"line":8,"column":2}},"3":{"start":{"line":7,"column":2},"end":{"line":7,"column":9}},"4":{"start":{"line":10,"column":1},"end":{"line":47,"column":3}},"5":{"start":{"line":49,"column":1},"end":{"line":79,"column":4}},"6":{"start":{"line":50,"column":2},"end":{"line":78,"column":3}},"7":{"start":{"line":51,"column":3},"end":{"line":51,"column":38}},"8":{"start":{"line":52,"column":3},"end":{"line":54,"column":4}},"9":{"start":{"line":53,"column":4},"end":{"line":53,"column":18}},"10":{"start":{"line":55,"column":3},"end":{"line":77,"column":6}},"11":{"start":{"line":56,"column":4},"end":{"line":56,"column":35}},"12":{"start":{"line":57,"column":4},"end":{"line":67,"column":5}},"13":{"start":{"line":58,"column":5},"end":{"line":58,"column":26}},"14":{"start":{"line":59,"column":5},"end":{"line":59,"column":27}},"15":{"start":{"line":60,"column":5},"end":{"line":60,"column":25}},"16":{"start":{"line":62,"column":5},"end":{"line":62,"column":41}},"17":{"start":{"line":63,"column":5},"end":{"line":63,"column":39}},"18":{"start":{"line":64,"column":5},"end":{"line":64,"column":41}},"19":{"start":{"line":65,"column":5},"end":{"line":65,"column":22}},"20":{"start":{"line":66,"column":5},"end":{"line":66,"column":25}},"21":{"start":{"line":69,"column":4},"end":{"line":76,"column":5}},"22":{"start":{"line":70,"column":5},"end":{"line":72,"column":14}},"23":{"start":{"line":73,"column":5},"end":{"line":73,"column":41}},"24":{"start":{"line":75,"column":5},"end":{"line":75,"column":51}},"25":{"start":{"line":81,"column":1},"end":{"line":96,"column":2}},"26":{"start":{"line":82,"column":2},"end":{"line":95,"column":5}},"27":{"start":{"line":83,"column":3},"end":{"line":83,"column":31}},"28":{"start":{"line":84,"column":3},"end":{"line":84,"column":38}},"29":{"start":{"line":85,"column":3},"end":{"line":87,"column":4}},"30":{"start":{"line":86,"column":4},"end":{"line":86,"column":17}},"31":{"start":{"line":88,"column":3},"end":{"line":88,"column":18}},"32":{"start":{"line":89,"column":3},"end":{"line":89,"column":73}},"33":{"start":{"line":90,"column":3},"end":{"line":90,"column":15}},"34":{"start":{"line":92,"column":3},"end":{"line":94,"column":12}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},{"start":{"line":3,"column":1},"end":{"line":3,"column":1}}]},"2":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":2},"end":{"line":4,"column":29}},{"start":{"line":4,"column":33},"end":{"line":4,"column":44}},{"start":{"line":5,"column":2},"end":{"line":5,"column":31}},{"start":{"line":5,"column":35},"end":{"line":5,"column":48}}]},"3":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":9},"end":{"line":17,"column":31}},{"start":{"line":17,"column":35},"end":{"line":17,"column":85}}]},"4":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":10},"end":{"line":23,"column":30}},{"start":{"line":23,"column":34},"end":{"line":23,"column":71}}]},"5":{"line":29,"type":"binary-expr","locations":[{"start":{"line":29,"column":10},"end":{"line":29,"column":30}},{"start":{"line":29,"column":34},"end":{"line":29,"column":71}}]},"6":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":10},"end":{"line":38,"column":32}},{"start":{"line":38,"column":36},"end":{"line":38,"column":89}}]},"7":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":10},"end":{"line":44,"column":32}},{"start":{"line":44,"column":36},"end":{"line":44,"column":89}}]},"8":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"9":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":6},"end":{"line":50,"column":18}},{"start":{"line":50,"column":22},"end":{"line":50,"column":45}},{"start":{"line":50,"column":49},"end":{"line":50,"column":85}}]},"10":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":3},"end":{"line":52,"column":3}},{"start":{"line":52,"column":3},"end":{"line":52,"column":3}}]},"11":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":57,"column":4}},{"start":{"line":57,"column":4},"end":{"line":57,"column":4}}]},"12":{"line":62,"type":"binary-expr","locations":[{"start":{"line":62,"column":14},"end":{"line":62,"column":25}},{"start":{"line":62,"column":29},"end":{"line":62,"column":40}}]},"13":{"line":63,"type":"binary-expr","locations":[{"start":{"line":63,"column":14},"end":{"line":63,"column":25}},{"start":{"line":63,"column":29},"end":{"line":63,"column":38}}]},"14":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":12},"end":{"line":64,"column":21}},{"start":{"line":64,"column":25},"end":{"line":64,"column":40}}]},"15":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":4},"end":{"line":69,"column":4}},{"start":{"line":69,"column":4},"end":{"line":69,"column":4}}]},"16":{"line":69,"type":"binary-expr","locations":[{"start":{"line":69,"column":8},"end":{"line":69,"column":13}},{"start":{"line":69,"column":17},"end":{"line":69,"column":38}}]},"17":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":1},"end":{"line":81,"column":1}},{"start":{"line":81,"column":1},"end":{"line":81,"column":1}}]},"18":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":3},"end":{"line":85,"column":3}},{"start":{"line":85,"column":3},"end":{"line":85,"column":3}}]},"19":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":7},"end":{"line":85,"column":11}},{"start":{"line":85,"column":15},"end":{"line":85,"column":20}}]}},"code":["(function() {","","\tif (","\t\ttypeof self !== 'undefined' && !self.Prism ||","\t\ttypeof global !== 'undefined' && !global.Prism","\t) {","\t\treturn;","\t}","","\tvar languages = {","\t\t'css': true,","\t\t'less': true,","\t\t'markup': {","\t\t\tlang: 'markup',","\t\t\tbefore: 'punctuation',","\t\t\tinside: 'inside',","\t\t\troot: Prism.languages.markup && Prism.languages.markup['tag'].inside['attr-value']","\t\t},","\t\t'sass': [","\t\t\t{","\t\t\t\tlang: 'sass',","\t\t\t\tinside: 'inside',","\t\t\t\troot: Prism.languages.sass && Prism.languages.sass['property-line']","\t\t\t},","\t\t\t{","\t\t\t\tlang: 'sass',","\t\t\t\tbefore: 'operator',","\t\t\t\tinside: 'inside',","\t\t\t\troot: Prism.languages.sass && Prism.languages.sass['variable-line']","\t\t\t}","\t\t],","\t\t'scss': true,","\t\t'stylus': [","\t\t\t{","\t\t\t\tlang: 'stylus',","\t\t\t\tbefore: 'hexcode',","\t\t\t\tinside: 'rest',","\t\t\t\troot: Prism.languages.stylus && Prism.languages.stylus['property-declaration'].inside","\t\t\t},","\t\t\t{","\t\t\t\tlang: 'stylus',","\t\t\t\tbefore: 'hexcode',","\t\t\t\tinside: 'rest',","\t\t\t\troot: Prism.languages.stylus && Prism.languages.stylus['variable-declaration'].inside","\t\t\t}","\t\t]","\t};","","\tPrism.hooks.add('before-highlight', function (env) {","\t\tif (env.language && languages[env.language] && !languages[env.language].initialized) {","\t\t\tvar lang = languages[env.language];","\t\t\tif (Prism.util.type(lang) !== 'Array') {","\t\t\t\tlang = [lang];","\t\t\t}","\t\t\tlang.forEach(function(lang) {","\t\t\t\tvar before, inside, root, skip;","\t\t\t\tif (lang === true) {","\t\t\t\t\tbefore = 'important';","\t\t\t\t\tinside = env.language;","\t\t\t\t\tlang = env.language;","\t\t\t\t} else {","\t\t\t\t\tbefore = lang.before || 'important';","\t\t\t\t\tinside = lang.inside || lang.lang;","\t\t\t\t\troot = lang.root || Prism.languages;","\t\t\t\t\tskip = lang.skip;","\t\t\t\t\tlang = env.language;","\t\t\t\t}","","\t\t\t\tif (!skip && Prism.languages[lang]) {","\t\t\t\t\tPrism.languages.insertBefore(inside, before, {","\t\t\t\t\t\t'time': /(?:\\b|\\B-|(?=\\B\\.))\\d*\\.?\\d+m?s\\b/i","\t\t\t\t\t}, root);","\t\t\t\t\tenv.grammar = Prism.languages[lang];","","\t\t\t\t\tlanguages[env.language] = {initialized: true};","\t\t\t\t}","\t\t\t});","\t\t}","\t});","","\tif (Prism.plugins.Previewer) {","\t\tnew Prism.plugins.Previewer('time', function(value) {","\t\t\tvar num = parseFloat(value);","\t\t\tvar unit = value.match(/[a-z]+$/i);","\t\t\tif (!num || !unit) {","\t\t\t\treturn false;","\t\t\t}","\t\t\tunit = unit[0];","\t\t\tthis.querySelector('circle').style.animationDuration = 2 * num + unit;","\t\t\treturn true;","\t\t}, '*', function () {","\t\t\tthis._elt.innerHTML = '<svg viewBox=\"0 0 64 64\">' +","\t\t\t\t'<circle r=\"16\" cy=\"32\" cx=\"32\"></circle>' +","\t\t\t'</svg>';","\t\t});","\t}","","}());"],"l":{"1":1,"3":1,"7":0,"10":1,"49":1,"50":0,"51":0,"52":0,"53":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"62":0,"63":0,"64":0,"65":0,"66":0,"69":0,"70":0,"73":0,"75":0,"81":1,"82":0,"83":0,"84":0,"85":0,"86":0,"88":0,"89":0,"90":0,"92":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/remove-initial-line-feed/prism-remove-initial-line-feed.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/remove-initial-line-feed/prism-remove-initial-line-feed.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"1":[1,0],"2":[1,0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":12}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":39},"end":{"line":7,"column":54}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":21,"column":5}},"2":{"start":{"line":3,"column":0},"end":{"line":5,"column":1}},"3":{"start":{"line":4,"column":1},"end":{"line":4,"column":8}},"4":{"start":{"line":7,"column":0},"end":{"line":19,"column":3}},"5":{"start":{"line":8,"column":1},"end":{"line":18,"column":2}},"6":{"start":{"line":9,"column":2},"end":{"line":9,"column":35}},"7":{"start":{"line":10,"column":2},"end":{"line":10,"column":50}},"8":{"start":{"line":11,"column":2},"end":{"line":17,"column":3}},"9":{"start":{"line":16,"column":3},"end":{"line":16,"column":52}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":0},"end":{"line":3,"column":0}},{"start":{"line":3,"column":0},"end":{"line":3,"column":0}}]},"2":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":31}},{"start":{"line":3,"column":35},"end":{"line":3,"column":46}},{"start":{"line":3,"column":50},"end":{"line":3,"column":64}}]},"3":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},{"start":{"line":8,"column":1},"end":{"line":8,"column":1}}]},"4":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":11,"column":2}},{"start":{"line":11,"column":2},"end":{"line":11,"column":2}}]},"5":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":3},"end":{"line":12,"column":6}},{"start":{"line":12,"column":10},"end":{"line":12,"column":46}},{"start":{"line":14,"column":4},"end":{"line":14,"column":31}},{"start":{"line":14,"column":35},"end":{"line":14,"column":70}}]}},"code":["(function() {","","if (typeof self === 'undefined' || !self.Prism || !self.document) {","\treturn;","}","","Prism.hooks.add('before-sanity-check', function (env) {","\tif (env.code) {","\t\tvar pre = env.element.parentNode;","\t\tvar clsReg = /\\s*\\bkeep-initial-line-feed\\b\\s*/;","\t\tif (","\t\t\tpre && pre.nodeName.toLowerCase() === 'pre' &&","\t\t\t// Apply only if nor the <pre> or the <code> have the class","\t\t\t(!clsReg.test(pre.className) && !clsReg.test(env.element.className))","\t\t) {","\t\t\tenv.code = env.code.replace(/^(?:\\r?\\n|\\r)/, '');","\t\t}","\t}","});","","}());"],"l":{"1":1,"3":1,"4":1,"7":0,"8":0,"9":0,"10":0,"11":0,"16":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/show-invisibles/prism-show-invisibles.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/show-invisibles/prism-show-invisibles.js","s":{"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"1":[0,1],"2":[1,0,1,1]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":11}}},"2":{"name":"(anonymous_2)","line":10,"loc":{"start":{"line":10,"column":36},"end":{"line":10,"column":50}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":19,"column":5}},"2":{"start":{"line":3,"column":0},"end":{"line":8,"column":1}},"3":{"start":{"line":7,"column":1},"end":{"line":7,"column":8}},"4":{"start":{"line":10,"column":0},"end":{"line":18,"column":3}},"5":{"start":{"line":11,"column":1},"end":{"line":11,"column":26}},"6":{"start":{"line":13,"column":1},"end":{"line":13,"column":20}},"7":{"start":{"line":14,"column":1},"end":{"line":14,"column":23}},"8":{"start":{"line":15,"column":1},"end":{"line":15,"column":19}},"9":{"start":{"line":16,"column":1},"end":{"line":16,"column":19}},"10":{"start":{"line":17,"column":1},"end":{"line":17,"column":21}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":0},"end":{"line":3,"column":0}},{"start":{"line":3,"column":0},"end":{"line":3,"column":0}}]},"2":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":1},"end":{"line":4,"column":28}},{"start":{"line":4,"column":32},"end":{"line":4,"column":43}},{"start":{"line":5,"column":1},"end":{"line":5,"column":30}},{"start":{"line":5,"column":34},"end":{"line":5,"column":47}}]}},"code":["(function(){","","if (","\ttypeof self !== 'undefined' && !self.Prism ||","\ttypeof global !== 'undefined' && !global.Prism",") {","\treturn;","}","","Prism.hooks.add('before-highlight', function(env) {","\tvar tokens = env.grammar;","","\ttokens.tab = /\\t/g;","\ttokens.crlf = /\\r\\n/g;","\ttokens.lf = /\\n/g;","\ttokens.cr = /\\r/g;","\ttokens.space = / /g;","});","})();",""],"l":{"1":1,"3":1,"7":0,"10":1,"11":0,"13":0,"14":0,"15":0,"16":0,"17":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/show-language/prism-show-language.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/show-language/prism-show-language.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"1":[1,0],"2":[1,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0]},"f":{"1":1,"2":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":11}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":54},"end":{"line":15,"column":68}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":28,"column":5}},"2":{"start":{"line":3,"column":0},"end":{"line":5,"column":1}},"3":{"start":{"line":4,"column":1},"end":{"line":4,"column":8}},"4":{"start":{"line":7,"column":0},"end":{"line":11,"column":1}},"5":{"start":{"line":8,"column":1},"end":{"line":8,"column":69}},"6":{"start":{"line":10,"column":1},"end":{"line":10,"column":8}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":1114}},"8":{"start":{"line":15,"column":0},"end":{"line":26,"column":3}},"9":{"start":{"line":16,"column":1},"end":{"line":16,"column":34}},"10":{"start":{"line":17,"column":1},"end":{"line":19,"column":2}},"11":{"start":{"line":18,"column":2},"end":{"line":18,"column":9}},"12":{"start":{"line":20,"column":1},"end":{"line":20,"column":153}},"13":{"start":{"line":22,"column":1},"end":{"line":22,"column":46}},"14":{"start":{"line":23,"column":1},"end":{"line":23,"column":32}},"15":{"start":{"line":25,"column":1},"end":{"line":25,"column":16}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":0},"end":{"line":3,"column":0}},{"start":{"line":3,"column":0},"end":{"line":3,"column":0}}]},"2":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":31}},{"start":{"line":3,"column":35},"end":{"line":3,"column":46}},{"start":{"line":3,"column":50},"end":{"line":3,"column":64}}]},"3":{"line":7,"type":"if","locations":[{"start":{"line":7,"column":0},"end":{"line":7,"column":0}},{"start":{"line":7,"column":0},"end":{"line":7,"column":0}}]},"4":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},{"start":{"line":17,"column":1},"end":{"line":17,"column":1}}]},"5":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":5},"end":{"line":17,"column":9}},{"start":{"line":17,"column":13},"end":{"line":17,"column":39}}]},"6":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":16},"end":{"line":20,"column":49}},{"start":{"line":20,"column":53},"end":{"line":20,"column":76}},{"start":{"line":20,"column":81},"end":{"line":20,"column":151}}]}},"code":["(function(){","","if (typeof self === 'undefined' || !self.Prism || !self.document) {","\treturn;","}","","if (!Prism.plugins.toolbar) {","\tconsole.warn('Show Languages plugin loaded before Toolbar plugin.');","","\treturn;","}","","// The languages map is built automatically with gulp","var Languages = /*languages_placeholder[*/{\"html\":\"HTML\",\"xml\":\"XML\",\"svg\":\"SVG\",\"mathml\":\"MathML\",\"css\":\"CSS\",\"clike\":\"C-like\",\"javascript\":\"JavaScript\",\"abap\":\"ABAP\",\"actionscript\":\"ActionScript\",\"apacheconf\":\"Apache Configuration\",\"apl\":\"APL\",\"applescript\":\"AppleScript\",\"asciidoc\":\"AsciiDoc\",\"aspnet\":\"ASP.NET (C#)\",\"autoit\":\"AutoIt\",\"autohotkey\":\"AutoHotkey\",\"basic\":\"BASIC\",\"csharp\":\"C#\",\"cpp\":\"C++\",\"coffeescript\":\"CoffeeScript\",\"css-extras\":\"CSS Extras\",\"fsharp\":\"F#\",\"glsl\":\"GLSL\",\"graphql\":\"GraphQL\",\"http\":\"HTTP\",\"inform7\":\"Inform 7\",\"json\":\"JSON\",\"latex\":\"LaTeX\",\"livescript\":\"LiveScript\",\"lolcode\":\"LOLCODE\",\"matlab\":\"MATLAB\",\"mel\":\"MEL\",\"nasm\":\"NASM\",\"nginx\":\"nginx\",\"nsis\":\"NSIS\",\"objectivec\":\"Objective-C\",\"ocaml\":\"OCaml\",\"parigp\":\"PARI/GP\",\"php\":\"PHP\",\"php-extras\":\"PHP Extras\",\"powershell\":\"PowerShell\",\"properties\":\".properties\",\"protobuf\":\"Protocol Buffers\",\"jsx\":\"React JSX\",\"rest\":\"reST (reStructuredText)\",\"sas\":\"SAS\",\"sass\":\"Sass (Sass)\",\"scss\":\"Sass (Scss)\",\"sql\":\"SQL\",\"typescript\":\"TypeScript\",\"vhdl\":\"VHDL\",\"vim\":\"vim\",\"wiki\":\"Wiki markup\",\"xojo\":\"Xojo (REALbasic)\",\"yaml\":\"YAML\"}/*]*/;","Prism.plugins.toolbar.registerButton('show-language', function(env) {","\tvar pre = env.element.parentNode;","\tif (!pre || !/pre/i.test(pre.nodeName)) {","\t\treturn;","\t}","\tvar language = pre.getAttribute('data-language') || Languages[env.language] || (env.language.substring(0, 1).toUpperCase() + env.language.substring(1));","","\tvar element = document.createElement('span');","\telement.textContent = language;","","\treturn element;","});","","})();",""],"l":{"1":1,"3":1,"4":1,"7":0,"8":0,"10":0,"14":0,"15":0,"16":0,"17":0,"18":0,"20":0,"22":0,"23":0,"25":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/toolbar/prism-toolbar.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/toolbar/prism-toolbar.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0},"b":{"1":[1,0],"2":[1,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":11}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":12},"end":{"line":8,"column":23}}},"3":{"name":"(anonymous_3)","line":18,"loc":{"start":{"line":18,"column":61},"end":{"line":18,"column":82}}},"4":{"name":"(anonymous_4)","line":24,"loc":{"start":{"line":24,"column":14},"end":{"line":24,"column":29}}},"5":{"name":"(anonymous_5)","line":30,"loc":{"start":{"line":30,"column":39},"end":{"line":30,"column":51}}},"6":{"name":"(anonymous_6)","line":54,"loc":{"start":{"line":54,"column":41},"end":{"line":54,"column":56}}},"7":{"name":"(anonymous_7)","line":73,"loc":{"start":{"line":73,"column":79},"end":{"line":73,"column":93}}},"8":{"name":"(anonymous_8)","line":78,"loc":{"start":{"line":78,"column":20},"end":{"line":78,"column":39}}},"9":{"name":"(anonymous_9)","line":96,"loc":{"start":{"line":96,"column":25},"end":{"line":96,"column":39}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":133,"column":5}},"2":{"start":{"line":2,"column":1},"end":{"line":4,"column":2}},"3":{"start":{"line":3,"column":2},"end":{"line":3,"column":9}},"4":{"start":{"line":6,"column":1},"end":{"line":6,"column":20}},"5":{"start":{"line":7,"column":1},"end":{"line":7,"column":14}},"6":{"start":{"line":8,"column":1},"end":{"line":8,"column":26}},"7":{"start":{"line":10,"column":1},"end":{"line":10,"column":28}},"8":{"start":{"line":18,"column":1},"end":{"line":47,"column":3}},"9":{"start":{"line":19,"column":2},"end":{"line":19,"column":15}},"10":{"start":{"line":21,"column":2},"end":{"line":44,"column":3}},"11":{"start":{"line":22,"column":3},"end":{"line":22,"column":19}},"12":{"start":{"line":24,"column":3},"end":{"line":43,"column":5}},"13":{"start":{"line":25,"column":4},"end":{"line":25,"column":16}},"14":{"start":{"line":27,"column":4},"end":{"line":38,"column":5}},"15":{"start":{"line":28,"column":5},"end":{"line":28,"column":48}},"16":{"start":{"line":29,"column":5},"end":{"line":29,"column":29}},"17":{"start":{"line":30,"column":5},"end":{"line":32,"column":8}},"18":{"start":{"line":31,"column":6},"end":{"line":31,"column":35}},"19":{"start":{"line":33,"column":11},"end":{"line":38,"column":5}},"20":{"start":{"line":34,"column":5},"end":{"line":34,"column":43}},"21":{"start":{"line":35,"column":5},"end":{"line":35,"column":29}},"22":{"start":{"line":37,"column":5},"end":{"line":37,"column":46}},"23":{"start":{"line":40,"column":4},"end":{"line":40,"column":36}},"24":{"start":{"line":42,"column":4},"end":{"line":42,"column":19}},"25":{"start":{"line":46,"column":2},"end":{"line":46,"column":38}},"26":{"start":{"line":54,"column":1},"end":{"line":94,"column":3}},"27":{"start":{"line":56,"column":2},"end":{"line":56,"column":35}},"28":{"start":{"line":57,"column":2},"end":{"line":59,"column":3}},"29":{"start":{"line":58,"column":3},"end":{"line":58,"column":10}},"30":{"start":{"line":62,"column":2},"end":{"line":64,"column":3}},"31":{"start":{"line":63,"column":3},"end":{"line":63,"column":10}},"32":{"start":{"line":66,"column":2},"end":{"line":66,"column":36}},"33":{"start":{"line":69,"column":2},"end":{"line":69,"column":46}},"34":{"start":{"line":70,"column":2},"end":{"line":70,"column":35}},"35":{"start":{"line":72,"column":2},"end":{"line":76,"column":3}},"36":{"start":{"line":73,"column":3},"end":{"line":75,"column":6}},"37":{"start":{"line":74,"column":4},"end":{"line":74,"column":28}},"38":{"start":{"line":78,"column":2},"end":{"line":90,"column":5}},"39":{"start":{"line":79,"column":3},"end":{"line":79,"column":31}},"40":{"start":{"line":81,"column":3},"end":{"line":83,"column":4}},"41":{"start":{"line":82,"column":4},"end":{"line":82,"column":11}},"42":{"start":{"line":85,"column":3},"end":{"line":85,"column":44}},"43":{"start":{"line":86,"column":3},"end":{"line":86,"column":38}},"44":{"start":{"line":88,"column":3},"end":{"line":88,"column":29}},"45":{"start":{"line":89,"column":3},"end":{"line":89,"column":29}},"46":{"start":{"line":93,"column":2},"end":{"line":93,"column":27}},"47":{"start":{"line":96,"column":1},"end":{"line":127,"column":4}},"48":{"start":{"line":97,"column":2},"end":{"line":97,"column":35}},"49":{"start":{"line":98,"column":2},"end":{"line":100,"column":3}},"50":{"start":{"line":99,"column":3},"end":{"line":99,"column":10}},"51":{"start":{"line":102,"column":2},"end":{"line":104,"column":3}},"52":{"start":{"line":103,"column":3},"end":{"line":103,"column":10}},"53":{"start":{"line":106,"column":2},"end":{"line":106,"column":24}},"54":{"start":{"line":107,"column":2},"end":{"line":107,"column":44}},"55":{"start":{"line":108,"column":2},"end":{"line":111,"column":16}},"56":{"start":{"line":110,"column":3},"end":{"line":110,"column":57}},"57":{"start":{"line":113,"column":2},"end":{"line":124,"column":3}},"58":{"start":{"line":114,"column":3},"end":{"line":114,"column":30}},"59":{"start":{"line":116,"column":3},"end":{"line":121,"column":4}},"60":{"start":{"line":117,"column":4},"end":{"line":117,"column":42}},"61":{"start":{"line":118,"column":4},"end":{"line":118,"column":48}},"62":{"start":{"line":120,"column":4},"end":{"line":120,"column":45}},"63":{"start":{"line":123,"column":3},"end":{"line":123,"column":30}},"64":{"start":{"line":126,"column":2},"end":{"line":126,"column":17}},"65":{"start":{"line":132,"column":1},"end":{"line":132,"column":35}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":2,"type":"binary-expr","locations":[{"start":{"line":2,"column":5},"end":{"line":2,"column":32}},{"start":{"line":2,"column":36},"end":{"line":2,"column":47}},{"start":{"line":2,"column":51},"end":{"line":2,"column":65}}]},"3":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":2},"end":{"line":21,"column":2}},{"start":{"line":21,"column":2},"end":{"line":21,"column":2}}]},"4":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":27,"column":4}},{"start":{"line":27,"column":4},"end":{"line":27,"column":4}}]},"5":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":11},"end":{"line":33,"column":11}},{"start":{"line":33,"column":11},"end":{"line":33,"column":11}}]},"6":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":2},"end":{"line":57,"column":2}},{"start":{"line":57,"column":2},"end":{"line":57,"column":2}}]},"7":{"line":57,"type":"binary-expr","locations":[{"start":{"line":57,"column":6},"end":{"line":57,"column":10}},{"start":{"line":57,"column":14},"end":{"line":57,"column":40}}]},"8":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"9":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":2},"end":{"line":72,"column":2}},{"start":{"line":72,"column":2},"end":{"line":72,"column":2}}]},"10":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":11},"end":{"line":74,"column":19}},{"start":{"line":74,"column":23},"end":{"line":74,"column":27}}]},"11":{"line":81,"type":"if","locations":[{"start":{"line":81,"column":3},"end":{"line":81,"column":3}},{"start":{"line":81,"column":3},"end":{"line":81,"column":3}}]},"12":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":2},"end":{"line":98,"column":2}},{"start":{"line":98,"column":2},"end":{"line":98,"column":2}}]},"13":{"line":98,"type":"binary-expr","locations":[{"start":{"line":98,"column":6},"end":{"line":98,"column":10}},{"start":{"line":98,"column":14},"end":{"line":98,"column":40}}]},"14":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":2},"end":{"line":102,"column":2}},{"start":{"line":102,"column":2},"end":{"line":102,"column":2}}]},"15":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":2},"end":{"line":113,"column":2}},{"start":{"line":113,"column":2},"end":{"line":113,"column":2}}]},"16":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":3},"end":{"line":116,"column":3}},{"start":{"line":116,"column":3},"end":{"line":116,"column":3}}]}},"code":["(function(){","\tif (typeof self === 'undefined' || !self.Prism || !self.document) {","\t\treturn;","\t}","","\tvar callbacks = [];","\tvar map = {};","\tvar noop = function() {};","","\tPrism.plugins.toolbar = {};","","\t/**","\t * Register a button callback with the toolbar.","\t *","\t * @param {string} key","\t * @param {Object|Function} opts","\t */","\tvar registerButton = Prism.plugins.toolbar.registerButton = function (key, opts) {","\t\tvar callback;","","\t\tif (typeof opts === 'function') {","\t\t\tcallback = opts;","\t\t} else {","\t\t\tcallback = function (env) {","\t\t\t\tvar element;","","\t\t\t\tif (typeof opts.onClick === 'function') {","\t\t\t\t\telement = document.createElement('button');","\t\t\t\t\telement.type = 'button';","\t\t\t\t\telement.addEventListener('click', function () {","\t\t\t\t\t\topts.onClick.call(this, env);","\t\t\t\t\t});","\t\t\t\t} else if (typeof opts.url === 'string') {","\t\t\t\t\telement = document.createElement('a');","\t\t\t\t\telement.href = opts.url;","\t\t\t\t} else {","\t\t\t\t\telement = document.createElement('span');","\t\t\t\t}","","\t\t\t\telement.textContent = opts.text;","","\t\t\t\treturn element;","\t\t\t};","\t\t}","","\t\tcallbacks.push(map[key] = callback);","\t};","","\t/**","\t * Post-highlight Prism hook callback.","\t *","\t * @param env","\t */","\tvar hook = Prism.plugins.toolbar.hook = function (env) {","\t\t// Check if inline or actual code block (credit to line-numbers plugin)","\t\tvar pre = env.element.parentNode;","\t\tif (!pre || !/pre/i.test(pre.nodeName)) {","\t\t\treturn;","\t\t}","","\t\t// Autoloader rehighlights, so only do this once.","\t\tif (pre.classList.contains('code-toolbar')) {","\t\t\treturn;","\t\t}","","\t\tpre.classList.add('code-toolbar');","","\t\t// Setup the toolbar","\t\tvar toolbar = document.createElement('div');","\t\ttoolbar.classList.add('toolbar');","","\t\tif (document.body.hasAttribute('data-toolbar-order')) {","\t\t\tcallbacks = document.body.getAttribute('data-toolbar-order').split(',').map(function(key) {","\t\t\t\treturn map[key] || noop;","\t\t\t});","\t\t}","","\t\tcallbacks.forEach(function(callback) {","\t\t\tvar element = callback(env);","","\t\t\tif (!element) {","\t\t\t\treturn;","\t\t\t}","","\t\t\tvar item = document.createElement('div');","\t\t\titem.classList.add('toolbar-item');","","\t\t\titem.appendChild(element);","\t\t\ttoolbar.appendChild(item);","\t\t});","","\t\t// Add our toolbar to the <pre> tag","\t\tpre.appendChild(toolbar);","\t};","","\tregisterButton('label', function(env) {","\t\tvar pre = env.element.parentNode;","\t\tif (!pre || !/pre/i.test(pre.nodeName)) {","\t\t\treturn;","\t\t}","","\t\tif (!pre.hasAttribute('data-label')) {","\t\t\treturn;","\t\t}","","\t\tvar element, template;","\t\tvar text = pre.getAttribute('data-label');","\t\ttry {","\t\t\t// Any normal text will blow up this selector.","\t\t\ttemplate = document.querySelector('template#' + text);","\t\t} catch (e) {}","","\t\tif (template) {","\t\t\telement = template.content;","\t\t} else {","\t\t\tif (pre.hasAttribute('data-url')) {","\t\t\t\telement = document.createElement('a');","\t\t\t\telement.href = pre.getAttribute('data-url');","\t\t\t} else {","\t\t\t\telement = document.createElement('span');","\t\t\t}","","\t\t\telement.textContent = text;","\t\t}","","\t\treturn element;","\t});","","\t/**","\t * Register the toolbar with Prism.","\t */","\tPrism.hooks.add('complete', hook);","})();",""],"l":{"1":1,"2":1,"3":1,"6":0,"7":0,"8":0,"10":0,"18":0,"19":0,"21":0,"22":0,"24":0,"25":0,"27":0,"28":0,"29":0,"30":0,"31":0,"33":0,"34":0,"35":0,"37":0,"40":0,"42":0,"46":0,"54":0,"56":0,"57":0,"58":0,"62":0,"63":0,"66":0,"69":0,"70":0,"72":0,"73":0,"74":0,"78":0,"79":0,"81":0,"82":0,"85":0,"86":0,"88":0,"89":0,"93":0,"96":0,"97":0,"98":0,"99":0,"102":0,"103":0,"106":0,"107":0,"108":0,"110":0,"113":0,"114":0,"116":0,"117":0,"118":0,"120":0,"123":0,"126":0,"132":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/unescaped-markup/prism-unescaped-markup.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/unescaped-markup/prism-unescaped-markup.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"b":{"1":[1,0],"2":[1,0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0,0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":13}}},"2":{"name":"(anonymous_2)","line":9,"loc":{"start":{"line":9,"column":40},"end":{"line":9,"column":55}}},"3":{"name":"(anonymous_3)","line":14,"loc":{"start":{"line":14,"column":40},"end":{"line":14,"column":55}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":40,"column":5}},"2":{"start":{"line":3,"column":1},"end":{"line":5,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":9}},"4":{"start":{"line":7,"column":1},"end":{"line":7,"column":38}},"5":{"start":{"line":9,"column":1},"end":{"line":12,"column":4}},"6":{"start":{"line":10,"column":2},"end":{"line":11,"column":103}},"7":{"start":{"line":14,"column":1},"end":{"line":39,"column":4}},"8":{"start":{"line":15,"column":2},"end":{"line":17,"column":3}},"9":{"start":{"line":16,"column":3},"end":{"line":16,"column":10}},"10":{"start":{"line":19,"column":2},"end":{"line":32,"column":3}},"11":{"start":{"line":20,"column":3},"end":{"line":20,"column":45}},"12":{"start":{"line":21,"column":3},"end":{"line":21,"column":43}},"13":{"start":{"line":23,"column":3},"end":{"line":23,"column":58}},"14":{"start":{"line":25,"column":3},"end":{"line":25,"column":75}},"15":{"start":{"line":26,"column":3},"end":{"line":26,"column":31}},"16":{"start":{"line":28,"column":3},"end":{"line":28,"column":25}},"17":{"start":{"line":29,"column":3},"end":{"line":29,"column":57}},"18":{"start":{"line":30,"column":3},"end":{"line":30,"column":22}},"19":{"start":{"line":31,"column":3},"end":{"line":31,"column":10}},"20":{"start":{"line":34,"column":2},"end":{"line":34,"column":35}},"21":{"start":{"line":35,"column":2},"end":{"line":38,"column":3}},"22":{"start":{"line":37,"column":3},"end":{"line":37,"column":78}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},{"start":{"line":3,"column":1},"end":{"line":3,"column":1}}]},"2":{"line":3,"type":"binary-expr","locations":[{"start":{"line":3,"column":5},"end":{"line":3,"column":32}},{"start":{"line":3,"column":36},"end":{"line":3,"column":47}},{"start":{"line":3,"column":51},"end":{"line":3,"column":65}},{"start":{"line":3,"column":69},"end":{"line":3,"column":92}}]},"3":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":2},"end":{"line":15,"column":2}},{"start":{"line":15,"column":2},"end":{"line":15,"column":2}}]},"4":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]},"5":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]},"6":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":6},"end":{"line":35,"column":15}},{"start":{"line":35,"column":19},"end":{"line":35,"column":22}},{"start":{"line":35,"column":26},"end":{"line":35,"column":61}},{"start":{"line":36,"column":4},"end":{"line":36,"column":33}},{"start":{"line":36,"column":37},"end":{"line":36,"column":85}}]}},"code":["(function () {","","\tif (typeof self === 'undefined' || !self.Prism || !self.document || !Prism.languages.markup) {","\t\treturn;","\t}","","\tPrism.plugins.UnescapedMarkup = true;","","\tPrism.hooks.add('before-highlightall', function (env) {","\t\tenv.selector += \", .lang-markup script[type='text/plain'], .language-markup script[type='text/plain']\" +","\t\t                \", script[type='text/plain'].lang-markup, script[type='text/plain'].language-markup\";","\t});","","\tPrism.hooks.add('before-sanity-check', function (env) {","\t\tif (env.language != \"markup\") {","\t\t\treturn;","\t\t}","","\t\tif (env.element.matches(\"script[type='text/plain']\")) {","\t\t\tvar code = document.createElement(\"code\");","\t\t\tvar pre = document.createElement(\"pre\");","","\t\t\tpre.className = code.className = env.element.className;","","\t\t\tenv.code = env.code.replace(/&lt;\\/script(>|&gt;)/gi, \"</scri\" + \"pt>\");","\t\t\tcode.textContent = env.code;","","\t\t\tpre.appendChild(code);","\t\t\tenv.element.parentNode.replaceChild(pre, env.element);","\t\t\tenv.element = code;","\t\t\treturn;","\t\t}","","\t\tvar pre = env.element.parentNode;","\t\tif (!env.code && pre && pre.nodeName.toLowerCase() == 'pre' &&","\t\t\t\tenv.element.childNodes.length && env.element.childNodes[0].nodeName == \"#comment\") {","\t\t\tenv.element.textContent = env.code = env.element.childNodes[0].textContent;","\t\t}","\t});","}());",""],"l":{"1":1,"3":1,"4":1,"7":0,"9":0,"10":0,"14":0,"15":0,"16":0,"19":0,"20":0,"21":0,"23":0,"25":0,"26":0,"28":0,"29":0,"30":0,"31":0,"34":0,"35":0,"37":0}},"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/wpd/prism-wpd.js":{"path":"/home/travis/build/npmtest/node-npmtest-prismjs/node_modules/prismjs/plugins/wpd/prism-wpd.js","s":{"1":1,"2":1,"3":0,"4":1,"5":1,"6":0,"7":0,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0},"b":{"1":[0,1],"2":[1,0,1,1],"3":[1,0],"4":[0,1],"5":[1,0],"6":[0,0],"7":[0,0,0,0,0,0,0,0,0,0,0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0]},"f":{"1":1,"2":0,"3":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":1},"end":{"line":1,"column":11}}},"2":{"name":"(anonymous_2)","line":55,"loc":{"start":{"line":55,"column":24},"end":{"line":55,"column":38}}},"3":{"name":"getLanguage","line":120,"loc":{"start":{"line":120,"column":0},"end":{"line":120,"column":26}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":169,"column":5}},"2":{"start":{"line":3,"column":0},"end":{"line":8,"column":1}},"3":{"start":{"line":7,"column":1},"end":{"line":7,"column":8}},"4":{"start":{"line":10,"column":0},"end":{"line":27,"column":1}},"5":{"start":{"line":12,"column":1},"end":{"line":26,"column":2}},"6":{"start":{"line":14,"column":2},"end":{"line":14,"column":66}},"7":{"start":{"line":15,"column":2},"end":{"line":15,"column":69}},"8":{"start":{"line":19,"column":2},"end":{"line":25,"column":4}},"9":{"start":{"line":29,"column":0},"end":{"line":51,"column":1}},"10":{"start":{"line":30,"column":1},"end":{"line":30,"column":67}},"11":{"start":{"line":32,"column":1},"end":{"line":50,"column":2}},"12":{"start":{"line":53,"column":0},"end":{"line":53,"column":13}},"13":{"start":{"line":55,"column":0},"end":{"line":118,"column":3}},"14":{"start":{"line":56,"column":1},"end":{"line":117,"column":2}},"15":{"start":{"line":64,"column":2},"end":{"line":116,"column":3}},"16":{"start":{"line":68,"column":3},"end":{"line":68,"column":50}},"17":{"start":{"line":70,"column":3},"end":{"line":70,"column":17}},"18":{"start":{"line":72,"column":3},"end":{"line":72,"column":45}},"19":{"start":{"line":74,"column":3},"end":{"line":110,"column":4}},"20":{"start":{"line":75,"column":4},"end":{"line":75,"column":24}},"21":{"start":{"line":77,"column":4},"end":{"line":88,"column":5}},"22":{"start":{"line":78,"column":5},"end":{"line":78,"column":27}},"23":{"start":{"line":80,"column":9},"end":{"line":88,"column":5}},"24":{"start":{"line":81,"column":5},"end":{"line":81,"column":24}},"25":{"start":{"line":83,"column":9},"end":{"line":88,"column":5}},"26":{"start":{"line":84,"column":5},"end":{"line":84,"column":41}},"27":{"start":{"line":86,"column":9},"end":{"line":88,"column":5}},"28":{"start":{"line":87,"column":5},"end":{"line":87,"column":42}},"29":{"start":{"line":90,"column":8},"end":{"line":110,"column":4}},"30":{"start":{"line":91,"column":4},"end":{"line":109,"column":5}},"31":{"start":{"line":93,"column":5},"end":{"line":93,"column":53}},"32":{"start":{"line":95,"column":5},"end":{"line":100,"column":6}},"33":{"start":{"line":96,"column":6},"end":{"line":96,"column":48}},"34":{"start":{"line":99,"column":6},"end":{"line":99,"column":24}},"35":{"start":{"line":102,"column":9},"end":{"line":109,"column":5}},"36":{"start":{"line":103,"column":5},"end":{"line":108,"column":6}},"37":{"start":{"line":104,"column":6},"end":{"line":104,"column":50}},"38":{"start":{"line":107,"column":6},"end":{"line":107,"column":24}},"39":{"start":{"line":112,"column":3},"end":{"line":112,"column":23}},"40":{"start":{"line":114,"column":3},"end":{"line":114,"column":30}},"41":{"start":{"line":115,"column":3},"end":{"line":115,"column":36}},"42":{"start":{"line":120,"column":0},"end":{"line":167,"column":1}},"43":{"start":{"line":121,"column":1},"end":{"line":121,"column":30}},"44":{"start":{"line":123,"column":1},"end":{"line":131,"column":2}},"45":{"start":{"line":124,"column":2},"end":{"line":124,"column":16}},"46":{"start":{"line":126,"column":6},"end":{"line":131,"column":2}},"47":{"start":{"line":127,"column":2},"end":{"line":127,"column":15}},"48":{"start":{"line":129,"column":6},"end":{"line":131,"column":2}},"49":{"start":{"line":130,"column":2},"end":{"line":130,"column":18}},"50":{"start":{"line":134,"column":1},"end":{"line":141,"column":2}},"51":{"start":{"line":135,"column":2},"end":{"line":135,"column":108}},"52":{"start":{"line":137,"column":2},"end":{"line":140,"column":3}},"53":{"start":{"line":138,"column":3},"end":{"line":138,"column":23}},"54":{"start":{"line":139,"column":3},"end":{"line":139,"column":17}},"55":{"start":{"line":143,"column":1},"end":{"line":143,"column":21}},"56":{"start":{"line":145,"column":1},"end":{"line":152,"column":2}},"57":{"start":{"line":146,"column":2},"end":{"line":146,"column":138}},"58":{"start":{"line":148,"column":2},"end":{"line":151,"column":3}},"59":{"start":{"line":149,"column":3},"end":{"line":149,"column":21}},"60":{"start":{"line":150,"column":3},"end":{"line":150,"column":16}},"61":{"start":{"line":154,"column":1},"end":{"line":154,"column":19}},"62":{"start":{"line":157,"column":1},"end":{"line":162,"column":2}},"63":{"start":{"line":158,"column":2},"end":{"line":161,"column":3}},"64":{"start":{"line":159,"column":3},"end":{"line":159,"column":24}},"65":{"start":{"line":160,"column":3},"end":{"line":160,"column":19}},"66":{"start":{"line":164,"column":1},"end":{"line":164,"column":22}},"67":{"start":{"line":166,"column":1},"end":{"line":166,"column":13}}},"branchMap":{"1":{"line":3,"type":"if","locations":[{"start":{"line":3,"column":0},"end":{"line":3,"column":0}},{"start":{"line":3,"column":0},"end":{"line":3,"column":0}}]},"2":{"line":4,"type":"binary-expr","locations":[{"start":{"line":4,"column":1},"end":{"line":4,"column":28}},{"start":{"line":4,"column":32},"end":{"line":4,"column":43}},{"start":{"line":5,"column":1},"end":{"line":5,"column":30}},{"start":{"line":5,"column":34},"end":{"line":5,"column":47}}]},"3":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":0},"end":{"line":10,"column":0}},{"start":{"line":10,"column":0},"end":{"line":10,"column":0}}]},"4":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},{"start":{"line":12,"column":1},"end":{"line":12,"column":1}}]},"5":{"line":29,"type":"if","locations":[{"start":{"line":29,"column":0},"end":{"line":29,"column":0}},{"start":{"line":29,"column":0},"end":{"line":29,"column":0}}]},"6":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":1},"end":{"line":56,"column":1}},{"start":{"line":56,"column":1},"end":{"line":56,"column":1}}]},"7":{"line":56,"type":"binary-expr","locations":[{"start":{"line":56,"column":6},"end":{"line":56,"column":26}},{"start":{"line":57,"column":6},"end":{"line":57,"column":28}},{"start":{"line":57,"column":32},"end":{"line":57,"column":61}},{"start":{"line":58,"column":6},"end":{"line":58,"column":24}},{"start":{"line":58,"column":27},"end":{"line":58,"column":57}},{"start":{"line":59,"column":6},"end":{"line":59,"column":32}},{"start":{"line":59,"column":35},"end":{"line":59,"column":65}},{"start":{"line":60,"column":6},"end":{"line":60,"column":34}},{"start":{"line":60,"column":37},"end":{"line":60,"column":68}},{"start":{"line":61,"column":12},"end":{"line":61,"column":35}},{"start":{"line":61,"column":39},"end":{"line":61,"column":72}},{"start":{"line":62,"column":7},"end":{"line":62,"column":38}}]},"8":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":2},"end":{"line":64,"column":2}},{"start":{"line":64,"column":2},"end":{"line":64,"column":2}}]},"9":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":6},"end":{"line":64,"column":27}},{"start":{"line":65,"column":6},"end":{"line":65,"column":28}},{"start":{"line":66,"column":6},"end":{"line":66,"column":30}}]},"10":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":3},"end":{"line":74,"column":3}},{"start":{"line":74,"column":3},"end":{"line":74,"column":3}}]},"11":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":7},"end":{"line":74,"column":28}},{"start":{"line":74,"column":32},"end":{"line":74,"column":54}}]},"12":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":4},"end":{"line":77,"column":4}},{"start":{"line":77,"column":4},"end":{"line":77,"column":4}}]},"13":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":9},"end":{"line":80,"column":9}},{"start":{"line":80,"column":9},"end":{"line":80,"column":9}}]},"14":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":9},"end":{"line":83,"column":9}},{"start":{"line":83,"column":9},"end":{"line":83,"column":9}}]},"15":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":9},"end":{"line":86,"column":9}},{"start":{"line":86,"column":9},"end":{"line":86,"column":9}}]},"16":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":8},"end":{"line":90,"column":8}},{"start":{"line":90,"column":8},"end":{"line":90,"column":8}}]},"17":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":91,"column":4}},{"start":{"line":91,"column":4},"end":{"line":91,"column":4}}]},"18":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":16},"end":{"line":93,"column":40}},{"start":{"line":93,"column":44},"end":{"line":93,"column":52}}]},"19":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":5},"end":{"line":95,"column":5}},{"start":{"line":95,"column":5},"end":{"line":95,"column":5}}]},"20":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":9},"end":{"line":102,"column":9}},{"start":{"line":102,"column":9},"end":{"line":102,"column":9}}]},"21":{"line":103,"type":"if","locations":[{"start":{"line":103,"column":5},"end":{"line":103,"column":5}},{"start":{"line":103,"column":5},"end":{"line":103,"column":5}}]},"22":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":1},"end":{"line":123,"column":1}},{"start":{"line":123,"column":1},"end":{"line":123,"column":1}}]},"23":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":6},"end":{"line":126,"column":6}},{"start":{"line":126,"column":6},"end":{"line":126,"column":6}}]},"24":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":6},"end":{"line":129,"column":6}},{"start":{"line":129,"column":6},"end":{"line":129,"column":6}}]},"25":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":1},"end":{"line":134,"column":1}},{"start":{"line":134,"column":1},"end":{"line":134,"column":1}}]},"26":{"line":134,"type":"binary-expr","locations":[{"start":{"line":134,"column":5},"end":{"line":134,"column":26}},{"start":{"line":134,"column":30},"end":{"line":134,"column":61}}]},"27":{"line":135,"type":"binary-expr","locations":[{"start":{"line":135,"column":23},"end":{"line":135,"column":97}},{"start":{"line":135,"column":101},"end":{"line":135,"column":103}}]},"28":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":2},"end":{"line":137,"column":2}},{"start":{"line":137,"column":2},"end":{"line":137,"column":2}}]},"29":{"line":137,"type":"binary-expr","locations":[{"start":{"line":137,"column":6},"end":{"line":137,"column":19}},{"start":{"line":137,"column":23},"end":{"line":137,"column":49}}]},"30":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":1},"end":{"line":145,"column":1}},{"start":{"line":145,"column":1},"end":{"line":145,"column":1}}]},"31":{"line":145,"type":"binary-expr","locations":[{"start":{"line":145,"column":5},"end":{"line":145,"column":24}},{"start":{"line":145,"column":28},"end":{"line":145,"column":59}}]},"32":{"line":146,"type":"binary-expr","locations":[{"start":{"line":146,"column":22},"end":{"line":146,"column":127}},{"start":{"line":146,"column":131},"end":{"line":146,"column":133}}]},"33":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":2},"end":{"line":148,"column":2}},{"start":{"line":148,"column":2},"end":{"line":148,"column":2}}]},"34":{"line":148,"type":"binary-expr","locations":[{"start":{"line":148,"column":6},"end":{"line":148,"column":18}},{"start":{"line":148,"column":22},"end":{"line":148,"column":47}}]},"35":{"line":157,"type":"if","locations":[{"start":{"line":157,"column":1},"end":{"line":157,"column":1}},{"start":{"line":157,"column":1},"end":{"line":157,"column":1}}]},"36":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":2},"end":{"line":158,"column":2}},{"start":{"line":158,"column":2},"end":{"line":158,"column":2}}]}},"code":["(function(){","","if (","\ttypeof self !== 'undefined' && !self.Prism ||","\ttypeof global !== 'undefined' && !global.Prism",") {","\treturn;","}","","if (Prism.languages.css) {","\t// check whether the selector is an advanced pattern before extending it","\tif (Prism.languages.css.selector.pattern)","\t{","\t\tPrism.languages.css.selector.inside['pseudo-class'] = /:[\\w-]+/;","\t\tPrism.languages.css.selector.inside['pseudo-element'] = /::[\\w-]+/;","\t}","\telse","\t{","\t\tPrism.languages.css.selector = {","\t\t\tpattern: Prism.languages.css.selector,","\t\t\tinside: {","\t\t\t\t'pseudo-class': /:[\\w-]+/,","\t\t\t\t'pseudo-element': /::[\\w-]+/","\t\t\t}","\t\t};","\t}","}","","if (Prism.languages.markup) {","\tPrism.languages.markup.tag.inside.tag.inside['tag-id'] = /[\\w-]+/;","\t","\tvar Tags = {","\t\tHTML: {","\t\t\t'a': 1, 'abbr': 1, 'acronym': 1, 'b': 1, 'basefont': 1, 'bdo': 1, 'big': 1, 'blink': 1, 'cite': 1, 'code': 1, 'dfn': 1, 'em': 1, 'kbd': 1,  'i': 1, ","\t\t\t'rp': 1, 'rt': 1, 'ruby': 1, 's': 1, 'samp': 1, 'small': 1, 'spacer': 1, 'strike': 1, 'strong': 1, 'sub': 1, 'sup': 1, 'time': 1, 'tt': 1,  'u': 1, ","\t\t\t'var': 1, 'wbr': 1, 'noframes': 1, 'summary': 1, 'command': 1, 'dt': 1, 'dd': 1, 'figure': 1, 'figcaption': 1, 'center': 1, 'section': 1, 'nav': 1,","\t\t\t'article': 1, 'aside': 1, 'hgroup': 1, 'header': 1, 'footer': 1, 'address': 1, 'noscript': 1, 'isIndex': 1, 'main': 1, 'mark': 1, 'marquee': 1,","\t\t\t'meter': 1, 'menu': 1","\t\t},","\t\tSVG: {","\t\t\t'animateColor': 1, 'animateMotion': 1, 'animateTransform': 1, 'glyph': 1, 'feBlend': 1, 'feColorMatrix': 1, 'feComponentTransfer': 1, ","\t\t\t'feFuncR': 1, 'feFuncG': 1, 'feFuncB': 1, 'feFuncA': 1, 'feComposite': 1, 'feConvolveMatrix': 1, 'feDiffuseLighting': 1, 'feDisplacementMap': 1, ","\t\t\t'feFlood': 1, 'feGaussianBlur': 1, 'feImage': 1, 'feMerge': 1, 'feMergeNode': 1, 'feMorphology': 1, 'feOffset': 1, 'feSpecularLighting': 1, ","\t\t\t'feTile': 1, 'feTurbulence': 1, 'feDistantLight': 1, 'fePointLight': 1, 'feSpotLight': 1, 'linearGradient': 1, 'radialGradient': 1, 'altGlyph': 1, ","\t\t\t'textPath': 1, 'tref': 1, 'altglyph': 1, 'textpath': 1, 'altglyphdef': 1, 'altglyphitem': 1, 'clipPath': 1, 'color-profile': 1, 'cursor': 1,","\t\t\t'font-face': 1, 'font-face-format': 1, 'font-face-name': 1, 'font-face-src': 1, 'font-face-uri': 1, 'foreignObject': 1, 'glyphRef': 1,","\t\t\t'hkern': 1, 'vkern': 1","\t\t},","\t\tMathML: {}","\t}","}","","var language;","","Prism.hooks.add('wrap', function(env) {","\tif ((env.type == 'tag-id'","\t\t|| (env.type == 'property' && env.content.indexOf('-') != 0)","\t\t|| (env.type == 'rule'&& env.content.indexOf('@-') != 0)","\t\t|| (env.type == 'pseudo-class'&& env.content.indexOf(':-') != 0) ","\t\t|| (env.type == 'pseudo-element'&& env.content.indexOf('::-') != 0) ","        || (env.type == 'attr-name' && env.content.indexOf('data-') != 0)","\t\t) && env.content.indexOf('<') === -1","\t) {","\t\tif (env.language == 'css'","\t\t\t|| env.language == 'scss'","\t\t\t|| env.language == 'markup'","\t\t) {","\t\t\tvar searchURL = 'w/index.php?fulltext&search=';","","\t\t\tenv.tag = 'a';","","\t\t\tvar href = 'http://docs.webplatform.org/';","","\t\t\tif (env.language == 'css' || env.language == 'scss') {","\t\t\t\thref += 'wiki/css/';","","\t\t\t\tif (env.type == 'property') {","\t\t\t\t\thref += 'properties/';","\t\t\t\t}","\t\t\t\telse if (env.type == 'rule') {","\t\t\t\t\thref += 'atrules/';","\t\t\t\t}","\t\t\t\telse if (env.type == 'pseudo-class') {","\t\t\t\t\thref += 'selectors/pseudo-classes/';","\t\t\t\t}","\t\t\t\telse if (env.type == 'pseudo-element') {","\t\t\t\t\thref += 'selectors/pseudo-elements/';","\t\t\t\t}","\t\t\t}","\t\t\telse if (env.language == 'markup') {","\t\t\t\tif (env.type == 'tag-id') {","\t\t\t\t\t// Check language","\t\t\t\t\tlanguage = getLanguage(env.content) || language;","","\t\t\t\t\tif (language) {","\t\t\t\t\t\thref += 'wiki/' + language + '/elements/';","\t\t\t\t\t}","\t\t\t\t\telse {","\t\t\t\t\t\thref += searchURL;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t\telse if (env.type == 'attr-name') {","\t\t\t\t\tif (language) {","\t\t\t\t\t\thref += 'wiki/' + language + '/attributes/';","\t\t\t\t\t}","\t\t\t\t\telse {","\t\t\t\t\t\thref += searchURL;","\t\t\t\t\t}","\t\t\t\t}","\t\t\t}","","\t\t\thref += env.content;","","\t\t\tenv.attributes.href = href;","\t\t\tenv.attributes.target = '_blank';","\t\t}","\t}","});","","function getLanguage(tag) {","\tvar tagL = tag.toLowerCase();","\t","\tif (Tags.HTML[tagL]) {","\t\treturn 'html';","\t}","\telse if (Tags.SVG[tag]) {","\t\treturn 'svg';","\t}","\telse if (Tags.MathML[tag]) {","\t\treturn 'mathml';","\t}","\t","\t// Not in dictionary, perform check","\tif (Tags.HTML[tagL] !== 0 && typeof document !== 'undefined') {","\t\tvar htmlInterface = (document.createElement(tag).toString().match(/\\[object HTML(.+)Element\\]/) || [])[1];","\t\t","\t\tif (htmlInterface && htmlInterface != 'Unknown') {","\t\t\tTags.HTML[tagL] = 1;","\t\t\treturn 'html';","\t\t}","\t}","\t","\tTags.HTML[tagL] = 0;","\t","\tif (Tags.SVG[tag] !== 0 && typeof document !== 'undefined') {","\t\tvar svgInterface = (document.createElementNS('http://www.w3.org/2000/svg', tag).toString().match(/\\[object SVG(.+)Element\\]/) || [])[1];","\t\t","\t\tif (svgInterface && svgInterface != 'Unknown') {","\t\t\tTags.SVG[tag] = 1;","\t\t\treturn 'svg';","\t\t}","\t}","\t","\tTags.SVG[tag] = 0;","\t","\t// Lame way to detect MathML, but browsers don’t expose interface names there :(","\tif (Tags.MathML[tag] !== 0) {","\t\tif (tag.indexOf('m') === 0) {","\t\t\tTags.MathML[tag] = 1;","\t\t\treturn 'mathml';","\t\t}","\t}","\t","\tTags.MathML[tag] = 0;","\t","\treturn null;","}","","})();"],"l":{"1":1,"3":1,"7":0,"10":1,"12":1,"14":0,"15":0,"19":1,"29":1,"30":1,"32":1,"53":1,"55":1,"56":0,"64":0,"68":0,"70":0,"72":0,"74":0,"75":0,"77":0,"78":0,"80":0,"81":0,"83":0,"84":0,"86":0,"87":0,"90":0,"91":0,"93":0,"95":0,"96":0,"99":0,"102":0,"103":0,"104":0,"107":0,"112":0,"114":0,"115":0,"120":1,"121":0,"123":0,"124":0,"126":0,"127":0,"129":0,"130":0,"134":0,"135":0,"137":0,"138":0,"139":0,"143":0,"145":0,"146":0,"148":0,"149":0,"150":0,"154":0,"157":0,"158":0,"159":0,"160":0,"164":0,"166":0}}}